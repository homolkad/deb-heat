# Translations template for heat.
# Copyright (C) 2015 ORGANIZATION
# This file is distributed under the same license as the heat project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2015.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: heat 2015.1.dev298\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2015-03-11 06:06+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 1.3\n"

#: heat/api/aws/ec2token.py:34
msgid "Authentication Endpoint URI."
msgstr ""

#: heat/api/aws/ec2token.py:37 heat/common/config.py:182
msgid "Allow orchestration of multiple clouds."
msgstr ""

#: heat/api/aws/ec2token.py:40 heat/common/config.py:185
msgid ""
"Allowed keystone endpoints for auth_uri when multi_cloud is enabled. At "
"least one endpoint needs to be specified."
msgstr ""

#: heat/api/aws/ec2token.py:163
msgid "Service misconfigured"
msgstr ""

#: heat/api/aws/exception.py:38
msgid "Generic HeatAPIException, please use specific subclasses!"
msgstr ""

#: heat/api/aws/exception.py:77
msgid "The request signature does not conform to AWS standards"
msgstr ""

#: heat/api/aws/exception.py:86
msgid "The request processing has failed due to an internal error"
msgstr ""

#: heat/api/aws/exception.py:97
msgid "The action or operation requested is invalid"
msgstr ""

#: heat/api/aws/exception.py:106
msgid "The certificate or AWS Key ID provided does not exist"
msgstr ""

#: heat/api/aws/exception.py:115
msgid "Incompatible parameters were used together"
msgstr ""

#: heat/api/aws/exception.py:124
msgid "A bad or out-of-range value was supplied"
msgstr ""

#: heat/api/aws/exception.py:133
msgid "AWS query string is malformed, does not adhere to AWS spec"
msgstr ""

#: heat/api/aws/exception.py:143
msgid "The query string is malformed"
msgstr ""

#: heat/api/aws/exception.py:152
msgid "The request is missing an action or operation parameter"
msgstr ""

#: heat/api/aws/exception.py:165
msgid "Does not contain a valid AWS Access Key or certificate"
msgstr ""

#: heat/api/aws/exception.py:177
msgid "A mandatory input parameter is missing"
msgstr ""

#: heat/api/aws/exception.py:186
msgid "The AWS Access Key ID needs a subscription for the service"
msgstr ""

#: heat/api/aws/exception.py:200
msgid "Request expired or more than 15mins in the future"
msgstr ""

#: heat/api/aws/exception.py:209
msgid "Service temporarily unavailable"
msgstr ""

#: heat/api/aws/exception.py:219
msgid "Request was denied due to request throttling"
msgstr ""

#: heat/api/aws/exception.py:228
msgid "Resource with the name requested already exists"
msgstr ""

#: heat/api/aws/exception.py:242
msgid "User is not authorized to perform action"
msgstr ""

#: heat/api/aws/exception.py:251
msgid ""
"The request signature we calculated does not match the signature you "
"provided"
msgstr ""

#: heat/api/aws/exception.py:262
msgid "The requested action is not yet implemented"
msgstr ""

#: heat/api/cfn/v1/stacks.py:56 heat/api/cloudwatch/watch.py:51
#, python-format
msgid "Action %s not allowed for user"
msgstr ""

#: heat/api/cfn/v1/stacks.py:63 heat/api/cloudwatch/watch.py:58
#, python-format
msgid "Error authorizing action %s"
msgstr ""

#: heat/api/cfn/v1/stacks.py:259
#, python-format
msgid "Failed to fetch template: %s"
msgstr ""

#: heat/api/cfn/v1/stacks.py:294
msgid "DisableRollback and OnFailure may not be used together"
msgstr ""

#: heat/api/cfn/v1/stacks.py:314
#, python-format
msgid "Unexpected action %(action)s"
msgstr ""

#: heat/api/cfn/v1/stacks.py:332 heat/api/cfn/v1/stacks.py:428
msgid "Invalid Template URL"
msgstr ""

#: heat/api/cfn/v1/stacks.py:336 heat/api/cfn/v1/stacks.py:431
msgid "TemplateBody or TemplateUrl were not given."
msgstr ""

#: heat/api/cfn/v1/stacks.py:342 heat/api/cfn/v1/stacks.py:437
msgid "The Template must be a JSON or YAML document."
msgstr ""

#: heat/api/cfn/v1/stacks.py:398
msgid "stack not not found"
msgstr ""

#: heat/api/cloudwatch/watch.py:302
#, python-format
msgid "Invalid state %(state)s, expecting one of %(expect)s"
msgstr ""

#: heat/api/openstack/v1/actions.py:49
msgid "No action specified"
msgstr ""

#: heat/api/openstack/v1/actions.py:52
msgid "Multiple actions specified"
msgstr ""

#: heat/api/openstack/v1/actions.py:56
#, python-format
msgid "Invalid action %s specified"
msgstr ""

#: heat/api/openstack/v1/actions.py:67
#, python-format
msgid "Unexpected action %s"
msgstr ""

#: heat/api/openstack/v1/events.py:135
#, python-format
msgid "No events found for resource %s"
msgstr ""

#: heat/api/openstack/v1/events.py:153
#, python-format
msgid "No event %s found"
msgstr ""

#: heat/api/openstack/v1/services.py:43
msgid "All heat engines are down."
msgstr ""

#: heat/api/openstack/v1/stacks.py:85
#, python-format
msgid "%(type)s not in valid format: %(error)s"
msgstr ""

#: heat/api/openstack/v1/stacks.py:93
msgid "No stack name specified"
msgstr ""

#: heat/api/openstack/v1/stacks.py:107 heat/engine/api.py:62
#, python-format
msgid "Invalid adopt data: %s"
msgstr ""

#: heat/api/openstack/v1/stacks.py:119
#, python-format
msgid "Could not retrieve template: %s"
msgstr ""

#: heat/api/openstack/v1/stacks.py:122
msgid "No template specified"
msgstr ""

#: heat/api/openstack/v1/util.py:64
msgid "Invalid Stack address"
msgstr ""

#: heat/cmd/manage.py:56
msgid "Hostname"
msgstr ""

#: heat/cmd/manage.py:57
msgid "Binary"
msgstr ""

#: heat/cmd/manage.py:58
msgid "Engine_Id"
msgstr ""

#: heat/cmd/manage.py:59
msgid "Host"
msgstr ""

#: heat/cmd/manage.py:60
msgid "Topic"
msgstr ""

#: heat/cmd/manage.py:61
msgid "Status"
msgstr ""

#: heat/cmd/manage.py:62
msgid "Updated At"
msgstr ""

#: heat/cmd/manage.py:101
msgid "How long to preserve deleted data."
msgstr ""

#: heat/cmd/manage.py:105
msgid "Granularity to use for age argument, defaults to days."
msgstr ""

#: heat/common/auth_url.py:44
msgid "Request missing required header X-Auth-Url"
msgstr ""

#: heat/common/auth_url.py:48
#, python-format
msgid "Header X-Auth-Url \"%s\" not an allowed endpoint"
msgstr ""

#: heat/common/config.py:30
msgid "The flavor to use."
msgstr ""

#: heat/common/config.py:32
msgid "The API paste config file to use."
msgstr ""

#: heat/common/config.py:38
msgid "Seconds between running periodic tasks."
msgstr ""

#: heat/common/config.py:41
msgid "URL of the Heat metadata server."
msgstr ""

#: heat/common/config.py:44
msgid "URL of the Heat waitcondition server."
msgstr ""

#: heat/common/config.py:47
msgid "URL of the Heat CloudWatch server."
msgstr ""

#: heat/common/config.py:50
msgid "Instance connection to CFN/CW API via https."
msgstr ""

#: heat/common/config.py:53
msgid "Instance connection to CFN/CW API validate certs if SSL is used."
msgstr ""

#: heat/common/config.py:56
msgid "Default region name used to get services endpoints."
msgstr ""

#: heat/common/config.py:59
msgid "Keystone role for heat template-defined users."
msgstr ""

#: heat/common/config.py:63
msgid ""
"Keystone domain ID which contains heat template-defined users. If this "
"option is set, stack_user_domain_name option will be ignored."
msgstr ""

#: heat/common/config.py:67
msgid ""
"Keystone domain name which contains heat template-defined users. If "
"`stack_user_domain_id` option is set, this option is ignored."
msgstr ""

#: heat/common/config.py:71
msgid ""
"Keystone username, a user with roles sufficient to manage users and "
"projects in the stack_user_domain."
msgstr ""

#: heat/common/config.py:75
msgid "Keystone password for stack_domain_admin user."
msgstr ""

#: heat/common/config.py:78
msgid "Maximum raw byte size of any template."
msgstr ""

#: heat/common/config.py:81
msgid "Maximum depth allowed when using nested stacks."
msgstr ""

#: heat/common/config.py:84
msgid "Number of heat-engine processes to fork and run."
msgstr ""

#: heat/common/config.py:89
msgid ""
"The default user for new instances. This option is deprecated and will be"
" removed in the Juno release. If it's empty, Heat will use the default "
"user set up with your cloud image (for OS::Nova::Server) or 'ec2-user' "
"(for AWS::EC2::Instance)."
msgstr ""

#: heat/common/config.py:96
msgid "List of directories to search for plug-ins."
msgstr ""

#: heat/common/config.py:99
msgid "The directory to search for environment files."
msgstr ""

#: heat/common/config.py:103
msgid "Select deferred auth method, stored password or trusts."
msgstr ""

#: heat/common/config.py:107
msgid ""
"Subset of trustor roles to be delegated to heat. If left unset, all roles"
" of a user will be delegated to heat when creating a stack."
msgstr ""

#: heat/common/config.py:112
msgid "Maximum resources allowed per top-level stack."
msgstr ""

#: heat/common/config.py:115
msgid "Maximum number of stacks any one tenant may have active at one time."
msgstr ""

#: heat/common/config.py:119
msgid ""
"Number of times to retry to bring a resource to a non-error state. Set to"
" 0 to disable retries."
msgstr ""

#: heat/common/config.py:124
msgid ""
"Controls how many events will be pruned whenever a stack's events exceed "
"max_events_per_stack. Set this lower to keep more events at the expense "
"of more frequent purges."
msgstr ""

#: heat/common/config.py:130
msgid ""
"Maximum events that will be available per stack. Older events will be "
"deleted when this is reached. Set to 0 for unlimited events per stack."
msgstr ""

#: heat/common/config.py:135
msgid "Timeout in seconds for stack action (ie. create or update)."
msgstr ""

#: heat/common/config.py:139
msgid "Error wait time in seconds for stack action (ie. create or update)."
msgstr ""

#: heat/common/config.py:143
msgid "RPC timeout for the engine liveness check that is used for stack locking."
msgstr ""

#: heat/common/config.py:147
msgid "Enable the legacy OS::Heat::CWLiteAlarm resource."
msgstr ""

#: heat/common/config.py:150
msgid "Enable the preview Stack Abandon feature."
msgstr ""

#: heat/common/config.py:153
msgid "Enable the preview Stack Adopt feature."
msgstr ""

#: heat/common/config.py:156
msgid ""
"Enables engine with convergence architecture. All stacks with this option"
" will be created using convergence engine ."
msgstr ""

#: heat/common/config.py:160
msgid "Deprecated."
msgstr ""

#: heat/common/config.py:165
msgid ""
"Name of the engine node. This can be an opaque identifier. It is not "
"necessarily a hostname, FQDN, or IP address."
msgstr ""

#: heat/common/config.py:173
msgid "If False fully disable profiling feature."
msgstr ""

#: heat/common/config.py:175
msgid "If False do not trace SQL requests."
msgstr ""

#: heat/common/config.py:193 heat/common/config.py:213
msgid ""
"Type of endpoint in Identity service catalog to use for communication "
"with the OpenStack service."
msgstr ""

#: heat/common/config.py:197 heat/common/config.py:217
msgid "Optional CA cert file to use in SSL connections."
msgstr ""

#: heat/common/config.py:199 heat/common/config.py:219
msgid "Optional PEM-formatted certificate chain file."
msgstr ""

#: heat/common/config.py:201 heat/common/config.py:221
msgid "Optional PEM-formatted file that contains the private key."
msgstr ""

#: heat/common/config.py:205 heat/common/config.py:224
msgid "If set, then the server's certificate will not be verified."
msgstr ""

#: heat/common/config.py:230
#, python-format
msgid "Optional heat url in format like http://0.0.0.0:8004/v1/%(tenant_id)s."
msgstr ""

#: heat/common/config.py:236
msgid "Allow client's debug log output."
msgstr ""

#: heat/common/config.py:242
msgid ""
"Heat build revision. If you would prefer to manage your build revision "
"separately, you can move this section to a different file and add it as "
"another config option."
msgstr ""

#: heat/common/config.py:321
msgid "Unable to locate config file"
msgstr ""

#: heat/common/config.py:333
#, python-format
msgid ""
"Unable to load %(app_name)s from configuration file %(conf_file)s.\n"
"Got: %(e)r"
msgstr ""

#: heat/common/custom_backend_auth.py:61
msgid "Backend authentication failed"
msgstr ""

#: heat/common/environment_format.py:40
msgid "The environment is not a valid YAML mapping data type."
msgstr ""

#: heat/common/environment_format.py:44
#, python-format
msgid "environment has wrong section \"%s\""
msgstr ""

#: heat/common/exception.py:103
msgid "An unknown exception occurred."
msgstr ""

#: heat/common/exception.py:132
#, python-format
msgid "Missing required credential: %(required)s"
msgstr ""

#: heat/common/exception.py:136
#, python-format
msgid ""
"Incorrect auth strategy, expected \"%(expected)s\" but received "
"\"%(received)s\""
msgstr ""

#: heat/common/exception.py:141
#, python-format
msgid "Connect error/bad request to Auth service at URL %(url)s."
msgstr ""

#: heat/common/exception.py:145
#, python-format
msgid "Auth service at URL %(url)s not found."
msgstr ""

#: heat/common/exception.py:149
msgid "Authorization failed."
msgstr ""

#: heat/common/exception.py:153
msgid "You are not authenticated."
msgstr ""

#: heat/common/exception.py:157 heat/common/exception.py:162
msgid "You are not authorized to complete this action."
msgstr ""

#: heat/common/exception.py:166
#, python-format
msgid "Data supplied was not valid: %(reason)s"
msgstr ""

#: heat/common/exception.py:170
#, python-format
msgid "Redirecting to %(uri)s for authorization."
msgstr ""

#: heat/common/exception.py:174
msgid "The URI was too long."
msgstr ""

#: heat/common/exception.py:178
#, python-format
msgid "Maximum redirects (%(redirects)s) was exceeded."
msgstr ""

#: heat/common/exception.py:182
msgid "Received invalid HTTP redirect."
msgstr ""

#: heat/common/exception.py:186
#, python-format
msgid ""
"Multiple 'image' service matches for region %(region)s. This generally "
"means that a region is required and you have not supplied one."
msgstr ""

#: heat/common/exception.py:192
#, python-format
msgid "The Parameter (%(key)s) was not provided."
msgstr ""

#: heat/common/exception.py:196
#, python-format
msgid "The Parameter (%(key)s) was not defined in template."
msgstr ""

#: heat/common/exception.py:200
#, python-format
msgid "The template version is invalid: %(explanation)s"
msgstr ""

#: heat/common/exception.py:204
#, python-format
msgid "The template section is invalid: %(section)s"
msgstr ""

#: heat/common/exception.py:208
#, python-format
msgid "The Parameter (%(key)s) has no attributes."
msgstr ""

#: heat/common/exception.py:212
#, python-format
msgid "The Referenced Attribute (%(resource)s %(key)s) is incorrect."
msgstr ""

#: heat/common/exception.py:217
#, python-format
msgid "The specified reference \"%(resource)s\" (in %(key)s) is incorrect."
msgstr ""

#: heat/common/exception.py:222
#, python-format
msgid "The Key (%(key_name)s) could not be found."
msgstr ""

#: heat/common/exception.py:226
#, python-format
msgid "The Flavor ID (%(flavor_id)s) could not be found."
msgstr ""

#: heat/common/exception.py:230
#, python-format
msgid "The Image (%(image_name)s) could not be found."
msgstr ""

#: heat/common/exception.py:234
#, python-format
msgid "The server (%(server)s) could not be found."
msgstr ""

#: heat/common/exception.py:238
#, python-format
msgid "The Volume (%(volume)s) could not be found."
msgstr ""

#: heat/common/exception.py:242
#, python-format
msgid "The VolumeSnapshot (%(snapshot)s) could not be found."
msgstr ""

#: heat/common/exception.py:246
#, python-format
msgid "The VolumeType (%(volume_type)s) could not be found."
msgstr ""

#: heat/common/exception.py:250
#, python-format
msgid "The Nova network (%(network)s) could not be found."
msgstr ""

#: heat/common/exception.py:254
#, python-format
msgid "Multiple physical resources were found with name (%(name)s)."
msgstr ""

#: heat/common/exception.py:259
#, python-format
msgid "Searching Tenant %(target)s from Tenant %(actual)s forbidden."
msgstr ""

#: heat/common/exception.py:264
#, python-format
msgid "The Stack (%(stack_name)s) could not be found."
msgstr ""

#: heat/common/exception.py:268
#, python-format
msgid "The Stack (%(stack_name)s) already exists."
msgstr ""

#: heat/common/exception.py:272
#, python-format
msgid "%(error)s%(path)s%(message)s"
msgstr ""

#: heat/common/exception.py:310
#, python-format
msgid "%(message)s"
msgstr ""

#: heat/common/exception.py:314
#, python-format
msgid ""
"The Resource (%(resource_name)s) could not be found in Stack "
"%(stack_name)s."
msgstr ""

#: heat/common/exception.py:319
#, python-format
msgid "The Resource Type (%(type_name)s) could not be found."
msgstr ""

#: heat/common/exception.py:323
#, python-format
msgid "The Resource (%(resource_name)s) is not available."
msgstr ""

#: heat/common/exception.py:327
#, python-format
msgid "The Resource (%(resource_id)s) could not be found."
msgstr ""

#: heat/common/exception.py:331
#, python-format
msgid "The Watch Rule (%(watch_name)s) could not be found."
msgstr ""

#: heat/common/exception.py:335
#, python-format
msgid "%(exc_type)s: %(message)s"
msgstr ""

#: heat/common/exception.py:349
#, python-format
msgid "%(feature)s is not supported."
msgstr ""

#: heat/common/exception.py:353
#, python-format
msgid "%(action)s is not supported for resource."
msgstr ""

#: heat/common/exception.py:357
#, python-format
msgid "Cannot define the following properties at the same time: %(props)s."
msgstr ""

#: heat/common/exception.py:367
#, python-format
msgid "At least one of the following properties must be specified: %(props)s"
msgstr ""

#: heat/common/exception.py:387
msgid ""
"Egress rules are only allowed when Neutron is used and the 'VpcId' "
"property is set."
msgstr ""

#: heat/common/exception.py:399
msgid "Not found"
msgstr ""

#: heat/common/exception.py:405
#, python-format
msgid "Invalid content type %(content_type)s"
msgstr ""

#: heat/common/exception.py:409
#, python-format
msgid "Request limit exceeded: %(message)s"
msgstr ""

#: heat/common/exception.py:413
msgid "Maximum resources per stack exceeded."
msgstr ""

#: heat/common/exception.py:417
#, python-format
msgid "Stack %(stack_name)s already has an action (%(action)s) in progress."
msgstr ""

#: heat/common/exception.py:422
#, python-format
msgid "Failed to stop stack (%(stack_name)s) on other engine (%(engine_id)s)"
msgstr ""

#: heat/common/exception.py:427
#, python-format
msgid ""
"Failed to send message to stack (%(stack_name)s) on other engine "
"(%(engine_id)s)"
msgstr ""

#: heat/common/exception.py:432
#, python-format
msgid "Service %(service_id)s does not found"
msgstr ""

#: heat/common/heat_keystoneclient.py:107
msgid ""
"heat.conf misconfigured, cannot specify \"stack_user_domain_id\" or "
"\"stack_user_domain_name\" without \"stack_domain_admin\" and "
"\"stack_domain_admin_password\""
msgstr ""

#: heat/common/heat_keystoneclient.py:261
#, python-format
msgid "roles %s"
msgstr ""

#: heat/common/heat_keystoneclient.py:314
#: heat/common/heat_keystoneclient.py:388
#, python-format
msgid "Can't find role %s"
msgstr ""

#: heat/common/heat_keystoneclient.py:324
msgid ""
"Cannot get stack domain user token, no stack domain id configured, please"
" fix your heat.conf"
msgstr ""

#: heat/common/heat_keystoneclient.py:408
#, python-format
msgid "User %s in invalid domain"
msgstr ""

#: heat/common/heat_keystoneclient.py:410
#, python-format
msgid "User %s in invalid project"
msgstr ""

#: heat/common/identifier.py:43
msgid "Stack name may not contain \"/\""
msgstr ""

#: heat/common/identifier.py:57
#, python-format
msgid "\"%s\" is not a valid ARN"
msgstr ""

#: heat/common/identifier.py:63
#, python-format
msgid "\"%s\" is not a valid Heat ARN"
msgstr ""

#: heat/common/identifier.py:80
#, python-format
msgid "\"%s\" is not a valid URL"
msgstr ""

#: heat/common/identifier.py:86
#, python-format
msgid "\"%s\" is not a valid ARN URL"
msgstr ""

#: heat/common/identifier.py:139 heat/common/identifier.py:146
#, python-format
msgid "Unknown attribute \"%s\""
msgstr ""

#: heat/common/identifier.py:179 heat/engine/resource.py:142
msgid "Resource name may not contain \"/\""
msgstr ""

#: heat/common/param_utils.py:25
#, python-format
msgid "Unrecognized value \"%(value)s\", acceptable values are: true, false."
msgstr ""

#: heat/common/param_utils.py:35
#, python-format
msgid "Only integer is acceptable by '%(name)s'."
msgstr ""

#: heat/common/param_utils.py:41
#, python-format
msgid "Only non-zero integer is acceptable by '%(name)s'."
msgstr ""

#: heat/common/param_utils.py:46
#, python-format
msgid "Value '%(value)s' is invalid for '%(name)s' which only accepts integer."
msgstr ""

#: heat/common/param_utils.py:51
#, python-format
msgid ""
"Value '%(value)s' is invalid for '%(name)s' which only accepts non-"
"negative integer."
msgstr ""

#: heat/common/short_id.py:46
#, python-format
msgid "Invalid UUID version (%d)"
msgstr ""

#: heat/common/template_format.py:59
#, python-format
msgid "Error parsing template: %s"
msgstr ""

#: heat/common/template_format.py:66
msgid "The template is not a JSON object or YAML mapping."
msgstr ""

#: heat/common/template_format.py:79
#, python-format
msgid "Template exceeds maximum allowed size (%s bytes)"
msgstr ""

#: heat/common/template_format.py:87
msgid "Template format version not found."
msgstr ""

#: heat/common/timeutils.py:36
msgid "Only ISO 8601 duration format of the form PT#H#M#S is supported."
msgstr ""

#: heat/common/urlfetch.py:48
#, python-format
msgid "Invalid URL scheme %s"
msgstr ""

#: heat/common/urlfetch.py:54 heat/common/urlfetch.py:78
#, python-format
msgid "Failed to retrieve template: %s"
msgstr ""

#: heat/common/wsgi.py:60 heat/common/wsgi.py:94 heat/common/wsgi.py:128
msgid ""
"Address to bind the server. Useful when selecting a particular network "
"interface."
msgstr ""

#: heat/common/wsgi.py:64 heat/common/wsgi.py:98 heat/common/wsgi.py:132
msgid "The port on which the server will listen."
msgstr ""

#: heat/common/wsgi.py:67 heat/common/wsgi.py:101 heat/common/wsgi.py:135
msgid "Number of backlog requests to configure the socket with."
msgstr ""

#: heat/common/wsgi.py:71 heat/common/wsgi.py:105 heat/common/wsgi.py:139
msgid "Location of the SSL certificate file to use for SSL mode."
msgstr ""

#: heat/common/wsgi.py:75 heat/common/wsgi.py:109 heat/common/wsgi.py:143
msgid "Location of the SSL key file to use for enabling SSL mode."
msgstr ""

#: heat/common/wsgi.py:79 heat/common/wsgi.py:113 heat/common/wsgi.py:147
msgid "Number of workers for Heat service."
msgstr ""

#: heat/common/wsgi.py:82 heat/common/wsgi.py:116
msgid ""
"Maximum line size of message headers to be accepted. max_header_line may "
"need to be increased when using large tokens (typically those generated "
"by the Keystone v3 API with big service catalogs)."
msgstr ""

#: heat/common/wsgi.py:150
msgid ""
"Maximum line size of message headers to be accepted. max_header_line may "
"need to be increased when using large tokens (typically those generated "
"by the Keystone v3 API with big service catalogs.)"
msgstr ""

#: heat/common/wsgi.py:215
msgid ""
"When running server in SSL mode, you must specify both a cert_file and "
"key_file option value in your configuration file"
msgstr ""

#: heat/common/wsgi.py:233
#, python-format
msgid "Could not bind to %(bind_addr)safter trying for 30 seconds"
msgstr ""

#: heat/common/wsgi.py:588
#, python-format
msgid ""
"JSON body size (%(len)s bytes) exceeds maximum allowed size (%(limit)s "
"bytes)."
msgstr ""

#: heat/common/wsgi.py:661
msgid ""
"The server could not comply with the request since it is either malformed"
" or otherwise incorrect."
msgstr ""

#: heat/db/sqlalchemy/api.py:93
#, python-format
msgid "raw template with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:121
#, python-format
msgid "resource with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:153
msgid "no resources were found"
msgstr ""

#: heat/db/sqlalchemy/api.py:167
msgid "no resource data found"
msgstr ""

#: heat/db/sqlalchemy/api.py:216
msgid "No resource data found"
msgstr ""

#: heat/db/sqlalchemy/api.py:272
#, python-format
msgid "no resources for stack_id %s were found"
msgstr ""

#: heat/db/sqlalchemy/api.py:420
#, python-format
msgid "Attempt to update a stack with id: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:439
#, python-format
msgid "Attempt to delete a stack with id: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:501
msgid "Length of OS_PASSWORD after encryption exceeds Heat limit (255 chars)"
msgstr ""

#: heat/db/sqlalchemy/api.py:526
#, python-format
msgid "Attempt to delete user creds with id %(id)s that does not exist"
msgstr ""

#: heat/db/sqlalchemy/api.py:680
#, python-format
msgid "Attempt to update a watch with id: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:691
#, python-format
msgid "Attempt to delete watch_rule: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:730
#, python-format
msgid "Software config with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:757
#, python-format
msgid "Deployment with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:803
#, python-format
msgid "Snapshot with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:875
msgid "age should be an integer"
msgstr ""

#: heat/db/sqlalchemy/api.py:877
msgid "age should be a positive integer"
msgstr ""

#: heat/db/sqlalchemy/api.py:881
msgid "granularity should be days, hours, minutes, or seconds"
msgstr ""

#: heat/db/sqlalchemy/migrate_repo/versions/029_event_id_to_uuid.py:40
msgid ""
"If you really want to downgrade to this version, you should drop all the "
"records."
msgstr ""

#: heat/db/sqlalchemy/migrate_repo/versions/037_migrate_hot_template.py:65
#: heat/db/sqlalchemy/migrate_repo/versions/041_migrate_hot_template_resources.py:77
#: heat/db/sqlalchemy/migrate_repo/versions/043_migrate_template_versions.py:64
msgid ""
"This version cannot be downgraded because it involves a data migration to"
" the raw_template table."
msgstr ""

#: heat/engine/api.py:46
#, python-format
msgid "Invalid timeout value %s"
msgstr ""

#: heat/engine/attributes.py:151
#, python-format
msgid "%(resource)s: Invalid attribute %(key)s"
msgstr ""

#: heat/engine/attributes.py:193
msgid "Can't traverse attribute path"
msgstr ""

#: heat/engine/attributes.py:196
msgid "Path components in attributes must be strings"
msgstr ""

#: heat/engine/constraints.py:85
#, python-format
msgid "Invalid type (%s)"
msgstr ""

#: heat/engine/constraints.py:92
#, python-format
msgid "Single schema valid only for %(ltype)s, not %(utype)s"
msgstr ""

#: heat/engine/constraints.py:102
#, python-format
msgid "Schema valid only for %(ltype)s or %(mtype)s, not %(utype)s"
msgstr ""

#: heat/engine/constraints.py:119
#, python-format
msgid "%(name)s constraint invalid for %(utype)s"
msgstr ""

#: heat/engine/constraints.py:141 heat/engine/parameters.py:89
#, python-format
msgid "Invalid default %(default)s (%(exc)s)"
msgstr ""

#: heat/engine/constraints.py:172
#, python-format
msgid "%s is not an integer."
msgstr ""

#: heat/engine/constraints.py:181
#, python-format
msgid "Value \"%(val)s\" is invalid for data type \"%(type)s\"."
msgstr ""

#: heat/engine/constraints.py:248
#, python-format
msgid "Invalid key %s"
msgstr ""

#: heat/engine/constraints.py:338
msgid "min/max must be numeric"
msgstr ""

#: heat/engine/constraints.py:342
msgid "A range constraint must have a min value and/or a max value specified."
msgstr ""

#: heat/engine/constraints.py:347
#, python-format
msgid "The value must be at least %(min)s."
msgstr ""

#: heat/engine/constraints.py:349
#, python-format
msgid "The value must be no greater than %(max)s."
msgstr ""

#: heat/engine/constraints.py:351
#, python-format
msgid "The value must be in the range %(min)s to %(max)s."
msgstr ""

#: heat/engine/constraints.py:399
msgid "A length constraint must have a min value and/or a max value specified."
msgstr ""

#: heat/engine/constraints.py:406
msgid "min/max length must be integral"
msgstr ""

#: heat/engine/constraints.py:411
#, python-format
msgid "The length must be at least %(min)s."
msgstr ""

#: heat/engine/constraints.py:413
#, python-format
msgid "The length must be no greater than %(max)s."
msgstr ""

#: heat/engine/constraints.py:415
#, python-format
msgid "The length must be in the range %(min)s to %(max)s."
msgstr ""

#: heat/engine/constraints.py:447
msgid "AllowedValues must be a list"
msgstr ""

#: heat/engine/constraints.py:452
#, python-format
msgid "Allowed values: %s"
msgstr ""

#: heat/engine/constraints.py:492
msgid "AllowedPattern must be a string"
msgstr ""

#: heat/engine/constraints.py:497
#, python-format
msgid "Value must match pattern: %s"
msgstr ""

#: heat/engine/constraints.py:539
#, python-format
msgid "Value must be of type %s"
msgstr ""

#: heat/engine/constraints.py:545
#, python-format
msgid "\"%(value)s\" does not validate %(name)s (constraint not found)"
msgstr ""

#: heat/engine/constraints.py:552
#, python-format
msgid "\"%(value)s\" does not validate %(name)s"
msgstr ""

#: heat/engine/constraints.py:575
#, python-format
msgid "Error validating value %(value)r"
msgstr ""

#: heat/engine/constraints.py:576
#, python-format
msgid "Error validating value %(value)r: %(message)s"
msgstr ""

#: heat/engine/dependencies.py:25
#, python-format
msgid "Circular Dependency Found: %(cycle)s"
msgstr ""

#: heat/engine/environment.py:313 heat/tests/test_resource.py:114
#, python-format
msgid "Resource \"%s\" has no type"
msgstr ""

#: heat/engine/environment.py:316
#, python-format
msgid "Non-empty resource type is required for resource \"%s\""
msgstr ""

#: heat/engine/environment.py:320
#, python-format
msgid "Resource \"%s\" type is not a string"
msgstr ""

#: heat/engine/environment.py:326
#, python-format
msgid "Unknown resource Type : %s"
msgstr ""

#: heat/engine/event.py:57
#, python-format
msgid "No event exists with id \"%s\""
msgstr ""

#: heat/engine/nova_utils.py:281 heat/engine/clients/os/nova.py:325
#, python-format
msgid "Server %(name)s delete failed: (%(code)s) %(message)s"
msgstr ""

#: heat/engine/nova_utils.py:319 heat/engine/clients/os/nova.py:354
#, python-format
msgid "Resizing to '%(flavor)s' failed, status '%(status)s'"
msgstr ""

#: heat/engine/nova_utils.py:345 heat/engine/clients/os/nova.py:376
#, python-format
msgid "Rebuilding server failed, status '%s'"
msgstr ""

#: heat/engine/parameter_groups.py:53 heat/tests/test_validate.py:1392
msgid "Parameters must be provided for each Parameter Group."
msgstr ""

#: heat/engine/parameter_groups.py:60
#, python-format
msgid "The %s parameter must be assigned to one Parameter Group only."
msgstr ""

#: heat/engine/parameter_groups.py:68
#, python-format
msgid "The Parameter name (%s) does not reference an existing parameter."
msgstr ""

#: heat/engine/parameters.py:81
#, python-format
msgid "Default must be a comma-delimited list string: %s"
msgstr ""

#: heat/engine/parameters.py:107
#, python-format
msgid "Invalid %s, expected a mapping"
msgstr ""

#: heat/engine/parameters.py:111
#, python-format
msgid "Invalid key '%(key)s' for %(entity)s"
msgstr ""

#: heat/engine/parameters.py:122
#, python-format
msgid "Missing parameter type for parameter: %s"
msgstr ""

#: heat/engine/parameters.py:199
#, python-format
msgid "Invalid Parameter type \"%s\""
msgstr ""

#: heat/engine/parameters.py:220
#, python-format
msgid "Parameter '%(name)s' is invalid: %(exp)s"
msgstr ""

#: heat/engine/parameters.py:363
#, python-format
msgid "Value must be a comma-delimited list string: %s"
msgstr ""

#: heat/engine/parameters.py:413
#, python-format
msgid "Value must be valid JSON: %s"
msgstr ""

#: heat/engine/parameters.py:555 heat/engine/hot/parameters.py:136
msgid "Stack ID"
msgstr ""

#: heat/engine/parameters.py:559 heat/engine/hot/parameters.py:145
msgid "Stack Name"
msgstr ""

#: heat/engine/properties.py:87
#, python-format
msgid "Unknown key(s) %s"
msgstr ""

#: heat/engine/properties.py:109
#, python-format
msgid "No %s specified"
msgstr ""

#: heat/engine/properties.py:119
#, python-format
msgid "%(schema)s supplied for %(type)s %(data)s"
msgstr ""

#: heat/engine/properties.py:245
#, python-format
msgid "Value '%s' is not an integer"
msgstr ""

#: heat/engine/properties.py:261
msgid "Value must be a string"
msgstr ""

#: heat/engine/properties.py:291
#, python-format
msgid "\"%s\" is not a map"
msgstr ""

#: heat/engine/properties.py:301
#, python-format
msgid "\"%s\" is not a list"
msgstr ""

#: heat/engine/properties.py:314
#, python-format
msgid "\"%s\" is not a valid boolean"
msgstr ""

#: heat/engine/properties.py:376
#, python-format
msgid "Property %(prop)s: %(ua)s and %(im)s cannot both be True"
msgstr ""

#: heat/engine/properties.py:387
#, python-format
msgid "Property error : %s"
msgstr ""

#: heat/engine/properties.py:392
#, python-format
msgid "Property %s not implemented yet"
msgstr ""

#: heat/engine/properties.py:397
#, python-format
msgid "Unknown Property %s"
msgstr ""

#: heat/engine/properties.py:402
#, python-format
msgid "%(prefix)sInvalid Property %(key)s"
msgstr ""

#: heat/engine/properties.py:425
#, python-format
msgid "%(prefix)sProperty %(key)s not assigned"
msgstr ""

#: heat/engine/resource.py:58
#, python-format
msgid "The Resource %s requires replacement."
msgstr ""

#: heat/engine/resource.py:63
#, python-format
msgid "Went to status %(resource_status)s due to \"%(status_reason)s\""
msgstr ""

#: heat/engine/resource.py:66 heat/engine/resource.py:76
#: heat/engine/resources/aws/ec2/instance.py:606
#: heat/engine/resources/aws/ec2/instance.py:607
#: heat/engine/resources/openstack/nova/server.py:610
#: heat/engine/resources/openstack/nova/server.py:611
#: heat/engine/resources/openstack/trove/os_database.py:366
msgid "Unknown"
msgstr ""

#: heat/engine/resource.py:72
#, python-format
msgid ""
"%(result)s - Unknown status %(resource_status)s due to "
"\"%(status_reason)s\""
msgstr ""

#: heat/engine/resource.py:75
msgid "Resource failed"
msgstr ""

#: heat/engine/resource.py:344
#, python-format
msgid "Update to properties %(props)s of %(name)s (%(res)s)"
msgstr ""

#: heat/engine/resource.py:535
#, python-format
msgid "State %s invalid for create"
msgstr ""

#: heat/engine/resource.py:615
msgid "Resource ID was not provided."
msgstr ""

#: heat/engine/resource.py:685
msgid "Resource update already requested"
msgstr ""

#: heat/engine/resource.py:728
#, python-format
msgid "'%(attr)s': expected '%(expected)s', got '%(current)s'"
msgstr ""

#: heat/engine/resource.py:746
#, python-format
msgid "State %s invalid for suspend"
msgstr ""

#: heat/engine/resource.py:762
#, python-format
msgid "State %s invalid for resume"
msgstr ""

#: heat/engine/resource.py:811
msgid "limit cannot be less than 4"
msgstr ""

#: heat/engine/resource.py:826
#, python-format
msgid "Invalid deletion policy \"%s\""
msgstr ""

#: heat/engine/resource.py:831
#, python-format
msgid "\"%s\" deletion policy not supported"
msgstr ""

#: heat/engine/resource.py:968 heat/engine/stack.py:555
#, python-format
msgid "Invalid action %s"
msgstr ""

#: heat/engine/resource.py:971 heat/engine/stack.py:558
#, python-format
msgid "Invalid status %s"
msgstr ""

#: heat/engine/scheduler.py:67
#, python-format
msgid "%s Timed out"
msgstr ""

#: heat/engine/service.py:516
#, python-format
msgid ""
"You have reached the maximum stacks per tenant, %d. Please delete some "
"stacks."
msgstr ""

#: heat/engine/service.py:579 heat/engine/service.py:642
msgid "Convergence engine"
msgstr ""

#: heat/engine/service.py:678
msgid "Updating a stack when it is suspended"
msgstr ""

#: heat/engine/service.py:682
msgid "Updating a stack when it is deleting"
msgstr ""

#: heat/engine/service.py:734
#, python-format
msgid "Cancelling update when stack is %s"
msgstr ""

#: heat/engine/service.py:773
msgid "No Template provided."
msgstr ""

#: heat/engine/service_software_config.py:62
msgid "server_id must be specified"
msgstr ""

#: heat/engine/service_software_config.py:164
msgid "deployment_id must be specified"
msgstr ""

#: heat/engine/service_software_config.py:182
#, python-format
msgid "Deployment exited with non-zero status code: %s"
msgstr ""

#: heat/engine/service_software_config.py:209
msgid "Outputs received"
msgstr ""

#: heat/engine/stack.py:92
#, python-format
msgid ""
"Invalid stack name %s must contain only alphanumeric or \"_-.\" "
"characters, must start with alpha"
msgstr ""

#: heat/engine/stack.py:183
msgid "Attempt to use stored_context with no user_creds"
msgstr ""

#: heat/engine/stack.py:292
#, python-format
msgid "No stack exists with id \"%s\""
msgstr ""

#: heat/engine/stack.py:511
#, python-format
msgid "Duplicate names %s"
msgstr ""

#: heat/engine/stack.py:529
msgid "Each Output must contain a Value key."
msgstr ""

#: heat/engine/stack.py:534
#, python-format
msgid "Output validation error: Outputs must contain Output. Found a [%s] instead"
msgstr ""

#: heat/engine/stack.py:539
#, python-format
msgid "Output validation error: %s"
msgstr ""

#: heat/engine/support.py:30
#, python-format
msgid "Specified status is invalid, defaulting to %s"
msgstr ""

#: heat/engine/template.py:43
#, python-format
msgid "Ambiguous versions (%s)"
msgstr ""

#: heat/engine/template.py:48
msgid "Template version was not provided"
msgstr ""

#: heat/engine/template.py:66
#, python-format
msgid "Could not load %(name)s: %(error)s"
msgstr ""

#: heat/engine/template.py:82
#, python-format
msgid "\"%(version)s\". \"%(version_type)s\" should be one of: %(available)s"
msgstr ""

#: heat/engine/template.py:85
#, python-format
msgid "\"%(version)s\". \"%(version_type)s\" should be: %(available)s"
msgstr ""

#: heat/engine/template.py:170
#, python-format
msgid "\"%s\" is not a valid keyword inside a resource definition"
msgstr ""

#: heat/engine/template.py:177
#, python-format
msgid "Resource %(name)s %(key)s type must be %(typename)s"
msgstr ""

#: heat/engine/template.py:229
msgid "Each Resource must contain a Type key."
msgstr ""

#: heat/engine/template.py:233
#, python-format
msgid "Resources must contain Resource. Found a [%s] instead"
msgstr ""

#: heat/engine/volume_tasks.py:33
#, python-format
msgid "Resizing volume %(vol)s to size %(size)i"
msgstr ""

#: heat/engine/volume_tasks.py:50
#, python-format
msgid "Failed to extend volume %(vol)s - %(err)s"
msgstr ""

#: heat/engine/volume_tasks.py:69
msgid "Volume resize failed"
msgstr ""

#: heat/engine/volume_tasks.py:128
msgid "Volume attachment failed"
msgstr ""

#: heat/engine/volume_tasks.py:147
#, python-format
msgid "Removing attachment %(att)s from Instance %(srv)s"
msgstr ""

#: heat/engine/volume_tasks.py:206
msgid "Volume detachment failed"
msgstr ""

#: heat/engine/watchrule.py:329
#, python-format
msgid "Invalid watch state %s"
msgstr ""

#: heat/engine/watchrule.py:341
#, python-format
msgid "Unknown watch state %s"
msgstr ""

#: heat/engine/cfn/functions.py:160
#, python-format
msgid "Arguments to \"%s\" must be of the form [resource_name, attribute]"
msgstr ""

#: heat/engine/cfn/functions.py:219
#, python-format
msgid "Arguments to \"%s\" must be of the form [index, collection]"
msgstr ""

#: heat/engine/cfn/functions.py:245
#, python-format
msgid "\"%(fn_name)s\": %(err)s"
msgstr ""

#: heat/engine/cfn/functions.py:249
#, python-format
msgid "Index to \"%s\" must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:256
#, python-format
msgid "Index to \"%s\" must be an integer"
msgstr ""

#: heat/engine/cfn/functions.py:267
#, python-format
msgid "Arguments to %s not fully resolved"
msgstr ""

#: heat/engine/cfn/functions.py:292 heat/engine/cfn/functions.py:298
#: heat/engine/cfn/functions.py:346 heat/engine/cfn/functions.py:352
#: heat/engine/cfn/functions.py:405 heat/engine/cfn/functions.py:411
#, python-format
msgid "Incorrect arguments to \"%(fn_name)s\" should be: %(example)s"
msgstr ""

#: heat/engine/cfn/functions.py:307
#, python-format
msgid "\"%s\" must operate on a list"
msgstr ""

#: heat/engine/cfn/functions.py:311
#, python-format
msgid "\"%s\" delimiter must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:319
#, python-format
msgid "Items to join must be strings %s"
msgstr ""

#: heat/engine/cfn/functions.py:359
#, python-format
msgid "Delimiter for %s must be string"
msgstr ""

#: heat/engine/cfn/functions.py:362
#, python-format
msgid "String to split must be string; got %s"
msgstr ""

#: heat/engine/cfn/functions.py:393
#, python-format
msgid "\"%s\" parameters must be a mapping"
msgstr ""

#: heat/engine/cfn/functions.py:421
#, python-format
msgid "\"%s\" template must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:424
#, python-format
msgid "\"%s\" params must be a map"
msgstr ""

#: heat/engine/cfn/functions.py:430
#, python-format
msgid "\"%s\" param placeholders must be strings"
msgstr ""

#: heat/engine/cfn/functions.py:438
#, python-format
msgid "\"%s\" params must be strings or numbers"
msgstr ""

#: heat/engine/cfn/functions.py:462
#, python-format
msgid "\"%s\" argument must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:497
#, python-format
msgid "Wrong Arguments try: \"%s\""
msgstr ""

#: heat/engine/cfn/functions.py:500
#, python-format
msgid "%s Key Name must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:503
#, python-format
msgid "%s Value Name must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:509
msgid "Member list must be a list"
msgstr ""

#: heat/engine/cfn/functions.py:513
msgid "Member list items must be strings"
msgstr ""

#: heat/engine/cfn/functions.py:548
#, python-format
msgid "Incorrect arguments to \"%(fn_name)s\" should be one of: %(allowed)s"
msgstr ""

#: heat/engine/cfn/template.py:62 heat/engine/hot/template.py:84
#: heat/engine/hot/template.py:87
#, python-format
msgid "\"%s\" is not a valid template section"
msgstr ""

#: heat/engine/cfn/template.py:65 heat/engine/hot/template.py:90
#, python-format
msgid "Section %s can not be accessed directly."
msgstr ""

#: heat/engine/cfn/template.py:106 heat/engine/hot/template.py:208
#, python-format
msgid "Resource %(name)s is missing \"%(type_key)s\""
msgstr ""

#: heat/engine/clients/os/cinder.py:61
msgid "No volume service available."
msgstr ""

#: heat/engine/clients/os/glance.py:93
#, python-format
msgid "Error retrieving image list from glance: %s"
msgstr ""

#: heat/engine/clients/os/nova.py:384
msgid "nova server metadata needs to be a Map."
msgstr ""

#: heat/engine/clients/os/sahara.py:101
#, python-format
msgid "Error retrieving image list from sahara: %s"
msgstr ""

#: heat/engine/clients/os/trove.py:58
#, python-format
msgid ""
"Datastore version %(dsversion)s for datastore type %(dstype)s is not "
"valid. Allowed versions are %(allowed)s."
msgstr ""

#: heat/engine/clients/os/trove.py:67
#, python-format
msgid ""
"Multiple active datastore versions exist for datastore type %(dstype)s. "
"Explicit datastore version must be provided. Allowed versions are "
"%(allowed)s."
msgstr ""

#: heat/engine/clients/os/trove.py:76
#, python-format
msgid "Not allowed - %(dsver)s without %(dstype)s."
msgstr ""

#: heat/engine/hot/functions.py:51
#, python-format
msgid "Function \"%s\" must have arguments"
msgstr ""

#: heat/engine/hot/functions.py:61
#, python-format
msgid "Argument to \"%s\" must be string or list"
msgstr ""

#: heat/engine/hot/functions.py:65
#, python-format
msgid "Parameter name in \"%s\" must be string"
msgstr ""

#: heat/engine/hot/functions.py:76
#, python-format
msgid "\"%s\" can't traverse path"
msgstr ""

#: heat/engine/hot/functions.py:79
#, python-format
msgid "Path components in \"%s\" must be strings"
msgstr ""

#: heat/engine/hot/functions.py:106
#, python-format
msgid "Argument to \"%s\" must be a list"
msgstr ""

#: heat/engine/hot/functions.py:110
#, python-format
msgid ""
"Arguments to \"%s\" must be of the form [resource_name, attribute, "
"(path), ...]"
msgstr ""

#: heat/engine/hot/functions.py:176 heat/engine/hot/functions.py:293
#, python-format
msgid "Arguments to \"%s\" must be a map"
msgstr ""

#: heat/engine/hot/functions.py:188
#, python-format
msgid "\"str_replace\" syntax should be %s"
msgstr ""

#: heat/engine/hot/functions.py:209
#, python-format
msgid "Argument to \"%s\" must be a string"
msgstr ""

#: heat/engine/hot/functions.py:216
#, python-format
msgid ""
"No content found in the \"files\" section for %(fn_name)s path: "
"%(file_key)s"
msgstr ""

#: heat/engine/hot/functions.py:262
#, python-format
msgid "The function %s is not supported in this version of HOT."
msgstr ""

#: heat/engine/hot/functions.py:304
#, python-format
msgid "\"repeat\" syntax should be %s"
msgstr ""

#: heat/engine/hot/functions.py:308
#, python-format
msgid "The \"for_each\" argument to \"%s\" must contain a map"
msgstr ""

#: heat/engine/hot/functions.py:312
#, python-format
msgid "The values of the \"for_each\" argument to \"%s\" must be lists"
msgstr ""

#: heat/engine/hot/parameters.py:70
#, python-format
msgid "Invalid parameter constraints for parameter %s, expected a list"
msgstr ""

#: heat/engine/hot/parameters.py:100
msgid "No constraint expressed"
msgstr ""

#: heat/engine/hot/parameters.py:140
msgid "Project ID"
msgstr ""

#: heat/engine/hot/template.py:129
#, python-format
msgid "\"%%s\" is not a valid keyword inside a %s definition"
msgstr ""

#: heat/engine/hot/template.py:136
#, python-format
msgid "Each %(object_name)s must contain a %(sub_section)s key."
msgstr ""

#: heat/engine/hot/template.py:146
#, python-format
msgid ""
"\"%(section)s\" must contain a map of %(obj_name)s maps. Found a "
"[%(_type)s] instead"
msgstr ""

#: heat/engine/resources/stack_resource.py:68
#, python-format
msgid "Failed to validate: %s"
msgstr ""

#: heat/engine/resources/stack_resource.py:104
msgid "Nested stack not found in DB"
msgstr ""

#: heat/engine/resources/stack_resource.py:161
#, python-format
msgid "Recursion depth exceeds %d."
msgstr ""

#: heat/engine/resources/stack_resource.py:295
#, python-format
msgid "Nested stack UPDATE failed: %s"
msgstr ""

#: heat/engine/resources/stack_resource.py:329
#, python-format
msgid "Cannot suspend %s, stack not created"
msgstr ""

#: heat/engine/resources/stack_resource.py:351
#, python-format
msgid "Cannot resume %s, stack not created"
msgstr ""

#: heat/engine/resources/stack_resource.py:373
#, python-format
msgid "Cannot check %s, stack not created"
msgstr ""

#: heat/engine/resources/stack_user.py:55
msgid "Can't get user token, user not yet created"
msgstr ""

#: heat/engine/resources/stack_user.py:61
msgid "Can't get user token without password"
msgstr ""

#: heat/engine/resources/stack_user.py:132
#, python-format
msgid "Error creating ec2 keypair for user %s"
msgstr ""

#: heat/engine/resources/template_resource.py:58
msgid "Only Templates with an extension of .yaml or .template are supported"
msgstr ""

#: heat/engine/resources/template_resource.py:82
#, python-format
msgid "Could not fetch remote template \"%(name)s\": %(exc)s"
msgstr ""

#: heat/engine/resources/template_resource.py:183
#, python-format
msgid "Unknown error retrieving %s"
msgstr ""

#: heat/engine/resources/template_resource.py:192
#, python-format
msgid "Required property %(n)s for facade %(type)s missing in provider"
msgstr ""

#: heat/engine/resources/template_resource.py:200
#, python-format
msgid ""
"Property %(n)s type mismatch between facade %(type)s (%(fs_type)s) and "
"provider (%(ps_type)s)"
msgstr ""

#: heat/engine/resources/template_resource.py:209
#, python-format
msgid "Provider requires property %(n)s unknown in facade %(type)s"
msgstr ""

#: heat/engine/resources/template_resource.py:216
#, python-format
msgid "Attribute %(attr)s for facade %(type)s missing in provider"
msgstr ""

#: heat/engine/resources/template_resource.py:229
#, python-format
msgid "Failed to retrieve template data: %s"
msgstr ""

#: heat/engine/resources/wait_condition.py:73
msgid "Metadata format invalid"
msgstr ""

#: heat/engine/resources/wait_condition.py:105
#: heat/engine/resources/openstack/heat/swiftsignal.py:47
#, python-format
msgid "%(len)d of %(count)d received - %(reasons)s"
msgstr ""

#: heat/engine/resources/wait_condition.py:107
#: heat/engine/resources/openstack/heat/swiftsignal.py:49
#, python-format
msgid "%(len)d of %(count)d received"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:119
#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:161
#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:166
#: heat/engine/resources/aws/autoscaling/launch_config.py:98
#: heat/engine/resources/aws/autoscaling/launch_config.py:103
#: heat/engine/resources/aws/ec2/instance.py:126
#: heat/engine/resources/aws/ec2/instance.py:131
#: heat/engine/resources/aws/ec2/instance.py:136
#: heat/engine/resources/aws/ec2/instance.py:141
#: heat/engine/resources/aws/ec2/instance.py:146
#: heat/engine/resources/aws/ec2/instance.py:151
#: heat/engine/resources/aws/ec2/instance.py:169
#: heat/engine/resources/aws/ec2/instance.py:214
#: heat/engine/resources/aws/iam/user.py:53
#: heat/engine/resources/aws/iam/user.py:57
#: heat/engine/resources/aws/iam/user.py:149
#: heat/engine/resources/aws/iam/user.py:159
#: heat/engine/resources/aws/lb/loadbalancer.py:372
#: heat/engine/resources/aws/lb/loadbalancer.py:377
#: heat/engine/resources/aws/lb/loadbalancer.py:386
#: heat/engine/resources/aws/lb/loadbalancer.py:391
#: heat/engine/resources/aws/lb/loadbalancer.py:396
#: heat/engine/resources/aws/lb/loadbalancer.py:401
#: heat/engine/resources/openstack/heat/instance_group.py:64
msgid "Not Implemented."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:124
#: heat/engine/resources/openstack/heat/instance_group.py:69
msgid "The reference to a LaunchConfiguration resource."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:129
msgid ""
"The ID of an existing instance to use to create the Auto Scaling group. "
"If specify this property, will create the group use an existing instance "
"instead of a launch configuration."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:139
msgid "Maximum number of instances in the group."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:145
msgid "Minimum number of instances in the group."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:151
#: heat/engine/resources/aws/autoscaling/scaling_policy.py:73
#: heat/engine/resources/openstack/heat/autoscaling_group.py:73
#: heat/engine/resources/openstack/heat/scaling_policy.py:81
msgid "Cooldown period, in seconds."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:156
msgid "Desired initial number of instances."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:174
#: heat/engine/resources/openstack/heat/instance_group.py:81
msgid "List of LoadBalancer resources."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:178
msgid ""
"Use only with Neutron, to list the internal subnet to which the instance "
"will be attached; needed only if multiple exist; list length must be "
"exactly 1."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:184
msgid "UUID of the internal subnet to which the instance will be attached."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:190
#: heat/engine/resources/openstack/heat/instance_group.py:85
msgid "Tags to attach to this group."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:209
#: heat/engine/resources/openstack/heat/instance_group.py:104
msgid "A comma-delimited list of server ip addresses. (Heat extension)."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:326
#, python-format
msgid "Start resizing the group %(group)s"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:346
#, python-format
msgid "End resizing the group %(group)s"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:370
msgid "MinSize can not be greater than MaxSize"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:374
msgid "The size of AutoScalingGroup can not be less than zero"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:380
msgid "DesiredCapacity must be between MinSize and MaxSize"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:389
msgid "Anything other than one VPCZoneIdentifier"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:399
msgid "Either 'InstanceId' or 'LaunchConfigurationName' must be provided."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:60
#: heat/engine/resources/aws/ec2/instance.py:96
msgid "Glance image ID or name."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:67
#: heat/engine/resources/aws/ec2/instance.py:106
msgid "Nova instance type (flavor)."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:74
msgid ""
"The ID of an existing instance you want to use to create the launch "
"configuration. All properties are derived from the instance with the "
"exception of BlockDeviceMapping."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:83
#: heat/engine/resources/aws/ec2/instance.py:115
msgid "Optional Nova keypair name."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:90
#: heat/engine/resources/aws/ec2/instance.py:222
msgid "User data to pass to instance."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:94
#: heat/engine/resources/aws/ec2/instance.py:156
msgid "Security group names to assign."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:108
#: heat/engine/resources/aws/ec2/instance.py:253
msgid "Block device mappings to attach to instance."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:114
#: heat/engine/resources/aws/ec2/instance.py:259
msgid ""
"A device name where the volume will be attached in the system at "
"/dev/device_name.e.g. vdb"
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:121
#: heat/engine/resources/aws/ec2/instance.py:266
msgid "The ebs volume to attach to the instance."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:125
#: heat/engine/resources/aws/ec2/instance.py:270
msgid ""
"Indicate whether the volume should be deleted when the instance is "
"terminated."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:131
#: heat/engine/resources/aws/ec2/instance.py:276
msgid "The number of I/O operations per second that the volume supports."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:137
#: heat/engine/resources/aws/ec2/instance.py:282
#: heat/engine/resources/openstack/nova/server.py:134
msgid "The ID of the snapshot to create a volume from."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:146
#: heat/engine/resources/aws/ec2/instance.py:291
msgid ""
"The size of the volume, in GB. Must be equal or greater than the size of "
"the snapshot. It is safe to leave this blank and have the Compute service"
" infer the size."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:154
#: heat/engine/resources/aws/ec2/instance.py:299
msgid "The volume type."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:161
#: heat/engine/resources/aws/ec2/instance.py:306
msgid "The can be used to unmap a defined device."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:166
#: heat/engine/resources/aws/ec2/instance.py:311
msgid ""
"The name of the virtual device. The name must be in the form ephemeralX "
"where X is a number starting from zero (0); for example, ephemeral0."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:176
#: heat/engine/resources/aws/ec2/instance.py:197
msgid "Scheduler hints to pass to Nova (Heat extension)."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:239
#: heat/engine/resources/aws/ec2/instance.py:765
msgid ""
"SnapshotId is missing, this is required when specifying "
"BlockDeviceMappings."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:243
#: heat/engine/resources/aws/ec2/instance.py:769
msgid "Ebs is missing, this is required when specifying BlockDeviceMappings."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:253
msgid "If without InstanceId, ImageId and InstanceType are required."
msgstr ""

#: heat/engine/resources/aws/autoscaling/scaling_policy.py:51
msgid "AutoScaling group name to apply policy to."
msgstr ""

#: heat/engine/resources/aws/autoscaling/scaling_policy.py:56
#: heat/engine/resources/openstack/heat/scaling_policy.py:64
msgid "Size of adjustment."
msgstr ""

#: heat/engine/resources/aws/autoscaling/scaling_policy.py:62
#: heat/engine/resources/openstack/heat/scaling_policy.py:70
msgid "Type of adjustment (absolute or percentage)."
msgstr ""

#: heat/engine/resources/aws/autoscaling/scaling_policy.py:80
msgid "A signed url to handle the alarm. (Heat extension)."
msgstr ""

#: heat/engine/resources/aws/autoscaling/scaling_policy.py:102
#: heat/engine/resources/openstack/heat/ha_restarter.py:75
#: heat/engine/resources/openstack/heat/scaling_policy.py:111
#: heat/tests/generic_resource.py:143
#, python-format
msgid "Cannot signal resource during %s"
msgstr ""

#: heat/engine/resources/aws/autoscaling/scaling_policy.py:134
#: heat/engine/resources/openstack/heat/scaling_policy.py:143
#, python-format
msgid "Alarm %(alarm)s could not find scaling group named \"%(group)s\""
msgstr ""

#: heat/engine/resources/aws/cfn/stack.py:39
msgid ""
"The URL of a template that specifies the stack to be created as a "
"resource."
msgstr ""

#: heat/engine/resources/aws/cfn/stack.py:46
msgid "The length of time, in minutes, to wait for the nested stack creation."
msgstr ""

#: heat/engine/resources/aws/cfn/stack.py:52
msgid "The set of parameters passed to this nested stack."
msgstr ""

#: heat/engine/resources/aws/cfn/stack.py:61
#: heat/engine/resources/aws/cfn/stack.py:105
#, python-format
msgid "Could not fetch remote template '%(url)s': %(exc)s"
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:43
#: heat/engine/resources/openstack/heat/wait_condition.py:50
msgid ""
"A reference to the wait condition handle used to signal this wait "
"condition."
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:49
#: heat/engine/resources/openstack/heat/wait_condition.py:56
msgid "The number of seconds to wait for the correct number of signals to arrive."
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:58
#: heat/engine/resources/openstack/heat/swiftsignal.py:167
#: heat/engine/resources/openstack/heat/wait_condition.py:65
msgid ""
"The number of success signals that must be received before the stack "
"creation process continues."
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:70
#: heat/engine/resources/openstack/heat/wait_condition.py:77
msgid ""
"JSON serialized dict containing data associated with wait condition "
"signals sent to the handle."
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:83
#, python-format
msgid "WaitCondition invalid Handle tenant %s"
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:86
#: heat/engine/resources/aws/cfn/wait_condition.py:89
#, python-format
msgid "WaitCondition invalid Handle stack %s"
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:92
#: heat/engine/resources/aws/cfn/wait_condition.py:96
#, python-format
msgid "WaitCondition invalid Handle %s"
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:49
msgid "Set to \"vpc\" to have IP address allocation associated to your VPC."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:57
msgid "Instance ID to associate with EIP."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:67
msgid ""
"ID that AWS assigns to represent the allocation of the address for use "
"with Amazon VPC. Returned only for VPC elastic IP addresses."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:195
msgid "Instance ID to associate with EIP specified by EIP property."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:203
msgid "EIP address to associate with instance."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:208
msgid "Allocation ID for VPC EIP address."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:213
msgid "Network interface ID to associate with EIP."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:232
msgid "Either 'EIP' or 'AllocationId' must be provided."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:236
msgid "Must specify 'InstanceId' if you specify 'EIP'."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:328
#: heat/engine/resources/aws/ec2/eip.py:351
msgid "Failed to update, can not found port info."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:122
msgid "Availability zone to launch the instance in."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:160
msgid "Security group IDs to assign."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:164
msgid "Network interfaces to associate with instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:174
msgid "Subnet ID to launch instance in."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:179
msgid "Tags to attach to instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:226
msgid "Volumes to attach to instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:233
#: heat/engine/resources/aws/ec2/volume.py:232
msgid ""
"The device where the volume is exposed on the instance. This assignment "
"may not be honored and it is advised that the path /dev/disk/by-"
"id/virtio-<VolumeId> be used instead."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:242
#: heat/engine/resources/aws/ec2/volume.py:223
#: heat/engine/resources/openstack/cinder/volume.py:380
msgid "The ID of the volume to be attached."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:323
msgid "The Availability Zone where the specified instance is launched."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:327
msgid "Private DNS name of the specified instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:330
msgid "Public DNS name of the specified instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:333
msgid "Private IP address of the specified instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:336
msgid "Public IP address of the specified instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:605
#: heat/engine/resources/openstack/nova/server.py:609
#, python-format
msgid "Message: %(message)s, Code: %(code)s"
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:612
msgid "Instance is not active"
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:635
#, python-format
msgid "Instance is not ACTIVE (was: %s)"
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:818
#: heat/engine/resources/openstack/nova/server.py:1111
#, python-format
msgid "Cannot suspend %s, resource_id not set"
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:825
#: heat/engine/resources/aws/ec2/instance.py:882
#, python-format
msgid "Failed to find instance %s"
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:858
#, python-format
msgid " nova reported unexpected instance[%(instance)s] status[%(status)s]"
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:875
#: heat/engine/resources/openstack/nova/server.py:1160
#, python-format
msgid "Cannot resume %s, resource_id not set"
msgstr ""

#: heat/engine/resources/aws/ec2/internet_gateway.py:70
#, python-format
msgid "Expected 1 external network, found %d"
msgstr ""

#: heat/engine/resources/aws/ec2/internet_gateway.py:86
msgid "VPC ID for this gateway association."
msgstr ""

#: heat/engine/resources/aws/ec2/internet_gateway.py:91
msgid "ID of the InternetGateway."
msgstr ""

#: heat/engine/resources/aws/ec2/internet_gateway.py:95
msgid "ID of the VPNGateway to attach to the VPC."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:45
msgid "Description for this interface."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:49
msgid "List of security group IDs associated with this interface."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:57
msgid "Flag indicating if traffic to or from instance is validated."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:62
msgid "Subnet ID to associate with this interface."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:69
msgid "List of tags associated with this interface."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:87
msgid "Private IP address of the network interface."
msgstr ""

#: heat/engine/resources/aws/ec2/route_table.py:41
msgid "VPC ID for where the route table is created."
msgstr ""

#: heat/engine/resources/aws/ec2/route_table.py:48
msgid "List of tags to be attached to this resource."
msgstr ""

#: heat/engine/resources/aws/ec2/route_table.py:117
msgid "Route table ID."
msgstr ""

#: heat/engine/resources/aws/ec2/route_table.py:122
msgid "Subnet ID."
msgstr ""

#: heat/engine/resources/aws/ec2/security_group.py:375
#: heat/engine/resources/openstack/neutron/security_group.py:115
msgid "Description of the security group."
msgstr ""

#: heat/engine/resources/aws/ec2/security_group.py:380
msgid "Physical ID of the VPC. Not implemented."
msgstr ""

#: heat/engine/resources/aws/ec2/security_group.py:386
msgid "List of security group ingress rules."
msgstr ""

#: heat/engine/resources/aws/ec2/security_group.py:395
msgid "List of security group egress rules."
msgstr ""

#: heat/engine/resources/aws/ec2/security_group.py:450
#, python-format
msgid "Security Group \"%(group_name)s\" not found"
msgstr ""

#: heat/engine/resources/aws/ec2/subnet.py:42
msgid "Availability zone in which you want the subnet."
msgstr ""

#: heat/engine/resources/aws/ec2/subnet.py:46
msgid "CIDR block to apply to subnet."
msgstr ""

#: heat/engine/resources/aws/ec2/subnet.py:51
msgid ""
"Ref structure that contains the ID of the VPC on which you want to create"
" the subnet."
msgstr ""

#: heat/engine/resources/aws/ec2/subnet.py:59
msgid "List of tags to attach to this resource."
msgstr ""

#: heat/engine/resources/aws/ec2/subnet.py:77
msgid "Availability Zone of the subnet."
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:40
#: heat/engine/resources/openstack/cinder/volume.py:59
msgid "The availability zone in which the volume will be created."
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:46
#: heat/engine/resources/openstack/cinder/volume.py:140
msgid "The size of the volume in GB."
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:54
msgid "If specified, the backup used as the source to create the volume."
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:60
msgid "The list of tags to associate with the volume."
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:143
msgid "Volume create failed"
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:162
msgid "Volume backup failed"
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:176
msgid "Volume in use"
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:214
msgid "The ID of the instance to which the volume attaches."
msgstr ""

#: heat/engine/resources/aws/ec2/vpc.py:39
msgid "CIDR block to apply to the VPC."
msgstr ""

#: heat/engine/resources/aws/ec2/vpc.py:43
msgid ""
"Allowed tenancy of instances launched in the VPC. default - any tenancy; "
"dedicated - instance will be dedicated, regardless of the tenancy option "
"specified at instance launch."
msgstr ""

#: heat/engine/resources/aws/ec2/vpc.py:57
msgid "List of tags to attach to the instance."
msgstr ""

#: heat/engine/resources/aws/ec2/vpc.py:101
#, python-format
msgid "Multiple routers found with name %s"
msgstr ""

#: heat/engine/resources/aws/iam/user.py:61
msgid "A login profile for the user."
msgstr ""

#: heat/engine/resources/aws/iam/user.py:70
msgid "Access policies to apply to the user."
msgstr ""

#: heat/engine/resources/aws/iam/user.py:154
msgid "The name of the user that the new key will belong to."
msgstr ""

#: heat/engine/resources/aws/iam/user.py:169
msgid "Username associated with the AccessKey."
msgstr ""

#: heat/engine/resources/aws/iam/user.py:173
msgid "Keypair secret key."
msgstr ""

#: heat/engine/resources/aws/iam/user.py:201
#, python-format
msgid "could not find user %s"
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:301
msgid "The Availability Zones in which to create the load balancer."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:306
msgid "An application health check for the instances."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:310
msgid ""
"The number of consecutive health probe successes required before moving "
"the instance to the healthy state."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:317
msgid ""
"The approximate interval, in seconds, between health checks of an "
"individual instance."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:323
msgid "The port being checked."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:328
msgid "Health probe timeout, in seconds."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:333
msgid ""
"The number of consecutive health probe failures required before moving "
"the instance to the unhealthy state"
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:342
msgid "The list of instance IDs load balanced."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:347
msgid "One or more listeners for this load balancer."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:353
msgid "TCP port on which the instance server is listening."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:359
msgid "The external load balancer port number."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:364
msgid "The load balancer transport protocol to use."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:408
msgid "The name of the hosted zone that is associated with the LoadBalancer."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:412
msgid "The ID of the hosted zone name that is associated with the LoadBalancer."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:416
msgid "The DNS name for the LoadBalancer."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:419
msgid ""
"The security group that you can use as part of your inbound rules for "
"your LoadBalancer's back-end instances."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:423
msgid "Owner of the source security group."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:589
msgid "Custom LoadBalancer template can not be found"
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:55
msgid ""
"A predefined access control list (ACL) that grants permissions on the "
"bucket."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:67
msgid "Information used to configure the bucket as a static website."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:71
msgid "The name of the index document."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:75
msgid "The name of the error document."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:81
msgid "Tags to attach to the bucket."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:87
msgid "The tag key name."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:92
msgid "The tag value."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:102
msgid "The DNS name of the specified bucket."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:105
msgid "The website endpoint for the specified bucket."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:160
#, python-format
msgid "The bucket you tried to delete is not empty (%s)."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:37
#: heat/engine/resources/openstack/heat/cloud_watch.py:54
msgid "Description for the alarm."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:42
msgid "True if alarm evaluation/actioning is enabled."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:48
msgid "A list of URLs (webhooks) to invoke when state transitions to alarm."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:54
msgid "A list of URLs (webhooks) to invoke when state transitions to ok."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:60
msgid ""
"A list of URLs (webhooks) to invoke when state transitions to "
"insufficient-data."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:66
msgid ""
"False to trigger actions when the threshold is reached AND the alarm's "
"state has changed. By default, actions are called each time the threshold"
" is reached."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:137
msgid "Operator used to compare specified statistic with threshold."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:146
#: heat/engine/resources/openstack/heat/cloud_watch.py:59
msgid "Number of periods to evaluate over."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:151
msgid "Meter name watched by the alarm."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:156
#: heat/engine/resources/openstack/heat/cloud_watch.py:75
msgid "Period (seconds) to evaluate over."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:161
msgid "Meter statistic to evaluate."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:170
#: heat/engine/resources/openstack/heat/cloud_watch.py:112
msgid "Threshold to evaluate against."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:176
msgid ""
"Meter should match this resource metadata (key=value) additionally to the"
" meter_name."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:183
msgid ""
"A list of query factors, each comparing a Sample attribute with a value. "
"Implicitly combined with matching_metadata, if any."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:193
msgid ""
"Name of attribute to compare. Names of the form metadata.user_metadata.X "
"or metadata.metering.X are equivalent to what you can address through "
"matching_metadata; the former for Nova meters, the latter for all others."
" To see the attributes of your Samples, use `ceilometer --debug sample-"
"list`."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:204
msgid "Comparison operator"
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:209
msgid "String value with which to compare"
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:377
msgid "List of alarm identifiers to combine."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:383
msgid "Operator used to combine the alarms."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:63
msgid ""
"The size of the volume in GB. On update only increase in size is "
"supported."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:72
msgid "If specified, the snapshot to create the volume from."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:79
msgid "If specified, the backup to create the volume from."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:83
msgid "A name used to distinguish the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:88
msgid "A description of the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:93
msgid "If specified, the type of volume to use, mapping to a specific backend."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:102
msgid "Key/value pairs to associate with the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:107
msgid "The ID of the image to create the volume from."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:110
#: heat/engine/resources/openstack/heat/random_string.py:83
#: heat/engine/resources/openstack/neutron/floatingip.py:48
#: heat/engine/resources/openstack/neutron/loadbalancer.py:217
#: heat/engine/resources/openstack/neutron/network_gateway.py:99
#: heat/engine/resources/openstack/neutron/port.py:70
#: heat/engine/resources/openstack/neutron/port.py:113
#: heat/engine/resources/openstack/neutron/router.py:273
#: heat/engine/resources/openstack/neutron/router.py:279
#: heat/engine/resources/openstack/neutron/router.py:396
#: heat/engine/resources/openstack/neutron/subnet.py:68
#: heat/engine/resources/openstack/neutron/vpnservice.py:64
#: heat/engine/resources/openstack/nova/server.py:223
#, python-format
msgid "Use property %s."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:114
msgid "If specified, the name or ID of the image to create the volume from."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:122
msgid "If specified, the volume to use as source."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:129
msgid ""
"Arbitrary key-value pairs specified by the client to help the Cinder "
"scheduler creating a volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:137
msgid "The availability zone in which the volume is located."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:143
msgid "The snapshot the volume was created from, if any."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:146
msgid "Name of the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:149
msgid "Description of the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:152
msgid "The type of the volume mapping to a backend, if any."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:155
msgid "Key/value pairs associated with the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:158
msgid "The volume used as source, if any."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:161
msgid "The current status of the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:164
msgid "The timestamp indicating volume creation."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:167
msgid "Boolean indicating if the volume can be booted or not."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:170
msgid "Key/value pairs associated with the volume in raw dict form."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:173
msgid "Boolean indicating if the volume is encrypted or not."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:176
msgid "The list of attachments of the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:251
msgid "Using Cinder API V1, volume_type update"
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:264
msgid "Shrinking volume"
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:348
msgid "Scheduler hints are not supported by the current volume API."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:374
msgid "The ID of the server to which the volume attaches."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:389
msgid ""
"The location where the volume is exposed on the instance. This assignment"
" may not be honored and it is advised that the path /dev/disk/by-"
"id/virtio-<VolumeId> be used instead."
msgstr ""

#: heat/engine/resources/openstack/glance/glance_image.py:39
msgid ""
"Name for the image. The name of an image is not unique to a Image Service"
" node."
msgstr ""

#: heat/engine/resources/openstack/glance/glance_image.py:44
msgid "The image ID. Glance will generate a UUID if not specified."
msgstr ""

#: heat/engine/resources/openstack/glance/glance_image.py:48
msgid ""
"Scope of image accessibility. Public or private. Default value is False "
"means private."
msgstr ""

#: heat/engine/resources/openstack/glance/glance_image.py:54
msgid ""
"Amount of disk space (in GB) required to boot image. Default value is 0 "
"if not specified and means no limit on the disk size."
msgstr ""

#: heat/engine/resources/openstack/glance/glance_image.py:63
msgid ""
"Amount of ram (in MB) required to boot image. Default value is 0 if not "
"specified and means no limit on the ram size."
msgstr ""

#: heat/engine/resources/openstack/glance/glance_image.py:71
msgid ""
"Whether the image can be deleted. If the value is True, the image is "
"protected and cannot be deleted."
msgstr ""

#: heat/engine/resources/openstack/glance/glance_image.py:76
msgid "Disk format of image."
msgstr ""

#: heat/engine/resources/openstack/glance/glance_image.py:86
msgid "Container format of image."
msgstr ""

#: heat/engine/resources/openstack/glance/glance_image.py:95
msgid ""
"URL where the data for this image already resides. For example, if the "
"image data is stored in swift, you could specify "
"\"swift://example.com/container/obj\"."
msgstr ""

#: heat/engine/resources/openstack/heat/access_policy.py:35
msgid ""
"Resources that users are allowed to access by the DescribeStackResource "
"API."
msgstr ""

#: heat/engine/resources/openstack/heat/access_policy.py:52
#, python-format
msgid "AccessPolicy resource %s not in stack"
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:50
msgid ""
"Resource definition for the resources in the group, in HOT format. The "
"value of this property is the definition of a resource just as if it had "
"been declared in the template itself."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:59
msgid "Maximum number of resources in the group."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:66
msgid "Minimum number of resources in the group."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:78
msgid "Desired initial number of resources."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:83
msgid "Policy for rolling updates for this scaling group."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:89
msgid ""
"The minimum number of resources in service while rolling updates are "
"being executed."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:95
msgid "The maximum number of resources to replace at once."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:100
msgid "The number of seconds to wait between batches of updates."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:110
msgid ""
"A map of resource names to the specified attribute of each individual "
"resource."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:114
msgid "A list of the specified attribute of each individual resource."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:117
msgid "The current size of AutoscalingResourceGroup."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_config.py:47
msgid ""
"Map representing the cloud-config data structure which will be formatted "
"as YAML."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:41
msgid "Operator used to compare the specified Statistic with Threshold."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:65
msgid "Metric name watched by the alarm."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:70
msgid "Namespace for the metric."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:81
msgid "Metric statistic to evaluate."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:91
msgid "A list of actions to execute when state transitions to alarm."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:96
msgid "A list of actions to execute when state transitions to ok."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:101
msgid ""
"A list of dimensions (arbitrary name/value pairs) associated with the "
"metric."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:106
msgid "A list of actions to execute when state transitions to insufficient-data."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:118
msgid "Unit for the metric."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:145
msgid "OS::Heat::CWLiteAlarm is deprecated, use OS::Ceilometer::Alarm instead."
msgstr ""

#: heat/engine/resources/openstack/heat/ha_restarter.py:32
msgid ""
"The HARestarter resource type is unsupported and will be removed in a "
"future release of Heat, once it has support for auto-healing any type of "
"resource. Note that HARestarter does *not* actually restart servers - it "
"deletes and then recreates them. It also does the same to all dependent "
"resources, and may therefore exhibit unexpected and undesirable "
"behaviour. Avoid."
msgstr ""

#: heat/engine/resources/openstack/heat/ha_restarter.py:55
msgid "Instance ID to be restarted."
msgstr ""

#: heat/engine/resources/openstack/heat/ha_restarter.py:65
msgid "A signed url to handle the alarm (Heat extension)."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:75
msgid "Desired number of instances."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:143
#, python-format
msgid "Maximum %s is 1 hour."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:156
#, python-format
msgid "%(lc)s (%(ref)s) reference can not be found."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:161
#, python-format
msgid ""
"%(lc)s (%(ref)s) requires a reference to the configuration not just the "
"name of the resource."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:306
#, python-format
msgid "The current %s will result in stack update timeout."
msgstr ""

#: heat/engine/resources/openstack/heat/multi_part.py:63
msgid "Parts belonging to this message."
msgstr ""

#: heat/engine/resources/openstack/heat/multi_part.py:70
msgid ""
"Content of part to attach, either inline or by referencing the ID of "
"another software config resource"
msgstr ""

#: heat/engine/resources/openstack/heat/multi_part.py:77
msgid "Optional filename to associate with part."
msgstr ""

#: heat/engine/resources/openstack/heat/multi_part.py:81
msgid "Whether the part content is text or multipart."
msgstr ""

#: heat/engine/resources/openstack/heat/multi_part.py:87
msgid "Optional subtype to specify with the type."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:66
msgid "Length of the string to generate."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:74
msgid "Sequence of characters to build the random string from."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:88
msgid ""
"A list of character class and their constraints to generate the random "
"string from."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:95
#, python-format
msgid ""
"A character class and its corresponding %(min)s constraint to generate "
"the random string from."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:107
msgid ""
"The minimum number of characters from this character class that will be "
"in the generated string."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:120
msgid ""
"A list of character sequences and their constraints to generate the "
"random string from."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:127
#, python-format
msgid ""
"A character sequence and its corresponding %(min)s constraint to generate"
" the random string from."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:133
msgid ""
"The minimum number of characters from this sequence that will be in the "
"generated string."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:146
msgid ""
"Value which can be set or changed on stack update to trigger the resource"
" for replacement with a new random string . The salt value itself is "
"ignored by the random generator."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:154
msgid ""
"The random string generated by this resource. This value is also "
"available by referencing the resource."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:235
#, python-format
msgid ""
"Cannot use deprecated '%(seq)s' property along with '%(char_seqs)s' or "
"'%(char_classes)s' properties"
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:251
msgid ""
"Length property cannot be smaller than combined character class and "
"character sequence minimums"
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:58
msgid "Context for this stack."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:62
msgid "Region name in which this stack will be created."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:69
msgid "Template that specifies the stack to be created as a resource."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:76
msgid "Number of minutes to wait for this stack creation."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:81
msgid "Set of parameters passed to this stack."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:89
msgid "Name of the stack."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:92
msgid "A dict of key-value pairs output from the stack."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:132
#, python-format
msgid ""
"Cannot establish connection to Heat endpoint at region \"%(region)s\" due"
" to \"%(exc)s\""
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:149
#, python-format
msgid ""
"Failed validating stack template using Heat endpoint at region "
"\"%(region)s\" due to \"%(exc)s\""
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:178
#, python-format
msgid "Cannot resume %s, resource not found"
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:184
#, python-format
msgid "Cannot suspend %s, resource not found"
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:236
#, python-format
msgid "Resource action mismatch detected: expected=%(expected)s actual=%(actual)s"
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:101
msgid "The number of instances to create."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:110
msgid ""
"A variable that this resource will use to replace with the current index "
"of a given resource in the group. Can be used, for example, to customize "
"the name property of grouped servers in order to differentiate them when "
"listed with nova client."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:123
msgid ""
"Resource definition for the resources in the group. The value of this "
"property is the definition of a resource just as if it had been declared "
"in the template itself."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:129
msgid "The type of the resources in the group"
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:134
msgid "Property values for the resources in the group"
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:142
msgid "Policies for removal of resources on update"
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:145
msgid ""
"Policy to be processed when doing an update which requires removal of "
"specific resources."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:150
msgid ""
"List of resources to be removed when doing an update which requires "
"removal of specific resources. The resource may be specified several "
"ways: (1) The resource name, as in the nested stack, (2) The resource "
"reference returned from get_resource in a template, as available via the "
"'refs' attribute Note this is destructive on update when specified; even "
"if the count is not being reduced, and once a resource name is removed, "
"it's name is never reused in subsequent updates"
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:175
msgid "A list of resource IDs for the resources in the group"
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:178
msgid ""
"A map of resource names to the specified attribute of each individual "
"resource.  Requires heat_template_version: 2014-10-16."
msgstr ""

#: heat/engine/resources/openstack/heat/scaling_policy.py:59
msgid "AutoScaling group ID to apply policy to."
msgstr ""

#: heat/engine/resources/openstack/heat/scaling_policy.py:88
msgid "A signed url to handle the alarm."
msgstr ""

#: heat/engine/resources/openstack/heat/software_component.py:69
msgid ""
"Lifecycle actions to which the configuration applies. The string values "
"provided for this property can include the standard resource actions "
"CREATE, DELETE, UPDATE, SUSPEND and RESUME supported by Heat."
msgstr ""

#: heat/engine/resources/openstack/heat/software_component.py:85
msgid ""
"The configuration tool used to actually apply the configuration on a "
"server. This string property has to be understood by in-instance tools "
"running inside deployed servers."
msgstr ""

#: heat/engine/resources/openstack/heat/software_component.py:97
msgid ""
"The list of configurations for the different lifecycle actions of the "
"represented software component."
msgstr ""

#: heat/engine/resources/openstack/heat/software_component.py:153
#, python-format
msgid ""
"Defining more than one configuration for the same action in "
"SoftwareComponent \"%s\" is not allowed."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:72
msgid "Name of the input."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:77
msgid "Description of the input."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:81
msgid "Type of the value of the input."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:88
msgid "Default value for the input if none is specified."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:95
msgid "Name of the output."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:100
msgid "Description of the output."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:104
msgid "Type of the value of the output."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:111
msgid ""
"Denotes that the deployment is in an error state if this output has a "
"value."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:120
msgid ""
"Namespace to group this software config by when delivered to a server. "
"This may imply what configuration tool is going to perform the "
"configuration."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:127
msgid ""
"Configuration script or manifest which specifies what actual "
"configuration is performed."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:132
msgid ""
"Map containing options specific to the configuration management tool used"
" by this resource."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:137
msgid "Schema representing the inputs that this software config is expecting."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:144
msgid "Schema representing the outputs that this software config will produce."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:153
msgid "The config value of the software config."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:114
msgid ""
"ID of software configuration resource to execute when applying to the "
"server."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:120
msgid "ID of Nova server to apply configuration to."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:127
msgid "Input values to apply to the software configuration on this server."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:133
msgid "Which stack actions will result in this deployment being triggered."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:141
msgid ""
"Name of the derived config associated with this deployment. This is used "
"to apply a sort order to the list of configurations currently deployed to"
" a server."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:147
msgid ""
"How the server should signal to heat with the deployment output values. "
"CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. "
"TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. "
"HEAT_SIGNAL will allow calls to the Heat API resource-signal using the "
"provided keystone credentials. NO_SIGNAL will result in the resource "
"going to the COMPLETE state without waiting for any signal."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:164
msgid "Captured stdout from the configuration execution."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:167
msgid "Captured stderr from the configuration execution."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:170
msgid "Returned status code from the configuration execution"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:200
msgid "Not waiting for outputs signal"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:203
msgid "Deploy data available"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:265
#, python-format
msgid "Deployment to server failed: %s"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:350
msgid "ID of the server being deployed to"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:355
msgid "Name of the current action being deployed"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:360
msgid "ID of the stack this deployment belongs to"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:365
msgid "Name of this deployment resource in the stack"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:371
msgid "How the server should signal to heat with the deployment output values."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:379
#: heat/engine/resources/openstack/heat/software_deployment.py:394
msgid "ID of signal to use for signaling output values"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:386
#: heat/engine/resources/openstack/heat/software_deployment.py:401
msgid "HTTP verb to use for signaling output values"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:409
msgid "URL for API authentication"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:414
msgid "Username for API authentication"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:419
msgid "User ID for API authentication"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:424
msgid "Password for API authentication"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:429
msgid "ID of project for API authentication"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:562
#, python-format
msgid ""
"Resource %s's property user_data_format should be set to SOFTWARE_CONFIG "
"since there are software deployments on it."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:600
msgid "A map of Nova names and IDs to apply configuration to."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:612
msgid ""
"A map of Nova names and captured stdouts from the configuration execution"
" to each server."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:616
msgid ""
"A map of Nova names and captured stderrs from the configuration execution"
" to each server."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:620
msgid ""
"A map of Nova names and returned status code from the configuration "
"execution"
msgstr ""

#: heat/engine/resources/openstack/heat/structured_config.py:61
msgid ""
"Map representing the configuration data structure which will be "
"serialized to JSON format."
msgstr ""

#: heat/engine/resources/openstack/heat/structured_config.py:116
msgid "Name of key to use for substituting inputs during deployment"
msgstr ""

#: heat/engine/resources/openstack/heat/structured_config.py:121
msgid ""
"Perform a check on the input values passed to verify that each required "
"input has a corresponding value. When the property is set to STRICT and "
"no value is passed, an exception is raised."
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:72
msgid ""
"Tokens are not needed for Swift TempURLs.  This attribute is being kept "
"for compatibility with the OS::Heat::WaitConditionHandle resource"
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:78
#: heat/engine/resources/openstack/heat/wait_condition_handle.py:50
msgid "Endpoint/url which can be used for signalling handle"
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:82
#: heat/engine/resources/openstack/heat/wait_condition_handle.py:54
msgid ""
"Convenience attribute, provides curl CLI command prefix, which can be "
"used for signalling handle completion or failure.  You can signal success"
" by adding --data-binary '{\"status\": \"SUCCESS\"}' , or signal failure "
"by adding --data-binary '{\"status\": \"FAILURE\"}'"
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:151
msgid ""
"URL of TempURL where resource will signal completion and optionally "
"upload data."
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:156
msgid ""
"The maximum number of seconds to wait for the resource to signal "
"completion.  Once the timeout is reached, creation of the signal resource"
" will fail."
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:181
msgid "JSON data that was uploaded via the SwiftSignalHandle."
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:218
#, python-format
msgid "\"%(url)s\" is not a valid SwiftSignalHandle.  The %(part)s is invalid"
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:267
#, python-format
msgid "Failed to parse JSON data: %s"
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:324
#, python-format
msgid "Unknown status: %s"
msgstr ""

#: heat/engine/resources/openstack/heat/wait_condition_handle.py:46
msgid "Token for stack-user which can be used for signalling handle"
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:46
#: heat/engine/resources/openstack/neutron/firewall.py:82
msgid "Name for the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:51
msgid "Description for the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:56
msgid ""
"Administrative state of the firewall. If false (down), firewall does not "
"forward packets and will drop all traffic to/from VMs behind the "
"firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:64
msgid "The ID of the firewall policy that this firewall is associated with."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:71
msgid ""
"Whether this firewall should be shared across all tenants. NOTE: The "
"default policy setting in Neutron restricts usage of this property to "
"administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:85
msgid "Description of the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:88
msgid "The administrative state of the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:91
msgid "Unique identifier of the firewall policy used to create the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:95
msgid "Shared status of this firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:98
msgid "The status of the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:101
#: heat/engine/resources/openstack/neutron/firewall.py:377
msgid "Id of the tenant owning the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:104
#: heat/engine/resources/openstack/neutron/floatingip.py:107
#: heat/engine/resources/openstack/neutron/loadbalancer.py:137
#: heat/engine/resources/openstack/neutron/loadbalancer.py:587
#: heat/engine/resources/openstack/neutron/net.py:97
#: heat/engine/resources/openstack/neutron/network_gateway.py:143
#: heat/engine/resources/openstack/neutron/port.py:233
#: heat/engine/resources/openstack/neutron/provider_net.py:83
#: heat/engine/resources/openstack/neutron/router.py:143
#: heat/engine/resources/openstack/neutron/subnet.py:218
#: heat/engine/resources/openstack/neutron/vpnservice.py:112
msgid "All attributes."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:156
#: heat/engine/resources/openstack/neutron/firewall.py:190
msgid "Name for the firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:161
msgid "Description for the firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:166
msgid "Whether this policy should be shared across all tenants."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:172
msgid ""
"Whether this policy should be audited. When set to True, each time the "
"firewall policy or the associated firewall rules are changed, this "
"attribute will be set to False and will have to be explicitly set to True"
" through an update operation."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:182
msgid "An ordered list of firewall rules to apply to the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:193
msgid "Description of the firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:196
msgid "List of firewall rules in this firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:199
msgid "Shared status of this firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:202
msgid "Audit status of this firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:205
msgid "Id of the tenant owning the firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:266
#: heat/engine/resources/openstack/neutron/firewall.py:337
msgid "Name for the firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:271
msgid "Description for the firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:276
msgid "Whether this rule should be shared across all tenants."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:282
msgid "Protocol for the firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:291
msgid "Internet protocol version."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:300
msgid "Source IP address or CIDR."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:305
msgid "Destination IP address or CIDR."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:310
msgid "Source port number or a range."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:315
msgid "Destination port number or a range."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:320
msgid "Action to be performed on the traffic matching the rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:329
msgid "Whether this rule should be enabled."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:340
msgid "Description of the firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:343
msgid ""
"Unique identifier of the firewall policy to which this firewall rule "
"belongs."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:347
msgid "Shared status of this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:350
msgid "Protocol value for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:353
msgid "Ip_version for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:356
msgid "Source ip_address for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:359
msgid "Destination ip_address for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:362
msgid "Source port range for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:365
msgid "Destination port range for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:368
msgid "Allow or deny action for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:371
msgid "Indicates whether this firewall rule is enabled or not."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:374
msgid "Position of the rule within the firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:56
msgid "Network to allocate floating IP from."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:65
msgid ""
"Extra parameters to include in the \"floatingip\" object in the creation "
"request. Parameters are often specific to installed hardware or "
"extensions."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:72
#: heat/engine/resources/openstack/neutron/floatingip.py:226
msgid ""
"ID of an existing port with at least one IP address to associate with "
"this floating IP."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:81
#: heat/engine/resources/openstack/neutron/floatingip.py:236
msgid "IP address to use if the port has multiple addresses."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:88
msgid "ID of the router used as gateway, set when associated with a port."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:92
msgid "The tenant owning this floating IP."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:95
msgid "ID of the network in which this IP is allocated."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:98
msgid "IP address of the associated port, if specified."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:101
msgid "The allocated address of this IP."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:104
msgid "ID of the port associated with this IP."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:220
msgid "ID of the floating IP to associate."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:50
#: heat/engine/resources/openstack/neutron/loadbalancer.py:108
msgid "The minimum time in seconds between regular connections of the member."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:57
#: heat/engine/resources/openstack/neutron/loadbalancer.py:127
msgid "One of predefined health monitor types."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:65
#: heat/engine/resources/openstack/neutron/loadbalancer.py:119
msgid ""
"Number of permissible connection failures before changing the member "
"status to INACTIVE."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:72
#: heat/engine/resources/openstack/neutron/loadbalancer.py:123
msgid ""
"Maximum number of seconds for a monitor to wait for a connection to be "
"established before it times out."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:79
msgid "The administrative state of the health monitor."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:85
#: heat/engine/resources/openstack/neutron/loadbalancer.py:116
msgid "The HTTP method used for requests by the monitor of type HTTP."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:91
#: heat/engine/resources/openstack/neutron/loadbalancer.py:112
msgid ""
"The list of HTTP status codes expected in response from the member to "
"declare it healthy."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:97
#: heat/engine/resources/openstack/neutron/loadbalancer.py:130
msgid ""
"The HTTP path used in the HTTP request used by the monitor to test a "
"member health."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:105
msgid "The administrative state of this health monitor."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:134
msgid "Tenant owning the health monitor."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:207
msgid "Protocol for balancing."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:222
#: heat/engine/resources/openstack/neutron/loadbalancer.py:331
msgid ""
"The subnet for the port on which the members of the pool will be "
"connected."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:229
#: heat/engine/resources/openstack/neutron/loadbalancer.py:335
msgid "The algorithm used to distribute load between the members of the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:240
#: heat/engine/resources/openstack/neutron/loadbalancer.py:325
msgid "Name of the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:244
#: heat/engine/resources/openstack/neutron/loadbalancer.py:339
msgid "Description of the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:249
#: heat/engine/resources/openstack/neutron/loadbalancer.py:322
msgid "The administrative state of this pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:255
msgid "IP address and port of the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:259
msgid "Name of the vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:263
msgid "Description of the vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:267
msgid "Subnet of the vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:271
msgid "IP address of the vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:275
msgid "The maximum number of connections per second allowed for the vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:280
msgid ""
"TCP port on which to listen for client traffic that is associated with "
"the vip address."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:286
msgid "Configuration of session persistence."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:290
msgid "Method of implementation of session persistence feature."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:299
msgid "Name of the cookie, required if type is APP_COOKIE."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:306
msgid "The administrative state of this vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:314
msgid "List of health monitors associated with the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:328
msgid "Protocol to balance."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:342
msgid "Tenant owning the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:345
msgid "Vip associated with the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:365
#: heat/tests/test_neutron_loadbalancer.py:620
msgid ""
"Property cookie_name is required, when session_persistence type is set to"
" APP_COOKIE."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:426
msgid "error in vip"
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:429
msgid "Pool creation failed due to vip"
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:433
msgid "error in pool"
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:437
msgid "Pool creation failed"
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:533
#: heat/engine/resources/openstack/neutron/loadbalancer.py:580
#: heat/engine/resources/openstack/neutron/loadbalancer.py:644
msgid "The ID of the load balancing pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:539
msgid "IP address of the pool member on the pool network."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:544
#: heat/engine/resources/openstack/neutron/loadbalancer.py:583
msgid "TCP port on which the pool member listens for requests or connections."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:553
msgid "Weight of pool member in the pool (default to 1)."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:561
msgid "The administrative state of the pool member."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:568
msgid "The administrative state of this pool member."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:571
msgid "Tenant owning the pool member."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:574
msgid "Weight of the pool member in the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:577
msgid "IP address of the pool member."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:650
msgid "Port number on which the servers are running on the members."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:655
msgid "The list of Nova server IDs load balanced."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:44
#: heat/engine/resources/openstack/neutron/metering.py:61
msgid "Name of the metering label."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:48
#: heat/engine/resources/openstack/neutron/metering.py:64
msgid "Description of the metering label."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:52
msgid "Whether the metering label should be shared across all tenants."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:67
msgid "Shared status of the metering label."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:118
#: heat/engine/resources/openstack/neutron/metering.py:152
msgid "The metering label ID to associate with this metering rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:123
msgid "Indicates remote IP prefix to be associated with this metering rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:129
msgid "The direction in which metering rule is applied, either ingress or egress."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:137
msgid ""
"Specify whether the remote_ip_prefix will be excluded or not from traffic"
" counters of the metering label. For example to not count the traffic of "
"a specific IP address of a range."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:146
msgid "The direction in which metering rule is applied."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:149
msgid "Exclude state for cidr."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:155
msgid "CIDR to be associated with this metering rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:38
msgid ""
"A string specifying a symbolic name for the network, which is not "
"required to be unique."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:44
msgid ""
"Extra parameters to include in the \"network\" object in the creation "
"request. Parameters are often specific to installed hardware or "
"extensions."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:52
msgid "A boolean value specifying the administrative status of the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:59
msgid ""
"The ID of the tenant which will own the network. Only administrative "
"users can set the tenant identifier; this cannot be changed using "
"authorization policies."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:65
msgid ""
"Whether this network should be shared across all tenants. Note that the "
"default policy setting restricts usage of this attribute to "
"administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:73
msgid ""
"The IDs of the DHCP agent to schedule the network. Note that the default "
"policy setting in Neutron restricts usage of this property to "
"administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:82
#: heat/engine/resources/openstack/neutron/provider_net.py:77
msgid "The status of the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:85
msgid "The name of the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:88
#: heat/engine/resources/openstack/neutron/provider_net.py:80
msgid "Subnets of this network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:91
msgid "The administrative status of the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:94
msgid "The tenant owning this network."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:60
msgid "The name of the network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:65
msgid "Device info for this network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:74
msgid "The device id for the network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:80
msgid "The interface name for the network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:89
msgid "Connection info for this network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:107
msgid "The internal network to connect on the network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:118
msgid "L2 segmentation strategy on the external side of the network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:127
msgid ""
"The id for L2 segment on the external side of the network gateway. Must "
"be specified when using vlan."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:140
msgid "A boolean value of default flag."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:165
msgid "segmentation_id must be specified for using vlan"
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:169
msgid "segmentation_id cannot be specified except 0 for using flat"
msgstr ""

#: heat/engine/resources/openstack/neutron/neutron.py:119
msgid "Resource is not built"
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:78
msgid "Network this port belongs to."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:87
msgid "A symbolic name for this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:92
msgid ""
"Extra parameters to include in the \"port\" object in the creation "
"request."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:98
#: heat/engine/resources/openstack/neutron/port.py:199
msgid "The administrative state of this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:104
msgid "Desired IPs for this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:117
msgid "Subnet in which to allocate the IP address for this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:123
msgid "IP address desired in the subnet for this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:131
msgid "MAC address to give to this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:135
msgid "Device ID of this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:140
msgid "Security group IDs to associate with this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:145
msgid "Additional MAC/IP address pairs allowed to pass through the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:152
msgid "MAC address to allow through this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:156
msgid "IP address to allow through this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:164
msgid ""
"Name of the network owning the port. The value is typically "
"network:floatingip or network:router_interface or network:dhcp"
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:171
msgid ""
"Policy on how to respond to a stack-update for this resource. "
"REPLACE_ALWAYS will replace the port regardless of any property changes. "
"AUTO will update the existing port for any changed update-allowed "
"property."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:183
msgid ""
"The vnic type to be bound on the neutron port. To support SR-IOV PCI "
"passthrough networking, you can request that the neutron port to be "
"realized as normal (virtual nic), direct (pci passthrough), or macvtap "
"(virtual interface with a tap-like software interface). Note that this "
"only works for Neutron deployments that support the bindings extension."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:202
msgid "Unique identifier for the device."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:205
msgid "Name of the network owning the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:208
msgid "Fixed IP addresses."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:211
msgid "MAC address of the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:214
msgid "Friendly name of the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:217
msgid "Unique identifier for the network owning the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:220
msgid "A list of security groups for the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:223
msgid "The status of the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:226
msgid "Tenant owning the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:229
msgid "Additional MAC/IP address pairs allowed to pass through a port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:236
msgid "A list of all subnet attributes for the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:45
msgid "A string specifying the provider network type for the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:55
msgid "A string specifying physical network mapping for the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:62
msgid "A string specifying the segmentation id for the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:69
msgid "Whether this network should be shared across all tenants."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:96
msgid "segmentation_id not allowed for flat network type."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:51
msgid "The name of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:56
msgid "External network gateway configuration for a router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:60
msgid "ID or name of the external network for the gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:66
msgid ""
"Enables Source NAT on the router gateway. NOTE: The default policy "
"setting in Neutron restricts usage of this property to administrative "
"users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:76
#: heat/engine/resources/openstack/neutron/subnet.py:89
msgid "Extra parameters to include in the creation request."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:82
msgid "The administrative state of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:88
msgid ""
"ID of the L3 agent. NOTE: The default policy setting in Neutron restricts"
" usage of this property to administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:94
#: heat/engine/resources/openstack/neutron/router.py:291
#, python-format
msgid "Deprecated in Kilo. Use property %s."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:98
msgid ""
"ID list of the L3 agent. User can specify multi-agents for highly "
"available router. NOTE: The default policy setting in Neutron restricts "
"usage of this property to administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:110
msgid ""
"Indicates whether or not to create a distributed router. NOTE: The "
"default policy setting in Neutron restricts usage of this property to "
"administrative users only. This property can not be used in conjunction "
"with the L3 agent ID."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:118
msgid ""
"Indicates whether or not to create a highly available router. NOTE: The "
"default policy setting in Neutron restricts usage of this property to "
"administrative users only. And now neutron do not support distributed and"
" ha at the same time."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:128
msgid "The status of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:131
msgid "Gateway network for the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:134
msgid "Friendly name of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:137
msgid "Administrative state of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:140
msgid "Tenant owning the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:165
msgid "Non HA routers can only have one L3 agent."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:266
msgid "The router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:270
#: heat/engine/resources/openstack/neutron/router.py:389
msgid "ID of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:283
msgid "The subnet, either subnet or port should be specified."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:288
msgid "The port id, either subnet or port_id should be specified."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:299
msgid "The port, either subnet or port should be specified."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:375
msgid ""
"RouterGateway resource is deprecated and should not be used. Instead use "
"the `external_gateway_info` property in the router resource to set up the"
" gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:404
msgid "external network for the gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:45
msgid ""
"The direction in which the security group rule is applied. For a compute "
"instance, an ingress security group rule matches traffic that is incoming"
" (ingress) for that instance. An egress rule is applied to traffic "
"leaving the instance."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:57
msgid "Ethertype of the traffic."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:65
msgid ""
"The minimum port number in the range that is matched by the security "
"group rule. If the protocol is TCP or UDP, this value must be less than "
"or equal to the value of the port_range_max attribute. If the protocol is"
" ICMP, this value must be an ICMP type."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:73
msgid ""
"The maximum port number in the range that is matched by the security "
"group rule. The port_range_min attribute constrains the port_range_max "
"attribute. If the protocol is ICMP, this value must be an ICMP type."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:80
msgid ""
"The protocol that is matched by the security group rule. Valid values "
"include tcp, udp, and icmp."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:85
msgid "Whether to specify a remote group or a remote IP prefix."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:94
msgid ""
"The remote group ID to be associated with this security group rule. If no"
" value is specified then this rule will use this security group for the "
"remote_group_id. The remote mode parameter must be set to "
"\"remote_group_id\"."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:101
msgid ""
"The remote IP prefix (CIDR) to be associated with this security group "
"rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:109
msgid ""
"A string specifying a symbolic name for the security group, which is not "
"required to be unique."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:120
msgid "List of security group rules."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:138
msgid "Security groups cannot be assigned the name \"default\"."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:76
msgid "The ID of the attached network."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:84
msgid "The CIDR."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:95
msgid "The name of the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:100
msgid "The IP version, which is 4 or 6."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:108
msgid "A specified set of DNS name servers to be used."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:114
msgid ""
"The gateway IP address. Set to any of [ null | ~ | \"\" ] to create the "
"subnet without a gateway. If omitted, the first IP address within the "
"subnet is assigned to the gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:121
msgid "Set to true if DHCP is enabled and false if DHCP is disabled."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:127
msgid "The start and end addresses for the allocation pools."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:144
msgid ""
"The ID of the tenant who owns the network. Only administrative users can "
"specify a tenant ID other than their own."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:166
msgid ""
"IPv6 RA (Router Advertisement) mode. dhcpv6-stateful, dhcpv6-stateless, "
"or slaac."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:176
msgid "IPv6 address mode. dhcpv6-stateful, dhcpv6-stateless, or slaac."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:188
msgid "Friendly name of the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:191
msgid "Parent network of the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:194
msgid "Tenant owning the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:197
msgid "Ip allocation pools and their ranges."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:200
msgid "Ip of the subnet's gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:203
msgid "Additional routes for this subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:206
msgid "Ip version for the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:209
msgid "CIDR block notation for this subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:212
msgid "List of dns nameservers."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:215
msgid "'true' if DHCP is enabled for this subnet; 'false' otherwise."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:242
msgid "ipv6_ra_mode and ipv6_address_mode are not supported for ipv4."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:246
msgid "When both ipv6_ra_mode and ipv6_address_mode are set, they must be equal."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:46
msgid "Name for the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:51
msgid "Description for the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:56
msgid "Administrative state for the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:69
msgid "Subnet in which the vpn service will be created."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:75
msgid ""
"Unique identifier for the router to which the vpn service will be "
"inserted."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:79
#, python-format
msgid "Use property %s"
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:83
msgid "The router to which the vpn service will be inserted."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:89
msgid "The administrative state of the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:92
msgid "The description of the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:95
msgid "The name of the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:98
msgid "The unique identifier of the router to which the vpn service was inserted."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:102
msgid "The status of the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:105
msgid "The unique identifier of the subnet in which the vpn service was created."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:109
msgid "The unique identifier of the tenant owning the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:187
msgid "Name for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:192
msgid "Description for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:197
msgid "Remote branch router public IPv4 address or IPv6 address or FQDN."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:203
msgid "Remote branch router identity."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:208
msgid "Remote subnet(s) in CIDR format."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:213
msgid "Maximum transmission unit size (in bytes) for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:219
msgid "Dead Peer Detection protocol configuration for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:224
msgid "Controls DPD protocol mode."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:234
msgid "Number of seconds for the DPD delay."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:239
msgid "Number of seconds for the DPD timeout."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:246
msgid "Pre-shared key string for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:251
msgid "Initiator state in lowercase for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:259
msgid "Administrative state for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:265
msgid ""
"Unique identifier for the ike policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:271
msgid ""
"Unique identifier for the ipsec policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:277
msgid ""
"Unique identifier for the vpn service associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:285
msgid "The administrative state of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:288
msgid "The authentication mode of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:291
msgid "The description of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:294
msgid ""
"The dead peer detection protocol configuration of the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:298
msgid ""
"The unique identifier of ike policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:302
msgid "The initiator of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:305
msgid ""
"The unique identifier of ipsec policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:309
msgid ""
"The maximum transmission unit size (in bytes) of the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:313
msgid "The name of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:316
msgid "The remote branch router public IPv4 address or IPv6 address or FQDN."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:320
msgid "The remote subnet(s) in CIDR format of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:324
msgid "The remote branch router identity of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:328
msgid "The pre-shared key string of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:331
msgid "The route mode of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:334
msgid "The status of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:337
msgid "The unique identifier of the tenant owning the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:341
msgid ""
"The unique identifier of vpn service associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:405
msgid "Name for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:410
msgid "Description for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:415
msgid "Authentication hash algorithm for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:423
msgid "Encryption algorithm for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:432
msgid "Negotiation mode for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:440
msgid "Safety assessment lifetime configuration for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:444
#: heat/engine/resources/openstack/neutron/vpnservice.py:613
msgid "Safety assessment lifetime units."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:452
#: heat/engine/resources/openstack/neutron/vpnservice.py:622
msgid "Safety assessment lifetime value in specified units."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:460
msgid "Perfect forward secrecy in lowercase for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:468
msgid "Version for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:478
msgid "The authentication hash algorithm used by the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:481
msgid "The description of the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:484
msgid "The encryption algorithm used by the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:487
msgid "The version of the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:490
msgid "The safety assessment lifetime configuration for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:494
msgid "The name of the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:497
msgid "The perfect forward secrecy of the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:500
msgid "The negotiation mode of the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:503
msgid "The unique identifier of the tenant owning the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:565
msgid "Name for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:570
msgid "Description for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:575
msgid "Transform protocol for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:583
msgid "Encapsulation mode for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:591
msgid "Authentication hash algorithm for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:599
msgid "Encryption algorithm for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:608
msgid "Safety assessment lifetime configuration for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:630
msgid "Perfect forward secrecy for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:640
msgid "The authentication hash algorithm of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:643
msgid "The description of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:646
msgid "The encapsulation mode of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:649
msgid "The encryption algorithm of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:652
msgid "The safety assessment lifetime configuration of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:656
msgid "The name of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:659
msgid "The perfect forward secrecy of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:662
msgid "The unique identifier of the tenant owning the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:665
msgid "The transform protocol of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/nova/nova_floatingip.py:44
msgid "Allocate a floating IP from a given floating IP pool."
msgstr ""

#: heat/engine/resources/openstack/nova/nova_floatingip.py:51
msgid "Pool from which floating IP is allocated."
msgstr ""

#: heat/engine/resources/openstack/nova/nova_floatingip.py:54
msgid "Allocated floating IP address."
msgstr ""

#: heat/engine/resources/openstack/nova/nova_floatingip.py:113
msgid "Server to assign floating IP to."
msgstr ""

#: heat/engine/resources/openstack/nova/nova_floatingip.py:122
msgid "ID of the floating IP to assign to the server."
msgstr ""

#: heat/engine/resources/openstack/nova/nova_keypair.py:54
msgid "The name of the key pair."
msgstr ""

#: heat/engine/resources/openstack/nova/nova_keypair.py:62
msgid ""
"True if the system should remember a generated private key; False "
"otherwise."
msgstr ""

#: heat/engine/resources/openstack/nova/nova_keypair.py:68
msgid ""
"The optional public key. This allows users to supply the public key from "
"a pre-existing key pair. If not supplied, a new key pair will be "
"generated."
msgstr ""

#: heat/engine/resources/openstack/nova/nova_keypair.py:76
msgid "The public key."
msgstr ""

#: heat/engine/resources/openstack/nova/nova_keypair.py:79
msgid "The private key if it has been saved."
msgstr ""

#: heat/engine/resources/openstack/nova/nova_servergroup.py:36
msgid "Server Group name."
msgstr ""

#: heat/engine/resources/openstack/nova/nova_servergroup.py:40
msgid "A list of string policies to apply. Defaults to anti-affinity."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:99
msgid "Server name."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:104
msgid "The ID or name of the image to boot with."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:112
msgid "Block device mappings for this server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:118
msgid ""
"A device name where the volume will be attached in the system at "
"/dev/device_name. This value is typically vda."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:125
msgid ""
"The ID of the volume to boot from. Only one of volume_id or snapshot_id "
"should be provided."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:142
msgid ""
"The size of the volume, in GB. It is safe to leave this blank and have "
"the Compute service infer the size."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:148
msgid ""
"Indicate whether the volume should be deleted when the server is "
"terminated."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:156
msgid "The ID or name of the flavor to boot onto."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:165
msgid ""
"Policy on how to apply a flavor update; either by requesting a server "
"resize or by replacing the entire server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:175
msgid ""
"Policy on how to apply an image-id update; either by requesting a server "
"rebuild or by replacing the entire server"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:186
msgid "Name of keypair to inject into the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:193
msgid ""
"Name of the administrative user to use on the server. This property will "
"be removed from Juno in favor of the default cloud-init user set up for "
"each image (e.g. \"ubuntu\" for Ubuntu 12.04+, \"fedora\" for Fedora 19+ "
"and \"cloud-user\" for CentOS/RHEL 6.5)."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:202
msgid "Name of the availability zone for server placement."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:206
msgid ""
"List of security group names or IDs. Cannot be used if neutron ports are "
"associated with this server; assign security groups to the ports instead."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:213
msgid ""
"An ordered list of nics to be added to this server, with information "
"about connected networks, fixed ips, port etc."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:220
msgid "ID of network to create a port on."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:230
msgid "Name or ID of network to create a port on."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:237
msgid "Fixed IP address to specify for the port created on the requested network."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:242
msgid "ID of an existing port to associate with this server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:254
msgid "Arbitrary key-value pairs specified by the client to help boot a server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:259
msgid ""
"Arbitrary key/value metadata to store for this server. Both keys and "
"values must be 255 characters or less.  Non-string values will be "
"serialized to JSON (and the serialized string must be 255 characters or "
"less)."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:267
msgid ""
"How the user_data should be formatted for the server. For HEAT_CFNTOOLS, "
"the user_data is bundled as part of the heat-cfntools cloud-init boot "
"configuration data. For RAW the user_data is passed to Nova unmodified. "
"For SOFTWARE_CONFIG user_data is bundled as part of the software config "
"data, and metadata is derived from any associated SoftwareDeployment "
"resources."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:281
msgid ""
"How the server should receive the metadata required for software "
"configuration. POLL_SERVER_CFN will allow calls to the cfn API action "
"DescribeStackResource authenticated with the provided keypair. "
"POLL_SERVER_HEAT will allow calls to the Heat API resource-show using the"
" provided keystone credentials. POLL_TEMP_URL will create and populate a "
"Swift TempURL with metadata for polling."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:295
msgid "User data script to be executed by cloud-init."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:300
msgid "A UUID for the set of servers being requested."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:304
msgid "If True, enable config drive on the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:308
msgid "Control how the disk is partitioned when the server is created."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:316
msgid ""
"A map of files to create/overwrite on the server upon boot. Keys are file"
" names and values are the file contents."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:322
msgid "The administrator password for the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:330
msgid "Name of the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:333
msgid "A dict of all server details as returned by the API."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:336
msgid ""
"A dict of all network addresses with corresponding port_id. The port ID "
"may be obtained through the following expression: \"{get_attr: [<server>,"
" addresses, <network name>, 0, port]}\"."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:341
msgid ""
"A dict of assigned network addresses of the form: {\"public\": [ip1, "
"ip2...], \"private\": [ip3, ip4]}."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:345
msgid ""
"Convenience attribute to fetch the first assigned network address, or an "
"empty string if nothing has been assigned at this time. Result may not be"
" predictable if the server has addresses from more than one network."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:351
msgid ""
"Use the networks attribute instead of first_address. For example: "
"\"{get_attr: [<server name>, networks, <network name>, 0]}\""
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:357
msgid "AWS compatible instance name."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:360
msgid "The manually assigned alternative public IPv4 address of the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:364
msgid "The manually assigned alternative public IPv6 address of the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:368
msgid ""
"URLs of server's consoles. To get a specific console type, the requested "
"type can be specified as parameter to the get_attr function, e.g. "
"get_attr: [ <server>, console_urls, novnc ]. Currently supported types "
"are novnc, xvpvnc, spice-html5, rdp-html5, serial."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:616
msgid "Server is not active"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:987
#, python-format
msgid "Either volume_id or snapshot_id must be specified for device mapping %s"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:994
#, python-format
msgid "Neither image nor bootable volume is specified for instance %s"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1007
#, python-format
msgid ""
"Properties \"%(uuid)s\" and \"%(id)s\" are both set to the network "
"\"%(network)s\" for the server \"%(server)s\". The \"%(uuid)s\" property "
"is deprecated. Use only \"%(id)s\" property."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1043
#, python-format
msgid ""
"Instance metadata must not contain greater than %s entries.  This is the "
"maximum number allowed by your service provider"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1052
#, python-format
msgid "The personality property may not contain greater than %s entries."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1058
#, python-format
msgid ""
"The contents of personality file \"%(path)s\" is larger than the maximum "
"allowed personality file size (%(max_size)s bytes)."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1118
#: heat/engine/resources/openstack/nova/server.py:1167
#, python-format
msgid "Failed to find server %s"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1147
#, python-format
msgid "Suspend of server %(server)s failed with unknown status: %(status)s"
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_cluster.py:54
msgid "Hadoop cluster name."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_cluster.py:58
#: heat/engine/resources/openstack/sahara/sahara_templates.py:69
#: heat/engine/resources/openstack/sahara/sahara_templates.py:284
msgid "Plugin name."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_cluster.py:63
#: heat/engine/resources/openstack/sahara/sahara_templates.py:74
#: heat/engine/resources/openstack/sahara/sahara_templates.py:289
msgid "Version of Hadoop running on instances."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_cluster.py:68
msgid "ID of the Cluster Template used for Node Groups and configurations."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_cluster.py:74
msgid "Keypair added to instances to make them accessible for user."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_cluster.py:81
msgid "Name or UUID of the image used to boot Hadoop nodes."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_cluster.py:84
#, python-format
msgid "Property was deprecated in Kilo release. Use property %s."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_cluster.py:92
msgid "Default name or UUID of the image used to boot Hadoop nodes."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_cluster.py:99
#: heat/engine/resources/openstack/sahara/sahara_templates.py:301
msgid "Name or UUID of network."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_cluster.py:108
msgid "Cluster status."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_cluster.py:111
msgid "Cluster information."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_cluster.py:143
#, python-format
msgid ""
"%(img)s must be provided: Referenced cluster template %(tmpl)s has no "
"default_image_id defined."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_cluster.py:223
#: heat/engine/resources/openstack/sahara/sahara_templates.py:406
#, python-format
msgid "%s must be provided"
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:56
msgid "Name for the Sahara Node Group Template."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:64
msgid "Description of the Node Group Template."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:79
msgid "Name or ID Nova flavor for the nodes."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:87
msgid "Volumes per node."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:94
msgid "Size of the volumes, in GB."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:101
msgid "Type of the volume to create on Cinder backend."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:108
msgid "List of security group names or IDs to assign to this Node Group template."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:116
msgid "Defines whether auto-assign security group to this Node Group template."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:121
msgid "Availability zone to create servers in."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:125
msgid "Availability zone to create volumes in."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:129
msgid "List of processes to run on every node."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:140
msgid ""
"Name or UUID of the Neutron floating IP network or name of the Nova "
"floating ip pool to use. Should not be provided when used with Nova-"
"network that auto-assign floating IPs."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:147
msgid "Dictionary of node configurations."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:151
msgid "ID of the image to use for the template."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:271
msgid "Name for the Sahara Cluster Template."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:279
msgid "Description of the Sahara Group Template."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:294
msgid "ID of the default image to use for the template."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:308
msgid "List of processes to enable anti-affinity for."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:315
msgid "Cluster configs dictionary."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:319
msgid "Node groups."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:325
msgid "Name of the Node group."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:330
msgid "Number of instances in the Node group."
msgstr ""

#: heat/engine/resources/openstack/sahara/sahara_templates.py:338
msgid "ID of the Node Group Template."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:49
msgid "Name for the container. If not specified, a unique name will be generated."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:54
msgid "Specify the ACL permissions on who can read objects in the container."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:59
msgid "Specify the ACL permissions on who can write objects to the container."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:64
msgid ""
"A map of user-defined meta data to associate with the container. Each key"
" in the map will set the header X-Container-Meta-{key} with the "
"corresponding value."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:71
msgid ""
"A map of user-defined meta data to associate with the account. Each key "
"in the map will set the header X-Account-Meta-{key} with the "
"corresponding value."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:78
msgid ""
"If True, delete any objects in the container when the container is "
"deleted. Otherwise, deleting a non-empty container will result in an "
"error."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:90
msgid "The host from the container URL."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:93
msgid "The URL of the container."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:96
msgid "The parent URL of the container."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:99
msgid "The number of objects stored in the container."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:102
msgid "The number of bytes stored in the container."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:105
msgid "A map containing all headers for the container."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:189
#, python-format
msgid "Deleting non-empty container (%(id)s) when %(prop)s is False"
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:43
msgid ""
"The database instance was created, but heat failed to set up the "
"datastore. If a database instance is in the FAILED state, it should be "
"deleted and a new one should be created."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:47
msgid "The last operation for the database instance failed due to an error."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:87
msgid "Name of the DB instance to create."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:94
msgid "Reference to a flavor for creating DB instance."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:99
msgid "Name of registered datastore type."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:106
msgid ""
"Name of the registered datastore version. It must exist for provided "
"datastore type. Defaults to using single active version. If several "
"active versions exist for provided datastore type, explicit value for "
"this parameter must be specified."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:115
msgid "Database volume size in GB."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:123
msgid "List of network interfaces to create on instance."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:130
#, python-format
msgid ""
"Name or UUID of the network to attach this NIC to. Either %(port)s or "
"%(net)s must be specified."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:139
#, python-format
msgid ""
"Name or UUID of Neutron port to attach this NIC to. Either %(port)s or "
"%(net)s must be specified."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:149
msgid "Fixed IPv4 address for this NIC."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:156
msgid "List of databases to be created on DB instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:163
msgid "Set of symbols and encodings."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:168
msgid "Set of rules for comparing characters in a character set."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:174
msgid "Specifies database names for creating databases on instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:189
msgid "List of users to be created on DB instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:196
msgid "User name to create a user on instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:208
msgid "Password for those users on instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:219
msgid "The host from which a user is allowed to connect to the database."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:225
msgid "Names of databases that those users can access on instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:240
msgid "Name of the availability zone for DB instance."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:244
msgid "DB instance restore point."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:250
msgid "Hostname of the instance."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:253
msgid "Api endpoint reference of the instance."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:440
#, python-format
msgid ""
"Databases property is required if users property is provided for resource"
" %s."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:450
#, python-format
msgid ""
"Database %(dbs)s specified for user does not exist in databases for "
"resource %(name)s."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:460
#, python-format
msgid "Can not use %s property on Nova-network."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:464
#, python-format
msgid "Either %(net)s or %(port)s must be provided."
msgstr ""

#: heat/openstack/common/policy.py:111
msgid "The JSON file that defines policies."
msgstr ""

#: heat/openstack/common/policy.py:114
msgid "Default rule. Enforced when a requested rule is not found."
msgstr ""

#: heat/openstack/common/policy.py:118
msgid ""
"Directories where policy configuration files are stored. They can be "
"relative to any directory in the search path defined by the config_dir "
"option, or absolute paths. The file defined by policy_file must exist for"
" these directories to be searched."
msgstr ""

#: heat/openstack/common/policy.py:142
#, python-format
msgid "Policy doesn't allow %s to be performed."
msgstr ""

#: heat/openstack/common/policy.py:239
#, python-format
msgid "Rules must be an instance of dict or Rules, got %s instead"
msgstr ""

#: heat/openstack/common/versionutils.py:99
#, python-format
msgid ""
"%(what)s is deprecated as of %(as_of)s in favor of %(in_favor_of)s and "
"may be removed in %(remove_in)s."
msgstr ""

#: heat/openstack/common/versionutils.py:103
#, python-format
msgid ""
"%(what)s is deprecated as of %(as_of)s and may be removed in "
"%(remove_in)s. It will not be superseded."
msgstr ""

#: heat/openstack/common/versionutils.py:107
#, python-format
msgid "%(what)s is deprecated as of %(as_of)s in favor of %(in_favor_of)s."
msgstr ""

#: heat/openstack/common/versionutils.py:110
#, python-format
msgid "%(what)s is deprecated as of %(as_of)s. It will not be superseded."
msgstr ""

#: heat/openstack/common/versionutils.py:232
#, python-format
msgid "Deprecated: %s"
msgstr ""

#: heat/openstack/common/versionutils.py:250
#, python-format
msgid "Fatal call to deprecated config: %(msg)s"
msgstr ""

#: heat/openstack/common/crypto/utils.py:43
msgid "An unknown error occurred in crypto utils."
msgstr ""

#: heat/openstack/common/crypto/utils.py:50
#, python-format
msgid "Block size of %(given)d is too big, max = %(maximum)d"
msgstr ""

#: heat/openstack/common/crypto/utils.py:59
#, python-format
msgid "Length of %(given)d is too long, max = %(maximum)d"
msgstr ""

#: heat/scaling/lbutils.py:42
#, python-format
msgid "Unsupported resource '%s' in LoadBalancerNames"
msgstr ""

#: heat/tests/test_exception.py:27
#, python-format
msgid "Testing message %(text)s"
msgstr ""

#: heat/tests/test_fault_middleware.py:150
msgid "Error"
msgstr ""

#: heat/tests/test_function.py:35
msgid "Need more arguments"
msgstr ""

#: heat/tests/test_provider_template.py:603
#: heat/tests/test_provider_template.py:719
#: heat/tests/test_provider_template.py:748
msgid "Failed to retrieve template"
msgstr ""

#: heat/tests/test_remote_stack.py:572
msgid ""
"ResourceInError: Went to status UPDATE_FAILED due to \"Remote stack "
"update failed\""
msgstr ""

#: heat/tests/test_server.py:1036
#, python-format
msgid ""
"Properties \"uuid\" and \"network\" are both set to the network "
"\"%(network)s\" for the server \"%(server)s\". The \"uuid\" property is "
"deprecated. Use only \"network\" property."
msgstr ""

#: heat/tests/test_software_deployment.py:722
msgid "need more memory."
msgstr ""

#: heat/tests/test_validate.py:1366
msgid "The InstanceType parameter must be assigned to one Parameter Group only."
msgstr ""

#: heat/tests/test_validate.py:1381
msgid ""
"The Parameter name (SomethingNotHere) does not reference an existing "
"parameter."
msgstr ""

