# Translations template for heat.
# Copyright (C) 2016 ORGANIZATION
# This file is distributed under the same license as the heat project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: heat 6.0.0.0b2.dev223\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2016-01-18 06:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: heat/api/aws/ec2token.py:34
msgid "Authentication Endpoint URI."
msgstr ""

#: heat/api/aws/ec2token.py:37 heat/common/config.py:259
msgid "Allow orchestration of multiple clouds."
msgstr ""

#: heat/api/aws/ec2token.py:40 heat/common/config.py:262
msgid ""
"Allowed keystone endpoints for auth_uri when multi_cloud is enabled. At "
"least one endpoint needs to be specified."
msgstr ""

#: heat/api/aws/ec2token.py:45 heat/common/config.py:276
#: heat/common/config.py:296
msgid "Optional PEM-formatted certificate chain file."
msgstr ""

#: heat/api/aws/ec2token.py:48 heat/common/config.py:278
#: heat/common/config.py:298
msgid "Optional PEM-formatted file that contains the private key."
msgstr ""

#: heat/api/aws/ec2token.py:52 heat/common/config.py:274
#: heat/common/config.py:294
msgid "Optional CA cert file to use in SSL connections."
msgstr ""

#: heat/api/aws/ec2token.py:55 heat/common/config.py:282
#: heat/common/config.py:301
msgid "If set, then the server's certificate will not be verified."
msgstr ""

#: heat/api/aws/ec2token.py:190
msgid "Service misconfigured"
msgstr ""

#: heat/api/aws/exception.py:38
msgid "Generic HeatAPIException, please use specific subclasses!"
msgstr ""

#: heat/api/aws/exception.py:77
msgid "The request signature does not conform to AWS standards"
msgstr ""

#: heat/api/aws/exception.py:86
msgid "The request processing has failed due to an internal error"
msgstr ""

#: heat/api/aws/exception.py:97
msgid "The action or operation requested is invalid"
msgstr ""

#: heat/api/aws/exception.py:106
msgid "The certificate or AWS Key ID provided does not exist"
msgstr ""

#: heat/api/aws/exception.py:115
msgid "Incompatible parameters were used together"
msgstr ""

#: heat/api/aws/exception.py:124
msgid "A bad or out-of-range value was supplied"
msgstr ""

#: heat/api/aws/exception.py:133
msgid "AWS query string is malformed, does not adhere to AWS spec"
msgstr ""

#: heat/api/aws/exception.py:143
msgid "The query string is malformed"
msgstr ""

#: heat/api/aws/exception.py:152
msgid "The request is missing an action or operation parameter"
msgstr ""

#: heat/api/aws/exception.py:165
msgid "Does not contain a valid AWS Access Key or certificate"
msgstr ""

#: heat/api/aws/exception.py:177
msgid "A mandatory input parameter is missing"
msgstr ""

#: heat/api/aws/exception.py:186
msgid "The AWS Access Key ID needs a subscription for the service"
msgstr ""

#: heat/api/aws/exception.py:200
msgid "Request expired or more than 15mins in the future"
msgstr ""

#: heat/api/aws/exception.py:209
msgid "Service temporarily unavailable"
msgstr ""

#: heat/api/aws/exception.py:219
msgid "Request was denied due to request throttling"
msgstr ""

#: heat/api/aws/exception.py:228
msgid "Resource with the name requested already exists"
msgstr ""

#: heat/api/aws/exception.py:242
msgid "User is not authorized to perform action"
msgstr ""

#: heat/api/aws/exception.py:251
msgid ""
"The request signature we calculated does not match the signature you "
"provided"
msgstr ""

#: heat/api/aws/exception.py:262
msgid "The requested action is not yet implemented"
msgstr ""

#: heat/api/cfn/v1/stacks.py:57 heat/api/cloudwatch/watch.py:51
#, python-format
msgid "Action %s not allowed for user"
msgstr ""

#: heat/api/cfn/v1/stacks.py:64 heat/api/cloudwatch/watch.py:58
#, python-format
msgid "Error authorizing action %s"
msgstr ""

#: heat/api/cfn/v1/stacks.py:252
#, python-format
msgid "Failed to fetch template: %s"
msgstr ""

#: heat/api/cfn/v1/stacks.py:287
msgid "DisableRollback and OnFailure may not be used together"
msgstr ""

#: heat/api/cfn/v1/stacks.py:307
#, python-format
msgid "Unexpected action %(action)s"
msgstr ""

#: heat/api/cfn/v1/stacks.py:325 heat/api/cfn/v1/stacks.py:421
msgid "Invalid Template URL"
msgstr ""

#: heat/api/cfn/v1/stacks.py:329 heat/api/cfn/v1/stacks.py:424
msgid "TemplateBody or TemplateUrl were not given."
msgstr ""

#: heat/api/cfn/v1/stacks.py:335 heat/api/cfn/v1/stacks.py:430
msgid "The Template must be a JSON or YAML document."
msgstr ""

#: heat/api/cfn/v1/stacks.py:391
msgid "stack not found"
msgstr ""

#: heat/api/cloudwatch/watch.py:302
#, python-format
msgid "Invalid state %(state)s, expecting one of %(expect)s"
msgstr ""

#: heat/api/openstack/v1/actions.py:51
msgid "No action specified"
msgstr ""

#: heat/api/openstack/v1/actions.py:54
msgid "Multiple actions specified"
msgstr ""

#: heat/api/openstack/v1/actions.py:58
#, python-format
msgid "Invalid action %s specified"
msgstr ""

#: heat/api/openstack/v1/actions.py:69
#, python-format
msgid "Unexpected action %s"
msgstr ""

#: heat/api/openstack/v1/events.py:137
#, python-format
msgid "No events found for resource %s"
msgstr ""

#: heat/api/openstack/v1/events.py:149
#, python-format
msgid "No event %s found"
msgstr ""

#: heat/api/openstack/v1/services.py:41
msgid "All heat engines are down."
msgstr ""

#: heat/api/openstack/v1/stacks.py:79
#, python-format
msgid "%(type)s not in valid format: %(error)s"
msgstr ""

#: heat/api/openstack/v1/stacks.py:85
msgid "No stack name specified"
msgstr ""

#: heat/api/openstack/v1/stacks.py:101 heat/engine/api.py:64
#, python-format
msgid "Invalid adopt data: %s"
msgstr ""

#: heat/api/openstack/v1/stacks.py:113
#, python-format
msgid "Could not retrieve template: %s"
msgstr ""

#: heat/api/openstack/v1/stacks.py:120
msgid "No template specified"
msgstr ""

#: heat/api/openstack/v1/stacks.py:603
#, python-format
msgid "Template type is not supported: %s"
msgstr ""

#: heat/api/openstack/v1/util.py:64
msgid "Invalid Stack address"
msgstr ""

#: heat/cmd/manage.py:55
msgid "Hostname"
msgstr ""

#: heat/cmd/manage.py:56
msgid "Binary"
msgstr ""

#: heat/cmd/manage.py:57
msgid "Engine_Id"
msgstr ""

#: heat/cmd/manage.py:58
msgid "Host"
msgstr ""

#: heat/cmd/manage.py:59
msgid "Topic"
msgstr ""

#: heat/cmd/manage.py:60
msgid "Status"
msgstr ""

#: heat/cmd/manage.py:61
msgid "Updated At"
msgstr ""

#: heat/cmd/manage.py:78
msgid "Dead engines are removed."
msgstr ""

#: heat/cmd/manage.py:132
msgid "How long to preserve deleted data."
msgstr ""

#: heat/cmd/manage.py:137
msgid "Granularity to use for age argument, defaults to days."
msgstr ""

#: heat/cmd/manage.py:145
msgid ""
"Valid values are encrypt or decrypt. The heat-engine processes must be "
"stopped to use this."
msgstr ""

#: heat/cmd/manage.py:152
msgid ""
"Provide old encryption key. New encryption key would be used from config "
"file."
msgstr ""

#: heat/cmd/manage.py:158
msgid "Stack resource id"
msgstr ""

#: heat/common/auth_url.py:41
msgid "Request missing required header X-Auth-Url"
msgstr ""

#: heat/common/auth_url.py:45
#, python-format
msgid "Header X-Auth-Url \"%s\" not an allowed endpoint"
msgstr ""

#: heat/common/cache.py:41
msgid ""
"TTL, in seconds, for any cached item in the dogpile.cache region used for"
" caching of validation constraints."
msgstr ""

#: heat/common/cache.py:46
msgid ""
"Toggle to enable/disable caching when Orchestration Engine validates "
"property constraints of stack.During property validation with constraints"
" Orchestration Engine caches requests to other OpenStack services. Please"
" note that the global toggle for oslo.cache(enabled=True in [cache] "
"group) must be enabled to use this feature."
msgstr ""

#: heat/common/cache.py:61
msgid ""
"TTL, in seconds, for any cached item in the dogpile.cache region used for"
" caching of service extensions."
msgstr ""

#: heat/common/cache.py:66
msgid ""
"Toggle to enable/disable caching when Orchestration Engine retrieves "
"extensions from other OpenStack services. Please note that the global "
"toggle for oslo.cache(enabled=True in [cache] group) must be enabled to "
"use this feature."
msgstr ""

#: heat/common/config.py:31
msgid "The flavor to use."
msgstr ""

#: heat/common/config.py:33
msgid "The API paste config file to use."
msgstr ""

#: heat/common/config.py:39
msgid "Seconds between running periodic tasks."
msgstr ""

#: heat/common/config.py:42
msgid "URL of the Heat metadata server."
msgstr ""

#: heat/common/config.py:44
msgid "URL of the Heat waitcondition server."
msgstr ""

#: heat/common/config.py:47
msgid "URL of the Heat CloudWatch server."
msgstr ""

#: heat/common/config.py:50
msgid "Instance connection to CFN/CW API via https."
msgstr ""

#: heat/common/config.py:53
msgid "Instance connection to CFN/CW API validate certs if SSL is used."
msgstr ""

#: heat/common/config.py:56
msgid "Default region name used to get services endpoints."
msgstr ""

#: heat/common/config.py:59
msgid "Keystone role for heat template-defined users."
msgstr ""

#: heat/common/config.py:63
msgid ""
"Keystone domain ID which contains heat template-defined users. If this "
"option is set, stack_user_domain_name option will be ignored."
msgstr ""

#: heat/common/config.py:67
msgid ""
"Keystone domain name which contains heat template-defined users. If "
"`stack_user_domain_id` option is set, this option is ignored."
msgstr ""

#: heat/common/config.py:71
msgid ""
"Keystone username, a user with roles sufficient to manage users and "
"projects in the stack_user_domain."
msgstr ""

#: heat/common/config.py:75
msgid "Keystone password for stack_domain_admin user."
msgstr ""

#: heat/common/config.py:78
msgid "Maximum raw byte size of any template."
msgstr ""

#: heat/common/config.py:81
msgid "Maximum depth allowed when using nested stacks."
msgstr ""

#: heat/common/config.py:83
msgid "Number of heat-engine processes to fork and run."
msgstr ""

#: heat/common/config.py:89
msgid "List of directories to search for plug-ins."
msgstr ""

#: heat/common/config.py:92
msgid "The directory to search for environment files."
msgstr ""

#: heat/common/config.py:96
msgid "Select deferred auth method, stored password or trusts."
msgstr ""

#: heat/common/config.py:101
msgid ""
"Allow reauthentication on token expiry, such that long-running tasks may "
"complete. Note this defeats the expiry of any provided user tokens."
msgstr ""

#: heat/common/config.py:106
msgid "Gap, in seconds, to determine whether the given token is about to expire."
msgstr ""

#: heat/common/config.py:110
msgid ""
"Subset of trustor roles to be delegated to heat. If left unset, all roles"
" of a user will be delegated to heat when creating a stack."
msgstr ""

#: heat/common/config.py:115
msgid "Maximum resources allowed per top-level stack. -1 stands for unlimited."
msgstr ""

#: heat/common/config.py:119
msgid "Maximum number of stacks any one tenant may have active at one time."
msgstr ""

#: heat/common/config.py:123
msgid ""
"Number of times to retry to bring a resource to a non-error state. Set to"
" 0 to disable retries."
msgstr ""

#: heat/common/config.py:128
msgid ""
"Controls how many events will be pruned whenever a stack's events exceed "
"max_events_per_stack. Set this lower to keep more events at the expense "
"of more frequent purges."
msgstr ""

#: heat/common/config.py:134
msgid ""
"Maximum events that will be available per stack. Older events will be "
"deleted when this is reached. Set to 0 for unlimited events per stack."
msgstr ""

#: heat/common/config.py:139
msgid "Timeout in seconds for stack action (ie. create or update)."
msgstr ""

#: heat/common/config.py:143
msgid "Error wait time in seconds for stack action (ie. create or update)."
msgstr ""

#: heat/common/config.py:147
msgid "RPC timeout for the engine liveness check that is used for stack locking."
msgstr ""

#: heat/common/config.py:151
msgid "Enable the legacy OS::Heat::CWLiteAlarm resource."
msgstr ""

#: heat/common/config.py:154
msgid "Enable the preview Stack Abandon feature."
msgstr ""

#: heat/common/config.py:157
msgid "Enable the preview Stack Adopt feature."
msgstr ""

#: heat/common/config.py:160
msgid ""
"Enables engine with convergence architecture. All stacks with this option"
" will be created using convergence engine."
msgstr ""

#: heat/common/config.py:165
msgid ""
"On update, enables heat to collect existing resource properties from "
"reality and converge to updated template."
msgstr ""

#: heat/common/config.py:174
msgid ""
"Template default for how the server should receive the metadata required "
"for software configuration. POLL_SERVER_CFN will allow calls to the cfn "
"API action DescribeStackResource authenticated with the provided keypair "
"(requires enabled heat-api-cfn). POLL_SERVER_HEAT will allow calls to the"
" Heat API resource-show using the provided keystone credentials (requires"
" keystone v3 API, and configured stack_user_* config options). "
"POLL_TEMP_URL will create and populate a Swift TempURL with metadata for "
"polling (requires object-store endpoint which supports "
"TempURL).ZAQAR_MESSAGE will create a dedicated zaqar queue and post the "
"metadata for polling."
msgstr ""

#: heat/common/config.py:194
msgid ""
"Template default for how the server should signal to heat with the "
"deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN "
"keypair signed URL (requires enabled heat-api-cfn). TEMP_URL_SIGNAL will "
"create a Swift TempURL to be signaled via HTTP PUT (requires object-store"
" endpoint which supports TempURL). HEAT_SIGNAL will allow calls to the "
"Heat API resource-signal using the provided keystone credentials. "
"ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the"
" provided keystone credentials."
msgstr ""

#: heat/common/config.py:208
msgid ""
"Stacks containing these tag names will be hidden. Multiple tags should be"
" given in a comma-delimited list (eg. hidden_stack_tags=hide_me,me_too)."
msgstr ""

#: heat/common/config.py:212
msgid "Deprecated."
msgstr ""

#: heat/common/config.py:215
msgid ""
"When this feature is enabled, scheduler hints identifying the heat stack "
"context of a server or volume resource are passed to the configured "
"schedulers in nova and cinder, for creates done using heat resource types"
" OS::Cinder::Volume, OS::Nova::Server, and AWS::EC2::Instance. "
"heat_root_stack_id will be set to the id of the root stack of the "
"resource, heat_stack_id will be set to the id of the resource's parent "
"stack, heat_stack_name will be set to the name of the resource's parent "
"stack, heat_path_in_stack will be set to a list of tuples, "
"(stackresourcename, stackname) with list[0] being (None, rootstackname), "
"heat_resource_name will be set to the resource's name, and "
"heat_resource_uuid will be set to the resource's orchestration id."
msgstr ""

#: heat/common/config.py:233
msgid ""
"Encrypt template parameters that were marked as hidden and also all the "
"resource properties before storing them in database."
msgstr ""

#: heat/common/config.py:240
msgid ""
"Name of the engine node. This can be an opaque identifier. It is not "
"necessarily a hostname, FQDN, or IP address."
msgstr ""

#: heat/common/config.py:248
msgid "If False fully disable profiling feature."
msgstr ""

#: heat/common/config.py:250
msgid "If False do not trace SQL requests."
msgstr ""

#: heat/common/config.py:252
msgid "Secret key to use to sign tracing messages."
msgstr ""

#: heat/common/config.py:270 heat/common/config.py:290
msgid ""
"Type of endpoint in Identity service catalog to use for communication "
"with the OpenStack service."
msgstr ""

#: heat/common/config.py:307
#, python-format
msgid "Optional heat url in format like http://0.0.0.0:8004/v1/%(tenant_id)s."
msgstr ""

#: heat/common/config.py:313
msgid "Unversioned keystone url in format like http://0.0.0.0:5000."
msgstr ""

#: heat/common/config.py:319
msgid "Allow client's debug log output."
msgstr ""

#: heat/common/config.py:325
msgid ""
"Heat build revision. If you would prefer to manage your build revision "
"separately, you can move this section to a different file and add it as "
"another config option."
msgstr ""

#: heat/common/config.py:342
msgid ""
"heat.conf misconfigured, cannot specify \"stack_user_domain_id\" or "
"\"stack_user_domain_name\" without \"stack_domain_admin\" and "
"\"stack_domain_admin_password\""
msgstr ""

#: heat/common/config.py:352
msgid "heat.conf misconfigured, auth_encryption_key must be 32 characters"
msgstr ""

#: heat/common/config.py:429
#, python-format
msgid "Unable to locate config file [%s]"
msgstr ""

#: heat/common/config.py:442
#, python-format
msgid ""
"Unable to load %(app_name)s from configuration file %(conf_file)s.\n"
"Got: %(e)r"
msgstr ""

#: heat/common/crypt.py:29
msgid ""
"Key used to encrypt authentication info in the database. Length of this "
"key must be 32 characters."
msgstr ""

#: heat/common/custom_backend_auth.py:56
msgid "Backend authentication failed"
msgstr ""

#: heat/common/environment_format.py:49
msgid "The environment is not a valid YAML mapping data type."
msgstr ""

#: heat/common/environment_format.py:53
#, python-format
msgid "environment has wrong section \"%s\""
msgstr ""

#: heat/common/exception.py:42
msgid "An unknown exception occurred."
msgstr ""

#: heat/common/exception.py:73
#, python-format
msgid "Missing required credential: %(required)s"
msgstr ""

#: heat/common/exception.py:77
msgid "Authorization failed."
msgstr ""

#: heat/common/exception.py:81
msgid "You are not authenticated."
msgstr ""

#: heat/common/exception.py:85
#, python-format
msgid "You are not authorized to use %(action)s."
msgstr ""

#: heat/common/exception.py:93
msgid "You are not authorized to complete this action."
msgstr ""

#: heat/common/exception.py:97
#, python-format
msgid "Data supplied was not valid: %(reason)s"
msgstr ""

#: heat/common/exception.py:101
#, python-format
msgid "The Parameter (%(key)s) was not provided."
msgstr ""

#: heat/common/exception.py:105
#, python-format
msgid "The Parameter (%(key)s) was not defined in template."
msgstr ""

#: heat/common/exception.py:109
#, python-format
msgid "The template version is invalid: %(explanation)s"
msgstr ""

#: heat/common/exception.py:113
#, python-format
msgid "The template section is invalid: %(section)s"
msgstr ""

#: heat/common/exception.py:117
#, python-format
msgid "The Parameter (%(key)s) has no attributes."
msgstr ""

#: heat/common/exception.py:121
#, python-format
msgid "The Referenced Attribute (%(resource)s %(key)s) is incorrect."
msgstr ""

#: heat/common/exception.py:126
#, python-format
msgid "The specified reference \"%(resource)s\" (in %(key)s) is incorrect."
msgstr ""

#: heat/common/exception.py:131
#, python-format
msgid "The %(entity)s (%(name)s) could not be found."
msgstr ""

#: heat/common/exception.py:135
#, python-format
msgid "Multiple physical resources were found with name (%(name)s)."
msgstr ""

#: heat/common/exception.py:140
#, python-format
msgid "Searching Tenant %(target)s from Tenant %(actual)s forbidden."
msgstr ""

#: heat/common/exception.py:145
#, python-format
msgid "The Stack (%(stack_name)s) already exists."
msgstr ""

#: heat/common/exception.py:149
#, python-format
msgid "%(error)s%(path)s%(message)s"
msgstr ""

#: heat/common/exception.py:191 heat/common/exception.py:210
#, python-format
msgid "%(message)s"
msgstr ""

#: heat/common/exception.py:195
#, python-format
msgid ""
"The Resource (%(resource_name)s) could not be found in Stack "
"%(stack_name)s."
msgstr ""

#: heat/common/exception.py:200
#, python-format
msgid "The Snapshot (%(snapshot)s) for Stack (%(stack)s) could not be found."
msgstr ""

#: heat/common/exception.py:205
#, python-format
msgid ""
"There was an error loading the definition of the global resource type "
"%(type_name)s."
msgstr ""

#: heat/common/exception.py:214
#, python-format
msgid "The Resource (%(resource_name)s) is not available."
msgstr ""

#: heat/common/exception.py:219
#, python-format
msgid "The Watch Rule (%(watch_name)s) could not be found."
msgstr ""

#: heat/common/exception.py:282
#, python-format
msgid "%(feature)s is not supported."
msgstr ""

#: heat/common/exception.py:286
#, python-format
msgid "%(action)s is not supported for resource."
msgstr ""

#: heat/common/exception.py:290
#, python-format
msgid "Cannot define the following properties at the same time: %(props)s."
msgstr ""

#: heat/common/exception.py:300
#, python-format
msgid "%(prop1)s cannot be specified without %(prop2)s."
msgstr ""

#: heat/common/exception.py:304
#, python-format
msgid ""
"%(prop1)s property should only be specified for %(prop2)s with value "
"%(value)s."
msgstr ""

#: heat/common/exception.py:309
#, python-format
msgid "At least one of the following properties must be specified: %(props)s"
msgstr ""

#: heat/common/exception.py:321
#, python-format
msgid "The Resource %s requires replacement."
msgstr ""

#: heat/common/exception.py:326
#, python-format
msgid ""
"%(result)s - Unknown status %(resource_status)s due to "
"\"%(status_reason)s\""
msgstr ""

#: heat/common/exception.py:329
msgid "Resource failed"
msgstr ""

#: heat/common/exception.py:330 heat/common/exception.py:339
#: heat/engine/clients/os/nova.py:219 heat/engine/clients/os/nova.py:220
#: heat/engine/resources/openstack/trove/cluster.py:190
#: heat/engine/resources/openstack/trove/os_database.py:388
msgid "Unknown"
msgstr ""

#: heat/common/exception.py:336
#, python-format
msgid "Went to status %(resource_status)s due to \"%(status_reason)s\""
msgstr ""

#: heat/common/exception.py:346
#, python-format
msgid "The resource %s is already being updated."
msgstr ""

#: heat/common/exception.py:362
msgid ""
"Egress rules are only allowed when Neutron is used and the 'VpcId' "
"property is set."
msgstr ""

#: heat/common/exception.py:374
msgid "Not found"
msgstr ""

#: heat/common/exception.py:380
#, python-format
msgid "Invalid content type %(content_type)s"
msgstr ""

#: heat/common/exception.py:384
#, python-format
msgid "Request limit exceeded: %(message)s"
msgstr ""

#: heat/common/exception.py:388
msgid "Maximum resources per stack exceeded."
msgstr ""

#: heat/common/exception.py:392
#, python-format
msgid "Stack %(stack_name)s already has an action (%(action)s) in progress."
msgstr ""

#: heat/common/exception.py:397
#, python-format
msgid "Failed to stop stack (%(stack_name)s) on other engine (%(engine_id)s)"
msgstr ""

#: heat/common/exception.py:402
#, python-format
msgid ""
"Failed to send message to stack (%(stack_name)s) on other engine "
"(%(engine_id)s)"
msgstr ""

#: heat/common/exception.py:407
#, python-format
msgid "Unsupported object type %(objtype)s"
msgstr ""

#: heat/common/exception.py:411
#, python-format
msgid "Cannot call %(method)s on orphaned %(objtype)s object"
msgstr ""

#: heat/common/exception.py:415
#, python-format
msgid "Version %(objver)s of %(objname)s is not supported"
msgstr ""

#: heat/common/exception.py:419
#, python-format
msgid "Object action %(action)s failed because: %(reason)s"
msgstr ""

#: heat/common/exception.py:423
#, python-format
msgid "Cannot modify readonly field %(field)s"
msgstr ""

#: heat/common/exception.py:427
#, python-format
msgid "Concurrent transaction for deployments of server %(server)s"
msgstr ""

#: heat/common/exception.py:431
#, python-format
msgid "Field %(field)s of %(objname)s is not an instance of Field"
msgstr ""

#: heat/common/exception.py:435
#, python-format
msgid ""
"Keystone has more than one service with same name %(service)s. Please use"
" service id instead of name"
msgstr ""

#: heat/common/exception.py:440
msgid "System SIGHUP signal received."
msgstr ""

#: heat/common/exception.py:444
#, python-format
msgid ""
"Service %(service_name)s does not have required endpoint in service "
"catalog for the resource type %(resource_type)s"
msgstr ""

#: heat/common/heat_keystoneclient.py:232
#, python-format
msgid "roles %s"
msgstr ""

#: heat/common/heat_keystoneclient.py:285
#: heat/common/heat_keystoneclient.py:347
#, python-format
msgid "Can't find role %s"
msgstr ""

#: heat/common/heat_keystoneclient.py:295
msgid ""
"Cannot get stack domain user token, no stack domain id configured, please"
" fix your heat.conf"
msgstr ""

#: heat/common/heat_keystoneclient.py:370
#, python-format
msgid "User %s in invalid domain"
msgstr ""

#: heat/common/heat_keystoneclient.py:372
#, python-format
msgid "User %s in invalid project"
msgstr ""

#: heat/common/identifier.py:43
msgid "Stack name may not contain \"/\""
msgstr ""

#: heat/common/identifier.py:57
#, python-format
msgid "\"%s\" is not a valid ARN"
msgstr ""

#: heat/common/identifier.py:63
#, python-format
msgid "\"%s\" is not a valid Heat ARN"
msgstr ""

#: heat/common/identifier.py:80
#, python-format
msgid "\"%s\" is not a valid URL"
msgstr ""

#: heat/common/identifier.py:86
#, python-format
msgid "\"%s\" is not a valid ARN URL"
msgstr ""

#: heat/common/identifier.py:139 heat/common/identifier.py:146
#, python-format
msgid "Unknown attribute \"%s\""
msgstr ""

#: heat/common/identifier.py:178 heat/engine/resource.py:170
msgid "Resource name may not contain \"/\""
msgstr ""

#: heat/common/param_utils.py:25
#, python-format
msgid ""
"Unrecognized value \"%(value)s\" for \"%(name)s\", acceptable values are:"
" true, false."
msgstr ""

#: heat/common/param_utils.py:36
#, python-format
msgid "Only integer is acceptable by '%(name)s'."
msgstr ""

#: heat/common/param_utils.py:42
#, python-format
msgid "Only non-zero integer is acceptable by '%(name)s'."
msgstr ""

#: heat/common/param_utils.py:47
#, python-format
msgid "Value '%(value)s' is invalid for '%(name)s' which only accepts integer."
msgstr ""

#: heat/common/param_utils.py:52
#, python-format
msgid ""
"Value '%(value)s' is invalid for '%(name)s' which only accepts non-"
"negative integer."
msgstr ""

#: heat/common/param_utils.py:63 heat/engine/api.py:77
#, python-format
msgid "Invalid tag, \"%s\" is longer than 80 characters"
msgstr ""

#: heat/common/param_utils.py:71
#, python-format
msgid "Invalid template type \"%(value)s\", valid types are: cfn, hot."
msgstr ""

#: heat/common/short_id.py:49
#, python-format
msgid "Invalid UUID version (%d)"
msgstr ""

#: heat/common/template_format.py:65
#, python-format
msgid "Error parsing template: %s"
msgstr ""

#: heat/common/template_format.py:72
msgid "The template is not a JSON object or YAML mapping."
msgstr ""

#: heat/common/template_format.py:85
#, python-format
msgid "Template exceeds maximum allowed size (%s bytes)"
msgstr ""

#: heat/common/template_format.py:93
msgid "Template format version not found."
msgstr ""

#: heat/common/timeutils.py:53
msgid "Only ISO 8601 duration format of the form PT#H#M#S is supported."
msgstr ""

#: heat/common/urlfetch.py:48
#, python-format
msgid "Invalid URL scheme %s"
msgstr ""

#: heat/common/urlfetch.py:54 heat/common/urlfetch.py:78
#, python-format
msgid "Failed to retrieve template: %s"
msgstr ""

#: heat/common/wsgi.py:61 heat/common/wsgi.py:99 heat/common/wsgi.py:137
msgid ""
"Address to bind the server. Useful when selecting a particular network "
"interface."
msgstr ""

#: heat/common/wsgi.py:65 heat/common/wsgi.py:103 heat/common/wsgi.py:141
msgid "The port on which the server will listen."
msgstr ""

#: heat/common/wsgi.py:68 heat/common/wsgi.py:106 heat/common/wsgi.py:144
msgid "Number of backlog requests to configure the socket with."
msgstr ""

#: heat/common/wsgi.py:72 heat/common/wsgi.py:110 heat/common/wsgi.py:148
msgid "Location of the SSL certificate file to use for SSL mode."
msgstr ""

#: heat/common/wsgi.py:76 heat/common/wsgi.py:114 heat/common/wsgi.py:152
msgid "Location of the SSL key file to use for enabling SSL mode."
msgstr ""

#: heat/common/wsgi.py:80 heat/common/wsgi.py:118 heat/common/wsgi.py:156
msgid "Number of workers for Heat service."
msgstr ""

#: heat/common/wsgi.py:83 heat/common/wsgi.py:121
msgid ""
"Maximum line size of message headers to be accepted. max_header_line may "
"need to be increased when using large tokens (typically those generated "
"by the Keystone v3 API with big service catalogs)."
msgstr ""

#: heat/common/wsgi.py:88 heat/common/wsgi.py:126 heat/common/wsgi.py:164
msgid ""
"The value for the socket option TCP_KEEPIDLE.  This is the time in "
"seconds that the connection must be idle before TCP starts sending "
"keepalive probes."
msgstr ""

#: heat/common/wsgi.py:159
msgid ""
"Maximum line size of message headers to be accepted. max_header_line may "
"need to be increased when using large tokens (typically those generated "
"by the Keystone v3 API with big service catalogs.)"
msgstr ""

#: heat/common/wsgi.py:176
msgid "If False, closes the client socket connection explicitly."
msgstr ""

#: heat/common/wsgi.py:179
msgid ""
"Timeout for client connections' socket operations. If an incoming "
"connection is idle for this number of seconds it will be closed. A value "
"of '0' means wait forever."
msgstr ""

#: heat/common/wsgi.py:190
msgid ""
"Maximum raw byte size of JSON request body. Should be larger than "
"max_template_size."
msgstr ""

#: heat/common/wsgi.py:232
msgid ""
"When running server in SSL mode, you must specify both a cert_file and "
"key_file option value in your configuration file"
msgstr ""

#: heat/common/wsgi.py:248
#, python-format
msgid "Could not bind to %(bind_addr)safter trying for 30 seconds"
msgstr ""

#: heat/common/wsgi.py:771
#, python-format
msgid ""
"JSON body size (%(len)s bytes) exceeds maximum allowed size (%(limit)s "
"bytes)."
msgstr ""

#: heat/common/wsgi.py:843
msgid ""
"The server could not comply with the request since it is either malformed"
" or otherwise incorrect."
msgstr ""

#: heat/db/sqlalchemy/api.py:101
#, python-format
msgid "raw template with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:134
#, python-format
msgid "resource with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:166
msgid "no resources were found"
msgstr ""

#: heat/db/sqlalchemy/api.py:195
msgid "no resource data found"
msgstr ""

#: heat/db/sqlalchemy/api.py:260
msgid "No resource data found"
msgstr ""

#: heat/db/sqlalchemy/api.py:316
#, python-format
msgid "no resources for stack_id %s were found"
msgstr ""

#: heat/db/sqlalchemy/api.py:511
#, python-format
msgid "Attempt to update a stack with id: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:535
#, python-format
msgid "Attempt to delete a stack with id: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:638
msgid "Length of OS_PASSWORD after encryption exceeds Heat limit (255 chars)"
msgstr ""

#: heat/db/sqlalchemy/api.py:672
#, python-format
msgid "Attempt to delete user creds with id %(id)s that does not exist"
msgstr ""

#: heat/db/sqlalchemy/api.py:826
#, python-format
msgid "Attempt to update a watch with id: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:837
#, python-format
msgid "Attempt to delete watch_rule: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:882
#, python-format
msgid "Software config with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:921
#, python-format
msgid "Deployment with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:964
#, python-format
msgid "Snapshot with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:1045
msgid "age should be an integer"
msgstr ""

#: heat/db/sqlalchemy/api.py:1047
msgid "age should be a positive integer"
msgstr ""

#: heat/db/sqlalchemy/api.py:1051
msgid "granularity should be days, hours, minutes, or seconds"
msgstr ""

#: heat/db/sqlalchemy/api.py:1160
msgid "Cannot migrate to lower schema version."
msgstr ""

#: heat/engine/api.py:48
#, python-format
msgid "Invalid timeout value %s"
msgstr ""

#: heat/engine/api.py:70
#, python-format
msgid "Invalid tags, not a list: %s"
msgstr ""

#: heat/engine/api.py:74
#, python-format
msgid "Invalid tag, \"%s\" is not a string"
msgstr ""

#: heat/engine/api.py:82
#, python-format
msgid "Invalid tag, \"%s\" contains a comma"
msgstr ""

#: heat/engine/attributes.py:202
#, python-format
msgid "%(resource)s: Invalid attribute %(key)s"
msgstr ""

#: heat/engine/attributes.py:274
msgid "Can't traverse attribute path"
msgstr ""

#: heat/engine/attributes.py:277
msgid "Path components in attributes must be strings"
msgstr ""

#: heat/engine/constraints.py:94
#, python-format
msgid "Invalid type (%s)"
msgstr ""

#: heat/engine/constraints.py:105
#, python-format
msgid "Single schema valid only for %(ltype)s, not %(utype)s"
msgstr ""

#: heat/engine/constraints.py:115
#, python-format
msgid "Schema valid only for %(ltype)s or %(mtype)s, not %(utype)s"
msgstr ""

#: heat/engine/constraints.py:132
#, python-format
msgid "%(name)s constraint invalid for %(utype)s"
msgstr ""

#: heat/engine/constraints.py:154 heat/engine/parameters.py:92
#, python-format
msgid "Invalid default %(default)s (%(exc)s)"
msgstr ""

#: heat/engine/constraints.py:185
#, python-format
msgid "%s is not an integer."
msgstr ""

#: heat/engine/constraints.py:194
#, python-format
msgid "Value \"%(val)s\" is invalid for data type \"%(type)s\"."
msgstr ""

#: heat/engine/constraints.py:260
#, python-format
msgid "Invalid key %s"
msgstr ""

#: heat/engine/constraints.py:348
msgid "min/max must be numeric"
msgstr ""

#: heat/engine/constraints.py:352
msgid "A range constraint must have a min value and/or a max value specified."
msgstr ""

#: heat/engine/constraints.py:357
#, python-format
msgid "The value must be at least %(min)s."
msgstr ""

#: heat/engine/constraints.py:359
#, python-format
msgid "The value must be no greater than %(max)s."
msgstr ""

#: heat/engine/constraints.py:361
#, python-format
msgid "The value must be in the range %(min)s to %(max)s."
msgstr ""

#: heat/engine/constraints.py:408
msgid "A length constraint must have a min value and/or a max value specified."
msgstr ""

#: heat/engine/constraints.py:415
msgid "min/max length must be integral"
msgstr ""

#: heat/engine/constraints.py:420
#, python-format
msgid "The length must be at least %(min)s."
msgstr ""

#: heat/engine/constraints.py:422
#, python-format
msgid "The length must be no greater than %(max)s."
msgstr ""

#: heat/engine/constraints.py:424
#, python-format
msgid "The length must be in the range %(min)s to %(max)s."
msgstr ""

#: heat/engine/constraints.py:455
msgid "AllowedValues must be a list"
msgstr ""

#: heat/engine/constraints.py:460
#, python-format
msgid "Allowed values: %s"
msgstr ""

#: heat/engine/constraints.py:499
msgid "AllowedPattern must be a string"
msgstr ""

#: heat/engine/constraints.py:504
#, python-format
msgid "Value must match pattern: %s"
msgstr ""

#: heat/engine/constraints.py:544
#, python-format
msgid "Value must be of type %s"
msgstr ""

#: heat/engine/constraints.py:550
#, python-format
msgid "\"%(value)s\" does not validate %(name)s (constraint not found)"
msgstr ""

#: heat/engine/constraints.py:557
#, python-format
msgid "\"%(value)s\" does not validate %(name)s"
msgstr ""

#: heat/engine/constraints.py:582
#, python-format
msgid "Error validating value '%(value)s'"
msgstr ""

#: heat/engine/constraints.py:583
#, python-format
msgid "Error validating value '%(value)s': %(message)s"
msgstr ""

#: heat/engine/constraints.py:631
msgid "Client name and resource getter name must be specified."
msgstr ""

#: heat/engine/dependencies.py:24
#, python-format
msgid "Circular Dependency Found: %(cycle)s"
msgstr ""

#: heat/engine/environment.py:58
#, python-format
msgid ""
"Invalid hook type \"%(value)s\" for resource breakpoint, acceptable hook "
"types are: %(types)s"
msgstr ""

#: heat/engine/environment.py:306
#, python-format
msgid "%(p)s Registered: %(t)s"
msgstr ""

#: heat/engine/environment.py:461 heat/tests/test_resource.py:186
#, python-format
msgid "Resource \"%s\" has no type"
msgstr ""

#: heat/engine/environment.py:464
#, python-format
msgid "Non-empty resource type is required for resource \"%s\""
msgstr ""

#: heat/engine/environment.py:468
#, python-format
msgid "Resource \"%s\" type is not a string"
msgstr ""

#: heat/engine/environment.py:504
#, python-format
msgid "Invalid support status and should be one of %s"
msgstr ""

#: heat/engine/event.py:59
#, python-format
msgid "No event exists with id \"%s\""
msgstr ""

#: heat/engine/parameter_groups.py:46 heat/engine/parameter_groups.py:56
#: heat/engine/parameter_groups.py:63 heat/engine/parameter_groups.py:72
#: heat/engine/parameter_groups.py:83
msgid "Parameter Groups error"
msgstr ""

#: heat/engine/parameter_groups.py:48
#, python-format
msgid "The %s should be a list."
msgstr ""

#: heat/engine/parameter_groups.py:58
#, python-format
msgid "The %s must be provided for each parameter group."
msgstr ""

#: heat/engine/parameter_groups.py:65
#, python-format
msgid "The %s of parameter group should be a list."
msgstr ""

#: heat/engine/parameter_groups.py:74
#, python-format
msgid "The %s parameter must be assigned to one parameter group only."
msgstr ""

#: heat/engine/parameter_groups.py:85
#, python-format
msgid "The grouped parameter %s does not reference a valid parameter."
msgstr ""

#: heat/engine/parameters.py:81
#, python-format
msgid "Default must be a comma-delimited list string: %s"
msgstr ""

#: heat/engine/parameters.py:110
#, python-format
msgid "Invalid %s, expected a mapping"
msgstr ""

#: heat/engine/parameters.py:114
#, python-format
msgid "Invalid key '%(key)s' for %(entity)s"
msgstr ""

#: heat/engine/parameters.py:125
#, python-format
msgid "Missing parameter type for parameter: %s"
msgstr ""

#: heat/engine/parameters.py:200
#, python-format
msgid "Invalid Parameter type \"%s\""
msgstr ""

#: heat/engine/parameters.py:222
#, python-format
msgid "Parameter '%(name)s' is invalid: %(exp)s"
msgstr ""

#: heat/engine/parameters.py:378
#, python-format
msgid "Value must be a comma-delimited list string: %s"
msgstr ""

#: heat/engine/parameters.py:425
#, python-format
msgid "Value must be valid JSON: %s"
msgstr ""

#: heat/engine/parameters.py:570 heat/engine/hot/parameters.py:133
msgid "Stack ID"
msgstr ""

#: heat/engine/parameters.py:574 heat/engine/hot/parameters.py:142
msgid "Stack Name"
msgstr ""

#: heat/engine/properties.py:87
#, python-format
msgid "Unknown key(s) %s"
msgstr ""

#: heat/engine/properties.py:109
#, python-format
msgid "No %s specified"
msgstr ""

#: heat/engine/properties.py:119
#, python-format
msgid "%(schema)s supplied for %(type)s %(data)s"
msgstr ""

#: heat/engine/properties.py:241
#, python-format
msgid "Value '%s' is not an integer"
msgstr ""

#: heat/engine/properties.py:257
msgid "Value must be a string"
msgstr ""

#: heat/engine/properties.py:286
#, python-format
msgid "\"%s\" is not a map"
msgstr ""

#: heat/engine/properties.py:296
#, python-format
msgid "\"%s\" is not a list"
msgstr ""

#: heat/engine/properties.py:309
#, python-format
msgid "\"%s\" is not a valid boolean"
msgstr ""

#: heat/engine/properties.py:367
#, python-format
msgid "Unknown Property %s"
msgstr ""

#: heat/engine/properties.py:374
#, python-format
msgid "Property %(prop)s: %(ua)s and %(im)s cannot both be True"
msgstr ""

#: heat/engine/properties.py:399
#, python-format
msgid "Property %s not implemented yet"
msgstr ""

#: heat/engine/properties.py:420 heat/engine/properties.py:445
#, python-format
msgid "Invalid Property %s"
msgstr ""

#: heat/engine/properties.py:453
#, python-format
msgid "Property %s not assigned"
msgstr ""

#: heat/engine/properties.py:647
#, python-format
msgid "There is no rule %(rule)s. List of allowed rules is: %(rules)s."
msgstr ""

#: heat/engine/properties.py:652
#, python-format
msgid "Properties must be Properties type. Found %s."
msgstr ""

#: heat/engine/properties.py:655
#, python-format
msgid "source_path should be a list with path instead of %s."
msgstr ""

#: heat/engine/properties.py:658
msgid "source_path must be non-empty list with path."
msgstr ""

#: heat/engine/properties.py:661
msgid "Use value_name only for replacing list elements."
msgstr ""

#: heat/engine/properties.py:664
msgid "value must be list type when rule is Add."
msgstr ""

#: heat/engine/properties.py:693
msgid "Add rule must be used only for lists."
msgstr ""

#: heat/engine/properties.py:699 heat/engine/properties.py:711
#, python-format
msgid "Cannot use %(key)s and %(name)s at the same time."
msgstr ""

#: heat/engine/properties.py:745
msgid "Property uses removed function."
msgstr ""

#: heat/engine/resource.py:99
msgid "Detailed information about resource."
msgstr ""

#: heat/engine/resource.py:378
#, python-format
msgid "%(a)s paused until Hook %(h)s is cleared"
msgstr ""

#: heat/engine/resource.py:502
#, python-format
msgid "Update to properties %(props)s of %(name)s (%(res)s)"
msgstr ""

#: heat/engine/resource.py:735
#, python-format
msgid "State %s invalid for create"
msgstr ""

#: heat/engine/resource.py:823
msgid "Resource ID was not provided."
msgstr ""

#: heat/engine/resource.py:959
msgid "Resource update already requested"
msgstr ""

#: heat/engine/resource.py:1039
#, python-format
msgid "'%(attr)s': expected '%(expected)s', got '%(current)s'"
msgstr ""

#: heat/engine/resource.py:1061
#, python-format
msgid "State %s invalid for suspend"
msgstr ""

#: heat/engine/resource.py:1081
#, python-format
msgid "State %s invalid for resume"
msgstr ""

#: heat/engine/resource.py:1128
msgid "limit cannot be less than 4"
msgstr ""

#: heat/engine/resource.py:1170 heat/engine/cfn/template.py:159
#: heat/engine/hot/template.py:262
#, python-format
msgid "Invalid deletion policy \"%s\""
msgstr ""

#: heat/engine/resource.py:1175
#, python-format
msgid "\"%s\" deletion policy not supported"
msgstr ""

#: heat/engine/resource.py:1549 heat/engine/stack.py:779
#, python-format
msgid "Invalid action %s"
msgstr ""

#: heat/engine/resource.py:1552 heat/engine/stack.py:782
#, python-format
msgid "Invalid status %s"
msgstr ""

#: heat/engine/resource.py:1639
#, python-format
msgid "Signal resource during %s"
msgstr ""

#: heat/engine/resource.py:1646
#, python-format
msgid "Invalid hook type \"%(hook)s\" for %(resource)s"
msgstr ""

#: heat/engine/resource.py:1651
#, python-format
msgid "The \"%(hook)s\" hook is not defined on %(resource)s"
msgstr ""

#: heat/engine/scheduler.py:60
#, python-format
msgid "%s Timed out"
msgstr ""

#: heat/engine/service.py:591
#, python-format
msgid ""
"You have reached the maximum stacks per tenant, %d. Please delete some "
"stacks."
msgstr ""

#: heat/engine/service.py:809
msgid "PATCH update to non-COMPLETE stack"
msgstr ""

#: heat/engine/service.py:869
msgid "Updating a stack when it is suspended"
msgstr ""

#: heat/engine/service.py:873
msgid "Updating a stack when it is deleting"
msgstr ""

#: heat/engine/service.py:954
#, python-format
msgid "Cancelling update when stack is %s"
msgstr ""

#: heat/engine/service.py:1004
msgid "No Template provided."
msgstr ""

#: heat/engine/service.py:1112
#, python-format
msgid "Specified output key %s not found."
msgstr ""

#: heat/engine/service.py:1263
#, python-format
msgid "Template with version %s not found"
msgstr ""

#: heat/engine/service.py:1614
msgid "Deleting in-progress snapshot"
msgstr ""

#: heat/engine/service_software_config.py:79
msgid "server_id must be specified"
msgstr ""

#: heat/engine/service_software_config.py:228
msgid "deployment_id must be specified"
msgstr ""

#: heat/engine/service_software_config.py:247
#, python-format
msgid "Deployment exited with non-zero status code: %s"
msgstr ""

#: heat/engine/service_software_config.py:274
msgid "Outputs received"
msgstr ""

#: heat/engine/stack.py:89
msgid "Unexpected returning while IN_PROGRESS."
msgstr ""

#: heat/engine/stack.py:139
#, python-format
msgid ""
"Invalid stack name %s must contain only alphanumeric or \"_-.\" "
"characters, must start with alpha"
msgstr ""

#: heat/engine/stack.py:144
#, python-format
msgid "Invalid stack name %s, must be a string"
msgstr ""

#: heat/engine/stack.py:265
msgid "Attempt to use stored_context with no user_creds"
msgstr ""

#: heat/engine/stack.py:405
#, python-format
msgid "No stack exists with id \"%s\""
msgstr ""

#: heat/engine/stack.py:696
#, python-format
msgid "Duplicate names %s"
msgstr ""

#: heat/engine/stack.py:718
#, python-format
msgid "Outputs must contain Output. Found a [%s] instead"
msgstr ""

#: heat/engine/stack.py:726
msgid "Each Output must contain a Value key."
msgstr ""

#: heat/engine/support.py:43
#, python-format
msgid "previous_status must be SupportStatus instead of %s"
msgstr ""

#: heat/engine/support.py:48
#, python-format
msgid "Specified status is invalid, defaulting to %s"
msgstr ""

#: heat/engine/sync_point.py:144
#, python-format
msgid "Sync Point %s not found"
msgstr ""

#: heat/engine/template.py:42
#, python-format
msgid "Ambiguous versions (%s)"
msgstr ""

#: heat/engine/template.py:47
msgid "Template version was not provided"
msgstr ""

#: heat/engine/template.py:64
#, python-format
msgid "Could not load %(name)s: %(error)s"
msgstr ""

#: heat/engine/template.py:81
#, python-format
msgid "\"%(version)s\". \"%(version_type)s\" should be one of: %(available)s"
msgstr ""

#: heat/engine/template.py:84
#, python-format
msgid "\"%(version)s\". \"%(version_type)s\" should be: %(available)s"
msgstr ""

#: heat/engine/template.py:179
#, python-format
msgid "\"%s\" is not a valid keyword inside a resource definition"
msgstr ""

#: heat/engine/template.py:186
#, python-format
msgid "Resource %(name)s %(key)s type must be %(typename)s"
msgstr ""

#: heat/engine/template.py:250
msgid "Each Resource must contain a Type key."
msgstr ""

#: heat/engine/template.py:254
#, python-format
msgid "Resources must contain Resource. Found a [%s] instead"
msgstr ""

#: heat/engine/watchrule.py:335
#, python-format
msgid "Invalid watch state %s"
msgstr ""

#: heat/engine/watchrule.py:348
#, python-format
msgid "Unknown watch state %s"
msgstr ""

#: heat/engine/cfn/functions.py:152
#, python-format
msgid "Arguments to \"%s\" must be of the form [resource_name, attribute]"
msgstr ""

#: heat/engine/cfn/functions.py:234
#, python-format
msgid "Arguments to \"%s\" must be of the form [index, collection]"
msgstr ""

#: heat/engine/cfn/functions.py:255
#, python-format
msgid "\"%(fn_name)s\": %(err)s"
msgstr ""

#: heat/engine/cfn/functions.py:259
#, python-format
msgid "Index to \"%s\" must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:271
#, python-format
msgid "Index to \"%s\" must be an integer"
msgstr ""

#: heat/engine/cfn/functions.py:282
#, python-format
msgid "Arguments to %s not fully resolved"
msgstr ""

#: heat/engine/cfn/functions.py:306 heat/engine/cfn/functions.py:312
#: heat/engine/cfn/functions.py:360 heat/engine/cfn/functions.py:366
#: heat/engine/cfn/functions.py:418 heat/engine/cfn/functions.py:424
#: heat/engine/hot/functions.py:380 heat/engine/hot/functions.py:389
#: heat/engine/hot/functions.py:453 heat/engine/hot/functions.py:647
#: heat/engine/hot/functions.py:657
#, python-format
msgid "Incorrect arguments to \"%(fn_name)s\" should be: %(example)s"
msgstr ""

#: heat/engine/cfn/functions.py:321 heat/engine/hot/functions.py:400
#, python-format
msgid "\"%s\" must operate on a list"
msgstr ""

#: heat/engine/cfn/functions.py:325 heat/engine/hot/functions.py:407
#, python-format
msgid "\"%s\" delimiter must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:333
#, python-format
msgid "Items to join must be strings not %s"
msgstr ""

#: heat/engine/cfn/functions.py:373
#, python-format
msgid "Delimiter for %s must be string"
msgstr ""

#: heat/engine/cfn/functions.py:376
#, python-format
msgid "String to split must be string; got %s"
msgstr ""

#: heat/engine/cfn/functions.py:406
#, python-format
msgid "\"%s\" parameters must be a mapping"
msgstr ""

#: heat/engine/cfn/functions.py:434 heat/engine/hot/functions.py:278
#, python-format
msgid "\"%s\" template must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:437 heat/engine/hot/functions.py:281
#, python-format
msgid "\"%s\" params must be a map"
msgstr ""

#: heat/engine/cfn/functions.py:443 heat/engine/hot/functions.py:287
#, python-format
msgid "\"%s\" param placeholders must be strings"
msgstr ""

#: heat/engine/cfn/functions.py:452
#, python-format
msgid "\"%s\" params must be strings or numbers"
msgstr ""

#: heat/engine/cfn/functions.py:475
#, python-format
msgid "\"%s\" argument must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:508
#, python-format
msgid "Wrong Arguments try: \"%s\""
msgstr ""

#: heat/engine/cfn/functions.py:511
#, python-format
msgid "%s Key Name must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:514
#, python-format
msgid "%s Value Name must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:520
msgid "Member list must be a list"
msgstr ""

#: heat/engine/cfn/functions.py:524
msgid "Member list items must be strings"
msgstr ""

#: heat/engine/cfn/functions.py:560
#, python-format
msgid "Incorrect arguments to \"%(fn_name)s\" should be one of: %(allowed)s"
msgstr ""

#: heat/engine/cfn/template.py:68 heat/engine/hot/template.py:96
#: heat/engine/hot/template.py:99
#, python-format
msgid "\"%s\" is not a valid template section"
msgstr ""

#: heat/engine/cfn/template.py:71 heat/engine/hot/template.py:102
#, python-format
msgid "Section %s can not be accessed directly."
msgstr ""

#: heat/engine/cfn/template.py:115 heat/engine/hot/template.py:220
#, python-format
msgid "Resource %(name)s is missing \"%(type_key)s\""
msgstr ""

#: heat/engine/clients/__init__.py:106
#, python-format
msgid "Invalid cloud_backend setting in heat.conf detected - %s"
msgstr ""

#: heat/engine/clients/client_plugin.py:196
msgid "Unknown Keystone version"
msgstr ""

#: heat/engine/clients/os/cinder.py:65
msgid "No volume service available."
msgstr ""

#: heat/engine/clients/os/cinder.py:159
msgid "Volume detachment failed"
msgstr ""

#: heat/engine/clients/os/cinder.py:177
msgid "Volume attachment failed"
msgstr ""

#: heat/engine/clients/os/glance.py:91
#, python-format
msgid "Error retrieving image list from glance: %s"
msgstr ""

#: heat/engine/clients/os/nova.py:218
#, python-format
msgid "Message: %(message)s, Code: %(code)s"
msgstr ""

#: heat/engine/clients/os/nova.py:225
#, python-format
msgid "%s is not active"
msgstr ""

#: heat/engine/clients/os/nova.py:407
#, python-format
msgid "Server %(name)s delete failed: (%(code)s) %(message)s"
msgstr ""

#: heat/engine/clients/os/nova.py:443
#, python-format
msgid "Resizing to '%(flavor)s' failed, status '%(status)s'"
msgstr ""

#: heat/engine/clients/os/nova.py:455
#, python-format
msgid "Could not confirm resize of server %s"
msgstr ""

#: heat/engine/clients/os/nova.py:469
#, python-format
msgid "Confirm resize for server %s failed"
msgstr ""

#: heat/engine/clients/os/nova.py:494
#, python-format
msgid "Rebuilding server failed, status '%s'"
msgstr ""

#: heat/engine/clients/os/nova.py:501
msgid "nova server metadata needs to be a Map."
msgstr ""

#: heat/engine/clients/os/nova.py:606
#, python-format
msgid "Failed to attach volume %(vol)s to server %(srv)s - %(err)s"
msgstr ""

#: heat/engine/clients/os/nova.py:623
#, python-format
msgid "Could not detach attachment %(att)s from server %(srv)s."
msgstr ""

#: heat/engine/clients/os/sahara.py:56
#, python-format
msgid ""
"Requested plugin '%(plugin)s' doesn't support version '%(version)s'. "
"Allowed versions are %(allowed)s"
msgstr ""

#: heat/engine/clients/os/sahara.py:111
#, python-format
msgid "Error retrieving image list from sahara: %s"
msgstr ""

#: heat/engine/clients/os/trove.py:63
#, python-format
msgid ""
"Datastore version %(dsversion)s for datastore type %(dstype)s is not "
"valid. Allowed versions are %(allowed)s."
msgstr ""

#: heat/engine/clients/os/trove.py:72
#, python-format
msgid ""
"Multiple active datastore versions exist for datastore type %(dstype)s. "
"Explicit datastore version must be provided. Allowed versions are "
"%(allowed)s."
msgstr ""

#: heat/engine/clients/os/trove.py:81
#, python-format
msgid "Not allowed - %(dsver)s without %(dstype)s."
msgstr ""

#: heat/engine/clients/os/neutron/neutron_constraints.py:106
#, python-format
msgid ""
"Unable to find neutron provider '%(provider)s', available providers are "
"%(providers)s."
msgstr ""

#: heat/engine/constraint/common_constraints.py:78
#, python-format
msgid "Invalid CRON expression: %s"
msgstr ""

#: heat/engine/constraint/common_constraints.py:92
#, python-format
msgid "Invalid timezone: %s"
msgstr ""

#: heat/engine/hot/functions.py:52
#, python-format
msgid "Function \"%s\" must have arguments"
msgstr ""

#: heat/engine/hot/functions.py:62
#, python-format
msgid "Argument to \"%s\" must be string or list"
msgstr ""

#: heat/engine/hot/functions.py:66
#, python-format
msgid "Parameter name in \"%s\" must be string"
msgstr ""

#: heat/engine/hot/functions.py:77
#, python-format
msgid "\"%s\" can't traverse path"
msgstr ""

#: heat/engine/hot/functions.py:80
#, python-format
msgid "Path components in \"%s\" must be strings"
msgstr ""

#: heat/engine/hot/functions.py:107 heat/engine/hot/functions.py:194
#, python-format
msgid "Argument to \"%s\" must be a list"
msgstr ""

#: heat/engine/hot/functions.py:111
#, python-format
msgid ""
"Arguments to \"%s\" must be of the form [resource_name, attribute, "
"(path), ...]"
msgstr ""

#: heat/engine/hot/functions.py:184
#, python-format
msgid ""
"Arguments to \"%s\" can be of the next forms: [resource_name] or "
"[resource_name, attribute, (path), ...]"
msgstr ""

#: heat/engine/hot/functions.py:247 heat/engine/hot/functions.py:529
#, python-format
msgid "Arguments to \"%s\" must be a map"
msgstr ""

#: heat/engine/hot/functions.py:259
#, python-format
msgid "\"str_replace\" syntax should be %s"
msgstr ""

#: heat/engine/hot/functions.py:301
#, python-format
msgid ""
"\"%(name)s\" params must be strings, numbers, list or map. Failed to json"
" serialize %(value)s"
msgstr ""

#: heat/engine/hot/functions.py:307
#, python-format
msgid "\"%s\" params must be strings, numbers, list or map."
msgstr ""

#: heat/engine/hot/functions.py:334
#, python-format
msgid "Argument to \"%s\" must be a string"
msgstr ""

#: heat/engine/hot/functions.py:341
#, python-format
msgid ""
"No content found in the \"files\" section for %(fn_name)s path: "
"%(file_key)s"
msgstr ""

#: heat/engine/hot/functions.py:411
#, python-format
msgid "Items to join must be string, map or list not %s"
msgstr ""

#: heat/engine/hot/functions.py:421
#, python-format
msgid "Items to join must be string, map or list. %s failed json serialization"
msgstr ""

#: heat/engine/hot/functions.py:445
#, python-format
msgid "\"%s\" : [ { \"key1\": \"val1\" }, { \"key2\": \"val2\" } ]"
msgstr ""

#: heat/engine/hot/functions.py:462
msgid "Incorrect arguments: Items to merge must be maps."
msgstr ""

#: heat/engine/hot/functions.py:499
#, python-format
msgid "The function %s is not supported in this version of HOT."
msgstr ""

#: heat/engine/hot/functions.py:540
#, python-format
msgid "\"repeat\" syntax should be %s"
msgstr ""

#: heat/engine/hot/functions.py:544
#, python-format
msgid "The \"for_each\" argument to \"%s\" must contain a map"
msgstr ""

#: heat/engine/hot/functions.py:548
#, python-format
msgid "The values of the \"for_each\" argument to \"%s\" must be lists"
msgstr ""

#: heat/engine/hot/functions.py:590
#, python-format
msgid "Argument to function \"%s\" must be a list of strings"
msgstr ""

#: heat/engine/hot/functions.py:594
#, python-format
msgid "Function \"%s\" usage: [\"<algorithm>\", \"<value>\"]"
msgstr ""

#: heat/engine/hot/functions.py:603
#, python-format
msgid "Algorithm must be one of %s"
msgstr ""

#: heat/engine/hot/functions.py:666
#, python-format
msgid "Incorrect index to \"%(fn_name)s\" should be: %(example)s"
msgstr ""

#: heat/engine/hot/functions.py:672
#, python-format
msgid "Incorrect index to \"%(fn_name)s\" should be between 0 and %(max_index)s"
msgstr ""

#: heat/engine/hot/parameters.py:69
#, python-format
msgid "Invalid parameter constraints for parameter %s, expected a list"
msgstr ""

#: heat/engine/hot/parameters.py:99
msgid "No constraint expressed"
msgstr ""

#: heat/engine/hot/parameters.py:137
msgid "Project ID"
msgstr ""

#: heat/engine/hot/template.py:141
#, python-format
msgid "\"%%s\" is not a valid keyword inside a %s definition"
msgstr ""

#: heat/engine/hot/template.py:148
#, python-format
msgid "Each %(object_name)s must contain a %(sub_section)s key."
msgstr ""

#: heat/engine/hot/template.py:158
#, python-format
msgid ""
"\"%(section)s\" must contain a map of %(obj_name)s maps. Found a "
"[%(_type)s] instead"
msgstr ""

#: heat/engine/resources/signal_responder.py:371
#: heat/engine/resources/openstack/heat/swiftsignal.py:270
#, python-format
msgid "Failed to parse JSON data: %s"
msgstr ""

#: heat/engine/resources/stack_resource.py:74
msgid "Failed to validate"
msgstr ""

#: heat/engine/resources/stack_resource.py:231
#, python-format
msgid "Recursion depth exceeds %d."
msgstr ""

#: heat/engine/resources/stack_resource.py:379
msgid "Stack unknown status"
msgstr ""

#: heat/engine/resources/stack_resource.py:465
#, python-format
msgid "Cannot suspend %s, stack not created"
msgstr ""

#: heat/engine/resources/stack_resource.py:479
#, python-format
msgid "Cannot resume %s, stack not created"
msgstr ""

#: heat/engine/resources/stack_resource.py:493
#, python-format
msgid "Cannot check %s, stack not created"
msgstr ""

#: heat/engine/resources/stack_user.py:59
msgid "Can't get user token, user not yet created"
msgstr ""

#: heat/engine/resources/stack_user.py:65
msgid "Can't get user token without password"
msgstr ""

#: heat/engine/resources/stack_user.py:135
#, python-format
msgid "Error creating ec2 keypair for user %s"
msgstr ""

#: heat/engine/resources/template_resource.py:83
msgid "Only Templates with an extension of .yaml or .template are supported"
msgstr ""

#: heat/engine/resources/template_resource.py:103
#, python-format
msgid "Could not fetch remote template \"%(name)s\": %(exc)s"
msgstr ""

#: heat/engine/resources/template_resource.py:223
#, python-format
msgid "Unknown error retrieving %s"
msgstr ""

#: heat/engine/resources/template_resource.py:232
#, python-format
msgid "Required property %(n)s for facade %(type)s missing in provider"
msgstr ""

#: heat/engine/resources/template_resource.py:240
#, python-format
msgid ""
"Property %(n)s type mismatch between facade %(type)s (%(fs_type)s) and "
"provider (%(ps_type)s)"
msgstr ""

#: heat/engine/resources/template_resource.py:249
#, python-format
msgid "Provider requires property %(n)s unknown in facade %(type)s"
msgstr ""

#: heat/engine/resources/template_resource.py:258
#, python-format
msgid "Attribute %(attr)s for facade %(type)s missing in provider"
msgstr ""

#: heat/engine/resources/template_resource.py:271
#, python-format
msgid "Failed to retrieve template data: %s"
msgstr ""

#: heat/engine/resources/volume_base.py:57
msgid "Volume create failed"
msgstr ""

#: heat/engine/resources/volume_base.py:111
msgid "Volume backup failed"
msgstr ""

#: heat/engine/resources/volume_base.py:123
msgid "Volume in use"
msgstr ""

#: heat/engine/resources/wait_condition.py:74
msgid "Metadata format invalid"
msgstr ""

#: heat/engine/resources/wait_condition.py:102
#: heat/engine/resources/openstack/heat/swiftsignal.py:46
#, python-format
msgid "%(len)d of %(count)d received - %(reasons)s"
msgstr ""

#: heat/engine/resources/wait_condition.py:104
#: heat/engine/resources/openstack/heat/swiftsignal.py:48
#, python-format
msgid "%(len)d of %(count)d received"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:81
#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:123
#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:128
#: heat/engine/resources/aws/autoscaling/launch_config.py:98
#: heat/engine/resources/aws/autoscaling/launch_config.py:103
#: heat/engine/resources/aws/ec2/instance.py:124
#: heat/engine/resources/aws/ec2/instance.py:129
#: heat/engine/resources/aws/ec2/instance.py:134
#: heat/engine/resources/aws/ec2/instance.py:139
#: heat/engine/resources/aws/ec2/instance.py:144
#: heat/engine/resources/aws/ec2/instance.py:149
#: heat/engine/resources/aws/ec2/instance.py:167
#: heat/engine/resources/aws/ec2/instance.py:212
#: heat/engine/resources/aws/iam/user.py:53
#: heat/engine/resources/aws/iam/user.py:57
#: heat/engine/resources/aws/iam/user.py:149
#: heat/engine/resources/aws/iam/user.py:159
#: heat/engine/resources/aws/lb/loadbalancer.py:389
#: heat/engine/resources/aws/lb/loadbalancer.py:394
#: heat/engine/resources/aws/lb/loadbalancer.py:403
#: heat/engine/resources/aws/lb/loadbalancer.py:408
#: heat/engine/resources/aws/lb/loadbalancer.py:418
#: heat/engine/resources/openstack/heat/instance_group.py:73
msgid "Not Implemented."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:86
#: heat/engine/resources/openstack/heat/instance_group.py:78
msgid "The reference to a LaunchConfiguration resource."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:91
msgid ""
"The ID of an existing instance to use to create the Auto Scaling group. "
"If specify this property, will create the group use an existing instance "
"instead of a launch configuration."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:101
msgid "Maximum number of instances in the group."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:107
msgid "Minimum number of instances in the group."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:113
#: heat/engine/resources/aws/autoscaling/scaling_policy.py:66
#: heat/engine/resources/openstack/heat/autoscaling_group.py:81
#: heat/engine/resources/openstack/heat/scaling_policy.py:81
msgid "Cooldown period, in seconds."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:118
msgid "Desired initial number of instances."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:136
#: heat/engine/resources/openstack/heat/instance_group.py:90
msgid "List of LoadBalancer resources."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:140
msgid ""
"Use only with Neutron, to list the internal subnet to which the instance "
"will be attached; needed only if multiple exist; list length must be "
"exactly 1."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:146
msgid "UUID of the internal subnet to which the instance will be attached."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:152
#: heat/engine/resources/openstack/heat/instance_group.py:94
msgid "Tags to attach to this group."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:171
#: heat/engine/resources/openstack/heat/instance_group.py:113
msgid "A comma-delimited list of server ip addresses. (Heat extension)."
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:292
#, python-format
msgid "Start resizing the group %(group)s"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:313
#, python-format
msgid "End resizing the group %(group)s"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:338
msgid "MinSize can not be greater than MaxSize"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:342
msgid "The size of AutoScalingGroup can not be less than zero"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:348
msgid "DesiredCapacity must be between MinSize and MaxSize"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:357
msgid "Anything other than one VPCZoneIdentifier"
msgstr ""

#: heat/engine/resources/aws/autoscaling/autoscaling_group.py:367
msgid "Either 'InstanceId' or 'LaunchConfigurationName' must be provided."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:60
#: heat/engine/resources/aws/ec2/instance.py:94
msgid "Glance image ID or name."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:67
#: heat/engine/resources/aws/ec2/instance.py:104
msgid "Nova instance type (flavor)."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:74
msgid ""
"The ID of an existing instance you want to use to create the launch "
"configuration. All properties are derived from the instance with the "
"exception of BlockDeviceMapping."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:83
#: heat/engine/resources/aws/ec2/instance.py:113
msgid "Optional Nova keypair name."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:90
#: heat/engine/resources/aws/ec2/instance.py:220
msgid "User data to pass to instance."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:94
#: heat/engine/resources/aws/ec2/instance.py:154
msgid "Security group names to assign."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:108
#: heat/engine/resources/aws/ec2/instance.py:251
msgid "Block device mappings to attach to instance."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:114
#: heat/engine/resources/aws/ec2/instance.py:257
msgid ""
"A device name where the volume will be attached in the system at "
"/dev/device_name.e.g. vdb"
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:121
#: heat/engine/resources/aws/ec2/instance.py:264
msgid "The ebs volume to attach to the instance."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:125
#: heat/engine/resources/aws/ec2/instance.py:268
msgid ""
"Indicate whether the volume should be deleted when the instance is "
"terminated."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:131
#: heat/engine/resources/aws/ec2/instance.py:274
msgid "The number of I/O operations per second that the volume supports."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:137
#: heat/engine/resources/aws/ec2/instance.py:280
#: heat/engine/resources/openstack/nova/server.py:165
#: heat/engine/resources/openstack/nova/server.py:214
msgid "The ID of the snapshot to create a volume from."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:146
#: heat/engine/resources/aws/ec2/instance.py:289
msgid ""
"The size of the volume, in GB. Must be equal or greater than the size of "
"the snapshot. It is safe to leave this blank and have the Compute service"
" infer the size."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:154
#: heat/engine/resources/aws/ec2/instance.py:297
msgid "The volume type."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:161
#: heat/engine/resources/aws/ec2/instance.py:304
msgid "The can be used to unmap a defined device."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:166
#: heat/engine/resources/aws/ec2/instance.py:309
msgid ""
"The name of the virtual device. The name must be in the form ephemeralX "
"where X is a number starting from zero (0); for example, ephemeral0."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:176
#: heat/engine/resources/aws/ec2/instance.py:195
msgid "Scheduler hints to pass to Nova (Heat extension)."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:247
#: heat/engine/resources/aws/ec2/instance.py:796
msgid ""
"SnapshotId is missing, this is required when specifying "
"BlockDeviceMappings."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:251
#: heat/engine/resources/aws/ec2/instance.py:800
msgid "Ebs is missing, this is required when specifying BlockDeviceMappings."
msgstr ""

#: heat/engine/resources/aws/autoscaling/launch_config.py:261
msgid "If without InstanceId, ImageId and InstanceType are required."
msgstr ""

#: heat/engine/resources/aws/autoscaling/scaling_policy.py:43
msgid "AutoScaling group name to apply policy to."
msgstr ""

#: heat/engine/resources/aws/autoscaling/scaling_policy.py:48
#: heat/engine/resources/openstack/heat/scaling_policy.py:63
msgid "Size of adjustment."
msgstr ""

#: heat/engine/resources/aws/autoscaling/scaling_policy.py:54
#: heat/engine/resources/openstack/heat/scaling_policy.py:69
msgid "Type of adjustment (absolute or percentage)."
msgstr ""

#: heat/engine/resources/aws/autoscaling/scaling_policy.py:71
msgid ""
"Minimum number of resources that are added or removed when the "
"AutoScaling group scales up or down. This can be used only when "
"specifying PercentChangeInCapacity for the AdjustmentType property."
msgstr ""

#: heat/engine/resources/aws/autoscaling/scaling_policy.py:87
msgid "A signed url to handle the alarm. (Heat extension)."
msgstr ""

#: heat/engine/resources/aws/cfn/stack.py:38
msgid ""
"The URL of a template that specifies the stack to be created as a "
"resource."
msgstr ""

#: heat/engine/resources/aws/cfn/stack.py:45
msgid "The length of time, in minutes, to wait for the nested stack creation."
msgstr ""

#: heat/engine/resources/aws/cfn/stack.py:51
msgid "The set of parameters passed to this nested stack."
msgstr ""

#: heat/engine/resources/aws/cfn/stack.py:60
#: heat/engine/resources/aws/cfn/stack.py:104
#, python-format
msgid "Could not fetch remote template '%(url)s': %(exc)s"
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:43
#: heat/engine/resources/openstack/heat/wait_condition.py:50
msgid ""
"A reference to the wait condition handle used to signal this wait "
"condition."
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:49
#: heat/engine/resources/openstack/heat/wait_condition.py:56
msgid "The number of seconds to wait for the correct number of signals to arrive."
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:58
#: heat/engine/resources/openstack/heat/swiftsignal.py:166
#: heat/engine/resources/openstack/heat/wait_condition.py:65
msgid ""
"The number of success signals that must be received before the stack "
"creation process continues."
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:70
#: heat/engine/resources/openstack/heat/wait_condition.py:77
msgid ""
"JSON string containing data associated with wait condition signals sent "
"to the handle."
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:84
#, python-format
msgid "WaitCondition invalid Handle tenant %s"
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:87
#: heat/engine/resources/aws/cfn/wait_condition.py:90
#, python-format
msgid "WaitCondition invalid Handle stack %s"
msgstr ""

#: heat/engine/resources/aws/cfn/wait_condition.py:93
#: heat/engine/resources/aws/cfn/wait_condition.py:97
#, python-format
msgid "WaitCondition invalid Handle %s"
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:49
msgid "Set to \"vpc\" to have IP address allocation associated to your VPC."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:57
msgid "Instance ID to associate with EIP."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:67
msgid ""
"ID that AWS assigns to represent the allocation of the address for use "
"with Amazon VPC. Returned only for VPC elastic IP addresses."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:198
msgid "Instance ID to associate with EIP specified by EIP property."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:206
msgid "EIP address to associate with instance."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:214
msgid "Allocation ID for VPC EIP address."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:219
msgid "Network interface ID to associate with EIP."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:238
msgid "Either 'EIP' or 'AllocationId' must be provided."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:242
msgid "Must specify 'InstanceId' if you specify 'EIP'."
msgstr ""

#: heat/engine/resources/aws/ec2/eip.py:334
#: heat/engine/resources/aws/ec2/eip.py:357
msgid "Failed to update, can not found port info."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:120
msgid "Availability zone to launch the instance in."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:158
msgid "Security group IDs to assign."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:162
msgid "Network interfaces to associate with instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:172
msgid "Subnet ID to launch instance in."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:177
msgid "Tags to attach to instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:224
msgid "Volumes to attach to instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:231
#: heat/engine/resources/aws/ec2/volume.py:123
msgid ""
"The device where the volume is exposed on the instance. This assignment "
"may not be honored and it is advised that the path /dev/disk/by-"
"id/virtio-<VolumeId> be used instead."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:240
#: heat/engine/resources/aws/ec2/volume.py:114
#: heat/engine/resources/openstack/cinder/volume.py:660
msgid "The ID of the volume to be attached."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:321
msgid "The Availability Zone where the specified instance is launched."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:326
msgid "Private DNS name of the specified instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:330
msgid "Public DNS name of the specified instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:334
msgid "Private IP address of the specified instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:338
msgid "Public IP address of the specified instance."
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:625
#, python-format
msgid "Instance is not ACTIVE (was: %s)"
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:841
#: heat/engine/resources/openstack/nova/server.py:1378
#, python-format
msgid "Cannot suspend %s, resource_id not set"
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:848
#: heat/engine/resources/aws/ec2/instance.py:891
#, python-format
msgid "Failed to find instance %s"
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:872
#, python-format
msgid "Suspend of instance %s failed"
msgstr ""

#: heat/engine/resources/aws/ec2/instance.py:884
#: heat/engine/resources/openstack/nova/server.py:1421
#, python-format
msgid "Cannot resume %s, resource_id not set"
msgstr ""

#: heat/engine/resources/aws/ec2/internet_gateway.py:72
#, python-format
msgid "Expected 1 external network, found %d"
msgstr ""

#: heat/engine/resources/aws/ec2/internet_gateway.py:88
msgid "VPC ID for this gateway association."
msgstr ""

#: heat/engine/resources/aws/ec2/internet_gateway.py:93
msgid "ID of the InternetGateway."
msgstr ""

#: heat/engine/resources/aws/ec2/internet_gateway.py:97
msgid "ID of the VPNGateway to attach to the VPC."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:46
msgid "Description for this interface."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:50
msgid "List of security group IDs associated with this interface."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:58
msgid "Flag indicating if traffic to or from instance is validated."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:63
msgid "Subnet ID to associate with this interface."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:73
msgid "List of tags associated with this interface."
msgstr ""

#: heat/engine/resources/aws/ec2/network_interface.py:91
msgid "Private IP address of the network interface."
msgstr ""

#: heat/engine/resources/aws/ec2/route_table.py:42
msgid "VPC ID for where the route table is created."
msgstr ""

#: heat/engine/resources/aws/ec2/route_table.py:49
msgid "List of tags to be attached to this resource."
msgstr ""

#: heat/engine/resources/aws/ec2/route_table.py:114
msgid "Route table ID."
msgstr ""

#: heat/engine/resources/aws/ec2/route_table.py:119
msgid "Subnet ID."
msgstr ""

#: heat/engine/resources/aws/ec2/security_group.py:371
#: heat/engine/resources/openstack/neutron/security_group.py:126
msgid "Description of the security group."
msgstr ""

#: heat/engine/resources/aws/ec2/security_group.py:376
msgid "Physical ID of the VPC. Not implemented."
msgstr ""

#: heat/engine/resources/aws/ec2/security_group.py:382
msgid "List of security group ingress rules."
msgstr ""

#: heat/engine/resources/aws/ec2/security_group.py:391
msgid "List of security group egress rules."
msgstr ""

#: heat/engine/resources/aws/ec2/security_group.py:446
#, python-format
msgid "Security Group \"%(group_name)s\" not found"
msgstr ""

#: heat/engine/resources/aws/ec2/subnet.py:42
msgid "Availability zone in which you want the subnet."
msgstr ""

#: heat/engine/resources/aws/ec2/subnet.py:46
msgid "CIDR block to apply to subnet."
msgstr ""

#: heat/engine/resources/aws/ec2/subnet.py:51
msgid ""
"Ref structure that contains the ID of the VPC on which you want to create"
" the subnet."
msgstr ""

#: heat/engine/resources/aws/ec2/subnet.py:59
msgid "List of tags to attach to this resource."
msgstr ""

#: heat/engine/resources/aws/ec2/subnet.py:77
msgid "Availability Zone of the subnet."
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:37
#: heat/engine/resources/openstack/cinder/volume.py:65
msgid "The availability zone in which the volume will be created."
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:43
#: heat/engine/resources/openstack/cinder/volume.py:169
msgid "The size of the volume in GB."
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:51
msgid "If specified, the backup used as the source to create the volume."
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:60
msgid "The list of tags to associate with the volume."
msgstr ""

#: heat/engine/resources/aws/ec2/volume.py:105
msgid "The ID of the instance to which the volume attaches."
msgstr ""

#: heat/engine/resources/aws/ec2/vpc.py:39
msgid "CIDR block to apply to the VPC."
msgstr ""

#: heat/engine/resources/aws/ec2/vpc.py:43
msgid ""
"Allowed tenancy of instances launched in the VPC. default - any tenancy; "
"dedicated - instance will be dedicated, regardless of the tenancy option "
"specified at instance launch."
msgstr ""

#: heat/engine/resources/aws/ec2/vpc.py:57
msgid "List of tags to attach to the instance."
msgstr ""

#: heat/engine/resources/aws/ec2/vpc.py:100
#, python-format
msgid "Multiple routers found with name %s"
msgstr ""

#: heat/engine/resources/aws/iam/user.py:61
msgid "A login profile for the user."
msgstr ""

#: heat/engine/resources/aws/iam/user.py:70
msgid "Access policies to apply to the user."
msgstr ""

#: heat/engine/resources/aws/iam/user.py:154
msgid "The name of the user that the new key will belong to."
msgstr ""

#: heat/engine/resources/aws/iam/user.py:169
msgid "Username associated with the AccessKey."
msgstr ""

#: heat/engine/resources/aws/iam/user.py:174
msgid "Keypair secret key."
msgstr ""

#: heat/engine/resources/aws/iam/user.py:204
#, python-format
msgid "could not find user %s"
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:318
msgid "The Availability Zones in which to create the load balancer."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:323
msgid "An application health check for the instances."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:327
msgid ""
"The number of consecutive health probe successes required before moving "
"the instance to the healthy state."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:334
msgid ""
"The approximate interval, in seconds, between health checks of an "
"individual instance."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:340
msgid "The port being checked."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:345
msgid "Health probe timeout, in seconds."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:350
msgid ""
"The number of consecutive health probe failures required before moving "
"the instance to the unhealthy state"
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:359
msgid "The list of instance IDs load balanced."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:364
msgid "One or more listeners for this load balancer."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:370
msgid "TCP port on which the instance server is listening."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:376
msgid "The external load balancer port number."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:381
msgid "The load balancer transport protocol to use."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:413
msgid "List of Security Groups assigned on current LB."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:425
msgid "The name of the hosted zone that is associated with the LoadBalancer."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:430
msgid "The ID of the hosted zone name that is associated with the LoadBalancer."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:435
msgid "The DNS name for the LoadBalancer."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:439
msgid ""
"The security group that you can use as part of your inbound rules for "
"your LoadBalancer's back-end instances."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:444
msgid "Owner of the source security group."
msgstr ""

#: heat/engine/resources/aws/lb/loadbalancer.py:615
msgid "Custom LoadBalancer template can not be found"
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:55
msgid ""
"A predefined access control list (ACL) that grants permissions on the "
"bucket."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:67
msgid "Information used to configure the bucket as a static website."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:71
msgid "The name of the index document."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:75
msgid "The name of the error document."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:81
msgid "Tags to attach to the bucket."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:87
msgid "The tag key name."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:92
msgid "The tag value."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:102
msgid "The DNS name of the specified bucket."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:106
msgid "The website endpoint for the specified bucket."
msgstr ""

#: heat/engine/resources/aws/s3/s3.py:162
#, python-format
msgid "The bucket you tried to delete is not empty (%s)."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:61
#: heat/engine/resources/openstack/barbican/secret.py:54
msgid "Human readable name for the secret."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:65
#: heat/engine/resources/openstack/barbican/secret.py:73
msgid "The type/format the secret data is provided in."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:69
#: heat/engine/resources/openstack/barbican/secret.py:92
msgid "The expiration date for the secret in ISO-8601 format."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:76
#: heat/engine/resources/openstack/barbican/secret.py:99
msgid "The algorithm type used to generate the secret."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:80
#: heat/engine/resources/openstack/barbican/secret.py:103
msgid "The bit-length of the secret."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:84
#: heat/engine/resources/openstack/barbican/secret.py:112
msgid "The type/mode of the algorithm associated with the secret information."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:89
msgid "The type of the order."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:100
msgid "The type of the certificate request."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:105
msgid "The subject of the certificate request."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:110
msgid "The source of certificate request."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:115
msgid "The identifier of the CA to use."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:120
msgid "The profile of certificate to use."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:125
msgid "The content of the CSR."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:130
msgid "The passphrase the created key."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:137
msgid "The status of the order."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:141
msgid "The URI to the order."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:145
msgid "The URI to the created secret."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:149
msgid "The URI to the created container."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:154
msgid "The payload of the created public key, if available."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:159
msgid "The payload of the created private key, if available."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:164
msgid "The payload of the created certificate, if available."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:169
msgid "The payload of the created intermediates, if available."
msgstr ""

#: heat/engine/resources/openstack/barbican/order.py:191
#, python-format
msgid "Order '%(name)s' failed: %(code)s - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/barbican/secret.py:58
msgid "The unencrypted plain text of the secret."
msgstr ""

#: heat/engine/resources/openstack/barbican/secret.py:62
msgid "The type of the secret."
msgstr ""

#: heat/engine/resources/openstack/barbican/secret.py:83
msgid "The encoding format used to provide the payload data."
msgstr ""

#: heat/engine/resources/openstack/barbican/secret.py:119
msgid "The status of the secret."
msgstr ""

#: heat/engine/resources/openstack/barbican/secret.py:123
msgid "The decrypted secret payload."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:44
#: heat/engine/resources/openstack/heat/cloud_watch.py:54
msgid "Description for the alarm."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:49
msgid "True if alarm evaluation/actioning is enabled."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:55
msgid "A list of URLs (webhooks) to invoke when state transitions to alarm."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:61
msgid "A list of URLs (webhooks) to invoke when state transitions to ok."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:67
msgid ""
"A list of URLs (webhooks) to invoke when state transitions to "
"insufficient-data."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:73
msgid ""
"False to trigger actions when the threshold is reached AND the alarm's "
"state has changed. By default, actions are called each time the threshold"
" is reached."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:81
#: heat/engine/resources/openstack/monasca/alarm_definition.py:83
msgid "Severity of the alarm."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:91
msgid ""
"Describe time constraints for the alarm. Only evaluate the alarm if the "
"time at evaluation is within this time constraint. Start point(s) of the "
"constraint are specified with a cron expression,whereas its duration is "
"given in seconds. "
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:102
msgid "Name for the time constraint."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:107
msgid "Start time for the time constraint. A CRON expression property."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:117
msgid "Description for the time constraint."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:121
msgid "Duration for the time constraint."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:129
msgid "Timezone for the time constraint (eg. 'Taiwan/Taipei', 'Europe/Amsterdam')"
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:215
#: heat/engine/resources/openstack/ceilometer/gnocchi/alarm.py:34
msgid "Operator used to compare specified statistic with threshold."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:224
#: heat/engine/resources/openstack/ceilometer/gnocchi/alarm.py:43
#: heat/engine/resources/openstack/heat/cloud_watch.py:59
msgid "Number of periods to evaluate over."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:229
msgid "Meter name watched by the alarm."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:234
#: heat/engine/resources/openstack/heat/cloud_watch.py:75
msgid "Period (seconds) to evaluate over."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:239
msgid "Meter statistic to evaluate."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:248
#: heat/engine/resources/openstack/ceilometer/gnocchi/alarm.py:62
#: heat/engine/resources/openstack/heat/cloud_watch.py:112
msgid "Threshold to evaluate against."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:254
msgid ""
"Meter should match this resource metadata (key=value) additionally to the"
" meter_name."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:261
msgid ""
"A list of query factors, each comparing a Sample attribute with a value. "
"Implicitly combined with matching_metadata, if any."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:271
msgid ""
"Name of attribute to compare. Names of the form metadata.user_metadata.X "
"or metadata.metering.X are equivalent to what you can address through "
"matching_metadata; the former for Nova meters, the latter for all others."
" To see the attributes of your Samples, use `ceilometer --debug sample-"
"list`."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:282
msgid "Comparison operator"
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:287
msgid "String value with which to compare"
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:455
msgid "List of alarm identifiers to combine."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/alarm.py:461
msgid "Operator used to combine the alarms."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/gnocchi/alarm.py:48
msgid "The aggregation method to compare to the threshold"
msgstr ""

#: heat/engine/resources/openstack/ceilometer/gnocchi/alarm.py:57
msgid "The time range in seconds."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/gnocchi/alarm.py:88
#: heat/engine/resources/openstack/ceilometer/gnocchi/alarm.py:159
#: heat/engine/resources/openstack/heat/cloud_watch.py:65
msgid "Metric name watched by the alarm."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/gnocchi/alarm.py:94
msgid "Id of a resource"
msgstr ""

#: heat/engine/resources/openstack/ceilometer/gnocchi/alarm.py:100
#: heat/engine/resources/openstack/ceilometer/gnocchi/alarm.py:171
msgid "Resource type"
msgstr ""

#: heat/engine/resources/openstack/ceilometer/gnocchi/alarm.py:127
msgid "A list of metric ids."
msgstr ""

#: heat/engine/resources/openstack/ceilometer/gnocchi/alarm.py:165
msgid "The query to filter the metrics"
msgstr ""

#: heat/engine/resources/openstack/cinder/encrypted_volume_type.py:46
msgid ""
"The class that provides encryption support. For example, "
"nova.volume.encryptors.luks.LuksEncryptor."
msgstr ""

#: heat/engine/resources/openstack/cinder/encrypted_volume_type.py:53
msgid ""
"Notional service where encryption is performed For example, front-end. "
"For Nova."
msgstr ""

#: heat/engine/resources/openstack/cinder/encrypted_volume_type.py:63
msgid "The encryption algorithm or mode. For example, aes-xts-plain64."
msgstr ""

#: heat/engine/resources/openstack/cinder/encrypted_volume_type.py:75
msgid "Size of encryption key, in bits. For example, 128 or 256."
msgstr ""

#: heat/engine/resources/openstack/cinder/encrypted_volume_type.py:82
msgid "Name or id of volume type (OS::Cinder::VolumeType)."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:69
msgid ""
"The size of the volume in GB. On update only increase in size is "
"supported."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:78
msgid "If specified, the snapshot to create the volume from."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:85
msgid "If specified, the backup to create the volume from."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:93
msgid "A name used to distinguish the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:98
msgid "A description of the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:103
msgid "If specified, the type of volume to use, mapping to a specific backend."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:112
msgid "Key/value pairs to associate with the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:117
msgid "The ID of the image to create the volume from."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:120
#: heat/engine/resources/openstack/heat/random_string.py:91
#: heat/engine/resources/openstack/neutron/floatingip.py:49
#: heat/engine/resources/openstack/neutron/loadbalancer.py:226
#: heat/engine/resources/openstack/neutron/network_gateway.py:99
#: heat/engine/resources/openstack/neutron/port.py:87
#: heat/engine/resources/openstack/neutron/port.py:137
#: heat/engine/resources/openstack/neutron/router.py:107
#: heat/engine/resources/openstack/neutron/router.py:313
#: heat/engine/resources/openstack/neutron/router.py:326
#: heat/engine/resources/openstack/neutron/router.py:353
#: heat/engine/resources/openstack/neutron/router.py:470
#: heat/engine/resources/openstack/neutron/subnet.py:73
#: heat/engine/resources/openstack/neutron/vpnservice.py:64
#: heat/engine/resources/openstack/nova/server.py:339
#: heat/engine/resources/openstack/sahara/cluster.py:98
#, python-format
msgid "Use property %s."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:130
msgid "If specified, the name or ID of the image to create the volume from."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:138
msgid "If specified, the volume to use as source."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:145
msgid ""
"Arbitrary key-value pairs specified by the client to help the Cinder "
"scheduler creating a volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:151
msgid "Enables or disables read-only access mode of volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:157
msgid ""
"Whether allow the volume to be attached more than once. This property is "
"only supported from Cinder API v2."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:165
msgid "The availability zone in which the volume is located."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:173
msgid "The snapshot the volume was created from, if any."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:177
msgid "Name of the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:181
msgid "Description of the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:185
msgid "The type of the volume mapping to a backend, if any."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:189
msgid "Key/value pairs associated with the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:193
msgid "The volume used as source, if any."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:197
msgid "The current status of the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:201
msgid "The timestamp indicating volume creation."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:205
msgid "Boolean indicating if the volume can be booted or not."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:209
msgid "Key/value pairs associated with the volume in raw dict form."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:213
msgid "Boolean indicating if the volume is encrypted or not."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:217
msgid "The list of attachments of the volume."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:221
msgid "Boolean indicating whether allow the volume to be attached more than once."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:310
#, python-format
msgid "Failed to extend volume %(vol)s - %(err)s"
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:336
msgid "Volume resize failed"
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:346
#, python-format
msgid "Failed to restore volume %(vol)s from backup %(backup)s - %(err)s"
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:366
msgid "Volume backup restore failed"
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:402
msgid "Using Cinder API V1, volume_type update"
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:428
msgid "Shrinking volume"
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:573
#, python-format
msgid ""
"If neither \"%(backup_id)s\" nor \"%(size)s\" is provided, one and only "
"one of \"%(image)s\", \"%(image_ref)s\", \"%(source_vol)s\", "
"\"%(snapshot_id)s\" must be specified, but currently specified options: "
"%(exclusive_options)s."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:587
#, python-format
msgid ""
"If \"%(size)s\" is provided, only one of \"%(image)s\", "
"\"%(image_ref)s\", \"%(source_vol)s\", \"%(snapshot_id)s\" can be "
"specified, but currently specified options: %(exclusive_options)s."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:609
msgid "Scheduler hints are not supported by the current volume API."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:615
msgid ""
"Multiple attach is not supported by the current volume API. Use this "
"property since Cinder API v2."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:654
msgid "The ID of the server to which the volume attaches."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume.py:669
msgid ""
"The location where the volume is exposed on the instance. This assignment"
" may not be honored and it is advised that the path /dev/disk/by-"
"id/virtio-<VolumeId> be used instead."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume_type.py:48
msgid "Name of the volume type."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume_type.py:54
msgid "The extra specs key and value pairs of the volume type."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume_type.py:59
msgid "Whether the volume type is accessible to the public."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume_type.py:66
msgid "Description of the volume type."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume_type.py:72
msgid ""
"Projects to add volume type access to. NOTE: This property is only "
"supported since Cinder API V2."
msgstr ""

#: heat/engine/resources/openstack/cinder/volume_type.py:153
msgid "Using Cinder API V1, volume type access"
msgstr ""

#: heat/engine/resources/openstack/cinder/volume_type.py:155
#, python-format
msgid "Can not specify property \"%s\" if the volume type is public."
msgstr ""

#: heat/engine/resources/openstack/designate/domain.py:51
msgid "Domain name."
msgstr ""

#: heat/engine/resources/openstack/designate/domain.py:58
#: heat/engine/resources/openstack/designate/record.py:61
msgid "Time To Live (Seconds)."
msgstr ""

#: heat/engine/resources/openstack/designate/domain.py:66
msgid "Description of domain."
msgstr ""

#: heat/engine/resources/openstack/designate/domain.py:72
msgid "Domain email."
msgstr ""

#: heat/engine/resources/openstack/designate/domain.py:80
msgid "DNS domain serial."
msgstr ""

#: heat/engine/resources/openstack/designate/record.py:54
msgid "Record name."
msgstr ""

#: heat/engine/resources/openstack/designate/record.py:69
msgid "Description of record."
msgstr ""

#: heat/engine/resources/openstack/designate/record.py:75
msgid "DNS Record type."
msgstr ""

#: heat/engine/resources/openstack/designate/record.py:84
msgid ""
"DNS record data, varies based on the type of record. For more details, "
"please refer rfc 1035."
msgstr ""

#: heat/engine/resources/openstack/designate/record.py:93
msgid ""
"DNS record priority. It is considered only for MX and SRV types, "
"otherwise, it is ignored."
msgstr ""

#: heat/engine/resources/openstack/designate/record.py:101
msgid "DNS Domain id or name."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:41
msgid ""
"Name for the image. The name of an image is not unique to a Image Service"
" node."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:46
msgid "The image ID. Glance will generate a UUID if not specified."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:50
msgid ""
"Scope of image accessibility. Public or private. Default value is False "
"means private."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:56
msgid ""
"Amount of disk space (in GB) required to boot image. Default value is 0 "
"if not specified and means no limit on the disk size."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:65
msgid ""
"Amount of ram (in MB) required to boot image. Default value is 0 if not "
"specified and means no limit on the ram size."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:73
msgid ""
"Whether the image can be deleted. If the value is True, the image is "
"protected and cannot be deleted."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:78
msgid "Disk format of image."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:88
msgid "Container format of image."
msgstr ""

#: heat/engine/resources/openstack/glance/image.py:97
msgid ""
"URL where the data for this image already resides. For example, if the "
"image data is stored in swift, you could specify "
"\"swift://example.com/container/obj\"."
msgstr ""

#: heat/engine/resources/openstack/heat/access_policy.py:35
msgid ""
"Resources that users are allowed to access by the DescribeStackResource "
"API."
msgstr ""

#: heat/engine/resources/openstack/heat/access_policy.py:52
#, python-format
msgid "AccessPolicy resource %s not in stack"
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:58
msgid ""
"Resource definition for the resources in the group, in HOT format. The "
"value of this property is the definition of a resource just as if it had "
"been declared in the template itself."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:67
msgid "Maximum number of resources in the group."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:74
msgid "Minimum number of resources in the group."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:86
msgid "Desired initial number of resources."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:91
msgid "Policy for rolling updates for this scaling group."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:96
#: heat/engine/resources/openstack/heat/resource_group.py:213
msgid ""
"The minimum number of resources in service while rolling updates are "
"being executed."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:102
#: heat/engine/resources/openstack/heat/resource_group.py:219
msgid "The maximum number of resources to replace at once."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:107
#: heat/engine/resources/openstack/heat/resource_group.py:224
msgid "The number of seconds to wait between batches of updates."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:123
msgid ""
"A map of resource names to the specified attribute of each individual "
"resource. Requires heat_template_version: 2014-10-16 or higher."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:130
msgid ""
"A list of the specified attribute of each individual resource. Requires "
"heat_template_version: 2014-10-16 or higher."
msgstr ""

#: heat/engine/resources/openstack/heat/autoscaling_group.py:136
msgid "The current size of AutoscalingResourceGroup."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_config.py:46
msgid ""
"Map representing the cloud-config data structure which will be formatted "
"as YAML."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:41
msgid "Operator used to compare the specified Statistic with Threshold."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:70
msgid "Namespace for the metric."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:81
msgid "Metric statistic to evaluate."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:91
msgid "A list of actions to execute when state transitions to alarm."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:96
msgid "A list of actions to execute when state transitions to ok."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:101
msgid ""
"A list of dimensions (arbitrary name/value pairs) associated with the "
"metric."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:106
msgid "A list of actions to execute when state transitions to insufficient-data."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:118
msgid "Unit for the metric."
msgstr ""

#: heat/engine/resources/openstack/heat/cloud_watch.py:145
msgid "OS::Heat::CWLiteAlarm is deprecated, use OS::Ceilometer::Alarm instead."
msgstr ""

#: heat/engine/resources/openstack/heat/ha_restarter.py:32
msgid ""
"The HARestarter resource type is deprecated and will be removed in a "
"future release of Heat, once it has support for auto-healing any type of "
"resource. Note that HARestarter does *not* actually restart servers - it "
"deletes and then recreates them. It also does the same to all dependent "
"resources, and may therefore exhibit unexpected and undesirable "
"behaviour. Avoid."
msgstr ""

#: heat/engine/resources/openstack/heat/ha_restarter.py:56
msgid "Instance ID to be restarted."
msgstr ""

#: heat/engine/resources/openstack/heat/ha_restarter.py:66
msgid "A signed url to handle the alarm (Heat extension)."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:84
msgid "Desired number of instances."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:141
#, python-format
msgid "Maximum %s is 1 hour."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:154
#, python-format
msgid "%(lc)s (%(ref)s) reference can not be found."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:159
#, python-format
msgid ""
"%(lc)s (%(ref)s) requires a reference to the configuration not just the "
"name of the resource."
msgstr ""

#: heat/engine/resources/openstack/heat/instance_group.py:276
#: heat/engine/resources/openstack/heat/resource_group.py:530
#, python-format
msgid "The current %s will result in stack update timeout."
msgstr ""

#: heat/engine/resources/openstack/heat/multi_part.py:62
msgid "Parts belonging to this message."
msgstr ""

#: heat/engine/resources/openstack/heat/multi_part.py:69
msgid ""
"Content of part to attach, either inline or by referencing the ID of "
"another software config resource"
msgstr ""

#: heat/engine/resources/openstack/heat/multi_part.py:76
msgid "Optional filename to associate with part."
msgstr ""

#: heat/engine/resources/openstack/heat/multi_part.py:80
msgid "Whether the part content is text or multipart."
msgstr ""

#: heat/engine/resources/openstack/heat/multi_part.py:86
msgid "Optional subtype to specify with the type."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:71
msgid "Length of the string to generate."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:79
msgid "Sequence of characters to build the random string from."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:98
msgid ""
"A list of character class and their constraints to generate the random "
"string from."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:105
#, python-format
msgid ""
"A character class and its corresponding %(min)s constraint to generate "
"the random string from."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:117
msgid ""
"The minimum number of characters from this character class that will be "
"in the generated string."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:130
msgid ""
"A list of character sequences and their constraints to generate the "
"random string from."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:137
#, python-format
msgid ""
"A character sequence and its corresponding %(min)s constraint to generate"
" the random string from."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:143
msgid ""
"The minimum number of characters from this sequence that will be in the "
"generated string."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:156
msgid ""
"Value which can be set or changed on stack update to trigger the resource"
" for replacement with a new random string. The salt value itself is "
"ignored by the random generator."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:164
msgid ""
"The random string generated by this resource. This value is also "
"available by referencing the resource."
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:263
#, python-format
msgid ""
"Cannot use deprecated '%(seq)s' property along with '%(char_seqs)s' or "
"'%(char_classes)s' properties"
msgstr ""

#: heat/engine/resources/openstack/heat/random_string.py:279
msgid ""
"Length property cannot be smaller than combined character class and "
"character sequence minimums"
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:64
msgid "Context for this stack."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:68
msgid "Region name in which this stack will be created."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:75
msgid "Template that specifies the stack to be created as a resource."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:82
msgid "Number of minutes to wait for this stack creation."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:87
msgid "Set of parameters passed to this stack."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:95
msgid "Name of the stack."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:99
msgid "A dict of key-value pairs output from the stack."
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:140
#, python-format
msgid ""
"Cannot establish connection to Heat endpoint at region \"%(region)s\" due"
" to \"%(exc)s\""
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:157
#, python-format
msgid ""
"Failed validating stack template using Heat endpoint at region "
"\"%(region)s\" due to \"%(exc)s\""
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:184
#, python-format
msgid "Cannot resume %s, resource not found"
msgstr ""

#: heat/engine/resources/openstack/heat/remote_stack.py:190
#, python-format
msgid "Cannot suspend %s, resource not found"
msgstr ""

#: heat/engine/resources/openstack/heat/resource_chain.py:68
msgid ""
"The list of resource types to create. This list may contain type names or"
" aliases defined in the resource registry. Specific template names are "
"not supported."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_chain.py:77
msgid ""
"If true, the resources in the chain will be created concurrently. If "
"false or omitted, each resource will be treated as having a dependency on"
" the previous resource in the list."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_chain.py:85
msgid "Properties to pass to each resource being created in the chain."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_chain.py:92
msgid "A list of resource IDs for the resources in the chain."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_chain.py:97
msgid ""
"A map of resource names to the specified attribute of each individual "
"resource."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_chain.py:123
#, python-format
msgid "Failed to validate nested template: %s"
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:118
msgid "The number of resources to create."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:127
msgid ""
"A variable that this resource will use to replace with the current index "
"of a given resource in the group. Can be used, for example, to customize "
"the name property of grouped servers in order to differentiate them when "
"listed with nova client."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:140
msgid ""
"Resource definition for the resources in the group. The value of this "
"property is the definition of a resource just as if it had been declared "
"in the template itself."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:146
msgid "The type of the resources in the group"
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:151
msgid "Property values for the resources in the group"
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:155
msgid "Supplied metadata for the resources in the group"
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:165
msgid "Policies for removal of resources on update"
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:168
msgid ""
"Policy to be processed when doing an update which requires removal of "
"specific resources."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:173
msgid ""
"List of resources to be removed when doing an update which requires "
"removal of specific resources. The resource may be specified several "
"ways: (1) The resource name, as in the nested stack, (2) The resource "
"reference returned from get_resource in a template, as available via the "
"'refs' attribute Note this is destructive on update when specified; even "
"if the count is not being reduced, and once a resource name is removed, "
"it's name is never reused in subsequent updates"
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:198
msgid "A list of resource IDs for the resources in the group"
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:202
msgid ""
"A map of resource names to the specified attribute of each individual "
"resource.  Requires heat_template_version: 2014-10-16."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:233
msgid "The maximum number of resources to create at once."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:239
msgid "The number of seconds to wait between batches."
msgstr ""

#: heat/engine/resources/openstack/heat/resource_group.py:283
#, python-format
msgid "Failed to validate: %s"
msgstr ""

#: heat/engine/resources/openstack/heat/scaling_policy.py:58
msgid "AutoScaling group ID to apply policy to."
msgstr ""

#: heat/engine/resources/openstack/heat/scaling_policy.py:86
msgid ""
"Minimum number of resources that are added or removed when the "
"AutoScaling group scales up or down. This can be used only when "
"specifying percent_change_in_capacity for the adjustment_type property."
msgstr ""

#: heat/engine/resources/openstack/heat/scaling_policy.py:102
msgid "A signed url to handle the alarm."
msgstr ""

#: heat/engine/resources/openstack/heat/scaling_policy.py:106
msgid "A url to handle the alarm using native API."
msgstr ""

#: heat/engine/resources/openstack/heat/scaling_policy.py:172
#, python-format
msgid "Alarm %(alarm)s could not find scaling group named \"%(group)s\""
msgstr ""

#: heat/engine/resources/openstack/heat/software_component.py:68
msgid ""
"Lifecycle actions to which the configuration applies. The string values "
"provided for this property can include the standard resource actions "
"CREATE, DELETE, UPDATE, SUSPEND and RESUME supported by Heat."
msgstr ""

#: heat/engine/resources/openstack/heat/software_component.py:83
msgid ""
"The configuration tool used to actually apply the configuration on a "
"server. This string property has to be understood by in-instance tools "
"running inside deployed servers."
msgstr ""

#: heat/engine/resources/openstack/heat/software_component.py:95
msgid ""
"The list of configurations for the different lifecycle actions of the "
"represented software component."
msgstr ""

#: heat/engine/resources/openstack/heat/software_component.py:150
#, python-format
msgid ""
"Defining more than one configuration for the same action in "
"SoftwareComponent \"%s\" is not allowed."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:68
msgid "Name of the input."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:73
msgid "Description of the input."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:77
msgid "Type of the value of the input."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:84
msgid "Default value for the input if none is specified."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:91
msgid "Name of the output."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:96
msgid "Description of the output."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:100
msgid "Type of the value of the output."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:107
msgid ""
"Denotes that the deployment is in an error state if this output has a "
"value."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:116
msgid ""
"Namespace to group this software config by when delivered to a server. "
"This may imply what configuration tool is going to perform the "
"configuration."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:123
msgid ""
"Configuration script or manifest which specifies what actual "
"configuration is performed."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:128
msgid ""
"Map containing options specific to the configuration management tool used"
" by this resource."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:133
msgid "Schema representing the inputs that this software config is expecting."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:140
msgid "Schema representing the outputs that this software config will produce."
msgstr ""

#: heat/engine/resources/openstack/heat/software_config.py:149
msgid "The config value of the software config."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:123
msgid ""
"ID of software configuration resource to execute when applying to the "
"server."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:129
msgid ""
"ID of resource to apply configuration to. Normally this should be a Nova "
"server ID."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:135
msgid "Input values to apply to the software configuration on this server."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:141
msgid ""
"Which lifecycle actions of the deployment resource will result in this "
"deployment being triggered."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:149
msgid ""
"Name of the derived config associated with this deployment. This is used "
"to apply a sort order to the list of configurations currently deployed to"
" a server."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:156
msgid ""
"How the server should signal to heat with the deployment output values. "
"CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. "
"TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. "
"HEAT_SIGNAL will allow calls to the Heat API resource-signal using the "
"provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar"
" queue to be signaled using the provided keystone credentials. NO_SIGNAL "
"will result in the resource going to the COMPLETE state without waiting "
"for any signal."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:174
msgid "Captured stdout from the configuration execution."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:178
msgid "Captured stderr from the configuration execution."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:182
msgid "Returned status code from the configuration execution"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:223
msgid "Not waiting for outputs signal"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:226
msgid "Deploy data available"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:295
#, python-format
msgid "Deployment to server failed: %s"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:348
msgid "ID of the server being deployed to"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:353
msgid "Name of the current action being deployed"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:358
msgid "ID of the stack this deployment belongs to"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:363
msgid "Name of this deployment resource in the stack"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:369
msgid "How the server should signal to heat with the deployment output values."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:377
#: heat/engine/resources/openstack/heat/software_deployment.py:392
msgid "ID of signal to use for signaling output values"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:384
#: heat/engine/resources/openstack/heat/software_deployment.py:399
msgid "HTTP verb to use for signaling output values"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:408
msgid "URL for API authentication"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:413
msgid "Username for API authentication"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:418
msgid "User ID for API authentication"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:423
msgid "Password for API authentication"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:428
msgid "ID of project for API authentication"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:435
msgid "ID of queue to use for signaling output values"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:545
#, python-format
msgid ""
"Resource %s's property user_data_format should be set to SOFTWARE_CONFIG "
"since there are software deployments on it."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:593
msgid "A map of Nova names and IDs to apply configuration to."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:605
msgid ""
"A map of Nova names and captured stdouts from the configuration execution"
" to each server."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:610
msgid ""
"A map of Nova names and captured stderrs from the configuration execution"
" to each server."
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:615
msgid ""
"A map of Nova names and returned status code from the configuration "
"execution"
msgstr ""

#: heat/engine/resources/openstack/heat/software_deployment.py:659
msgid ""
"The resource OS::Heat::SoftwareDeployments is deprecated and usage is "
"discouraged. Please use resource OS::Heat::SoftwareDeploymentGroup "
"instead."
msgstr ""

#: heat/engine/resources/openstack/heat/structured_config.py:64
msgid ""
"Map representing the configuration data structure which will be "
"serialized to JSON format."
msgstr ""

#: heat/engine/resources/openstack/heat/structured_config.py:120
msgid "Name of key to use for substituting inputs during deployment"
msgstr ""

#: heat/engine/resources/openstack/heat/structured_config.py:125
msgid ""
"Perform a check on the input values passed to verify that each required "
"input has a corresponding value. When the property is set to STRICT and "
"no value is passed, an exception is raised."
msgstr ""

#: heat/engine/resources/openstack/heat/structured_config.py:233
msgid ""
"The resource OS::Heat::StructuredDeployments is deprecated and usage is "
"discouraged. Please use resource OS::Heat::StructuredDeploymentGroup "
"instead."
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:71
msgid ""
"Tokens are not needed for Swift TempURLs.  This attribute is being kept "
"for compatibility with the OS::Heat::WaitConditionHandle resource"
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:78
msgid "Endpoint/url which can be used for signalling handle"
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:83
msgid ""
"Convenience attribute, provides curl CLI command prefix, which can be "
"used for signalling handle completion or failure.  You can signal success"
" by adding --data-binary '{\"status\": \"SUCCESS\"}' , or signal failure "
"by adding --data-binary '{\"status\": \"FAILURE\"}'"
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:150
msgid ""
"URL of TempURL where resource will signal completion and optionally "
"upload data."
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:155
msgid ""
"The maximum number of seconds to wait for the resource to signal "
"completion.  Once the timeout is reached, creation of the signal resource"
" will fail."
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:180
msgid "JSON data that was uploaded via the SwiftSignalHandle."
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:218
#, python-format
msgid "\"%(url)s\" is not a valid SwiftSignalHandle.  The %(part)s is invalid"
msgstr ""

#: heat/engine/resources/openstack/heat/swiftsignal.py:329
#, python-format
msgid "Unknown status: %s"
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:63
msgid "The input string to be stored."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:69
msgid ""
"Value which can be set to fail the resource operation to test failure "
"scenarios."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:76
msgid ""
"Value which can be set to trigger update replace for the particular "
"resource"
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:83
msgid "Seconds to wait after an action (-1 is infinite)"
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:89
msgid "Options for simulating waiting."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:94
msgid "Seconds to wait after a create. Defaults to the global wait_secs"
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:100
msgid "Seconds to wait after an update. Defaults to the global wait_secs"
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:106
msgid "Seconds to wait after a delete. Defaults to the global wait_secs"
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:114
msgid "Client to poll."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:120
msgid "Client entity to poll."
msgstr ""

#: heat/engine/resources/openstack/heat/test_resource.py:128
msgid ""
"The string that was stored. This value is also available by referencing "
"the resource."
msgstr ""

#: heat/engine/resources/openstack/heat/wait_condition.py:92
#, python-format
msgid "%(name)s is not a valid wait condition handle."
msgstr ""

#: heat/engine/resources/openstack/heat/wait_condition_handle.py:50
msgid ""
"How the client will signal the wait condition. CFN_SIGNAL will allow an "
"HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a "
"Swift TempURL to be signalled via HTTP PUT. HEAT_SIGNAL will allow calls "
"to the Heat API resource-signal using the provided keystone credentials. "
"ZAQAR_SIGNAL will create a dedicated zaqar queue to be signalled using "
"the provided keystone credentials. TOKEN_SIGNAL will allow and HTTP POST "
"to a Heat API endpoint with the provided keystone token. NO_SIGNAL will "
"result in the resource going to a signalled state without waiting for any"
" signal."
msgstr ""

#: heat/engine/resources/openstack/heat/wait_condition_handle.py:83
msgid ""
"Token for stack-user which can be used for signalling handle when "
"signal_transport is set to TOKEN_SIGNAL. None for all other signal "
"transports."
msgstr ""

#: heat/engine/resources/openstack/heat/wait_condition_handle.py:90
msgid ""
"Endpoint/url which can be used for signalling handle when "
"signal_transport is set to TOKEN_SIGNAL. None for all other signal "
"transports."
msgstr ""

#: heat/engine/resources/openstack/heat/wait_condition_handle.py:97
msgid ""
"Convenience attribute, provides curl CLI command prefix, which can be "
"used for signalling handle completion or failure when signal_transport is"
" set to TOKEN_SIGNAL.  You  can signal success by adding --data-binary "
"'{\"status\": \"SUCCESS\"}' , or signal failure by adding --data-binary "
"'{\"status\": \"FAILURE\"}'. This attribute is set to None for all other "
"signal transports."
msgstr ""

#: heat/engine/resources/openstack/heat/wait_condition_handle.py:111
msgid ""
"JSON serialized map that includes the endpoint, token and/or other "
"attributes the client must use for signalling this handle. The contents "
"of this map depend on the type of signal selected in the signal_transport"
" property."
msgstr ""

#: heat/engine/resources/openstack/keystone/endpoint.py:31
#: heat/engine/resources/openstack/keystone/group.py:33
#: heat/engine/resources/openstack/keystone/project.py:33
#: heat/engine/resources/openstack/keystone/region.py:32
#: heat/engine/resources/openstack/keystone/role.py:30
#: heat/engine/resources/openstack/keystone/role_assignments.py:319
#: heat/engine/resources/openstack/keystone/role_assignments.py:370
#: heat/engine/resources/openstack/keystone/service.py:28
#: heat/engine/resources/openstack/keystone/user.py:33
msgid "Supported versions: keystone v3"
msgstr ""

#: heat/engine/resources/openstack/keystone/endpoint.py:46
msgid "Name of keystone endpoint."
msgstr ""

#: heat/engine/resources/openstack/keystone/endpoint.py:51
msgid "Name or Id of keystone region."
msgstr ""

#: heat/engine/resources/openstack/keystone/endpoint.py:57
msgid "Name or Id of keystone service."
msgstr ""

#: heat/engine/resources/openstack/keystone/endpoint.py:64
msgid "Interface type of keystone service endpoint."
msgstr ""

#: heat/engine/resources/openstack/keystone/endpoint.py:73
msgid "URL of keystone service endpoint."
msgstr ""

#: heat/engine/resources/openstack/keystone/endpoint.py:79
msgid "This endpoint is enabled or disabled."
msgstr ""

#: heat/engine/resources/openstack/keystone/group.py:48
msgid "Name of keystone group."
msgstr ""

#: heat/engine/resources/openstack/keystone/group.py:53
#: heat/engine/resources/openstack/keystone/project.py:53
msgid "Name or id of keystone domain."
msgstr ""

#: heat/engine/resources/openstack/keystone/group.py:60
msgid "Description of keystone group."
msgstr ""

#: heat/engine/resources/openstack/keystone/project.py:48
msgid "Name of keystone project."
msgstr ""

#: heat/engine/resources/openstack/keystone/project.py:60
msgid "Description of keystone project."
msgstr ""

#: heat/engine/resources/openstack/keystone/project.py:66
msgid "This project is enabled or disabled."
msgstr ""

#: heat/engine/resources/openstack/keystone/project.py:72
msgid "The name or ID of parent of this keystone project in hierarchy."
msgstr ""

#: heat/engine/resources/openstack/keystone/region.py:47
msgid ""
"The user-defined region ID and should unique to the OpenStack deployment."
" While creating the region, heat will url encode this ID."
msgstr ""

#: heat/engine/resources/openstack/keystone/region.py:53
msgid ""
"If the region is hierarchically a child of another region, set this "
"parameter to the ID of the parent region."
msgstr ""

#: heat/engine/resources/openstack/keystone/region.py:60
msgid "Description of keystone region."
msgstr ""

#: heat/engine/resources/openstack/keystone/region.py:65
msgid "This region is enabled or disabled."
msgstr ""

#: heat/engine/resources/openstack/keystone/role.py:45
msgid "Name of keystone role."
msgstr ""

#: heat/engine/resources/openstack/keystone/role_assignments.py:66
msgid "List of role assignments."
msgstr ""

#: heat/engine/resources/openstack/keystone/role_assignments.py:69
msgid "Map between role with either project or domain."
msgstr ""

#: heat/engine/resources/openstack/keystone/role_assignments.py:73
msgid "Keystone role"
msgstr ""

#: heat/engine/resources/openstack/keystone/role_assignments.py:80
msgid "Keystone project"
msgstr ""

#: heat/engine/resources/openstack/keystone/role_assignments.py:86
msgid "Keystone domain"
msgstr ""

#: heat/engine/resources/openstack/keystone/role_assignments.py:308
#, python-format
msgid "Either project or domain must be specified for role %s"
msgstr ""

#: heat/engine/resources/openstack/keystone/role_assignments.py:332
msgid "Name or id of keystone user."
msgstr ""

#: heat/engine/resources/openstack/keystone/role_assignments.py:383
msgid "Name or id of keystone group."
msgstr ""

#: heat/engine/resources/openstack/keystone/service.py:43
msgid "Name of keystone service."
msgstr ""

#: heat/engine/resources/openstack/keystone/service.py:48
msgid "Description of keystone service."
msgstr ""

#: heat/engine/resources/openstack/keystone/service.py:53
msgid "Type of keystone Service."
msgstr ""

#: heat/engine/resources/openstack/keystone/service.py:59
msgid "This service is enabled or disabled."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:50
msgid "Name of keystone user."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:55
msgid "Name of keystone domain."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:62
msgid "Description of keystone user."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:68
msgid "Keystone user is enabled or disabled"
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:74
msgid "Email address of keystone user."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:79
msgid "Password of keystone user."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:84
msgid "Default project of keystone user."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:90
msgid "keystone user groups."
msgstr ""

#: heat/engine/resources/openstack/keystone/user.py:94
msgid "keystone user group."
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:44
msgid "The bay name."
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:48
msgid "The name or ID of the bay model."
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:56
msgid "The node count for this bay."
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:62
msgid "The number of master nodes for this bay."
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:68
msgid "Specifies a custom discovery url for node discovery."
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:72
msgid "Timeout for creating the bay in minutes. Set to 0 for no timeout."
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:105
#, python-format
msgid "Failed to create Bay '%(name)s' - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:110
#, python-format
msgid "Unknown status creating Bay '%(name)s' - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:133
#, python-format
msgid "Failed to update Bay '%(name)s' - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/magnum/bay.py:139
#, python-format
msgid "Unknown status updating Bay '%(name)s' - %(reason)s"
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:45
msgid "The bay model name."
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:49
msgid "The image name or UUID to use as a base image for this baymodel."
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:58
msgid "The flavor of this bay model."
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:65
msgid "The flavor of the master node for this bay model."
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:72
msgid "The name or id of the nova ssh keypair."
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:80
msgid "The external network to attach the Bay."
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:88
msgid "The fixed network to attach the Bay."
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:95
msgid "The DNS nameserver address."
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:103
msgid "The size in GB of the docker volume."
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:110
msgid "The SSH Authorized Key."
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:114
msgid "The Container Orchestration Engine for this bay model."
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:122
msgid ""
"The name of the driver used for instantiating container networks. By "
"default, Magnum will choose the pre-configured network driver based on "
"COE type."
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:129
msgid "The http_proxy address to use for nodes in bay."
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:134
msgid "The https_proxy address to use for nodes in bay."
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:139
msgid ""
"A comma separated list of addresses for which proxies should not be used "
"in the bay."
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:145
msgid ""
"Arbitrary labels in the form of key=value pairs to associate with a "
"baymodel."
msgstr ""

#: heat/engine/resources/openstack/magnum/baymodel.py:151
msgid "Disable TLS in the Bay."
msgstr ""

#: heat/engine/resources/openstack/manila/security_service.py:42
msgid "Security service name."
msgstr ""

#: heat/engine/resources/openstack/manila/security_service.py:47
msgid "Security service type."
msgstr ""

#: heat/engine/resources/openstack/manila/security_service.py:56
msgid "DNS IP address used inside tenant's network."
msgstr ""

#: heat/engine/resources/openstack/manila/security_service.py:61
msgid "Security service IP address or hostname."
msgstr ""

#: heat/engine/resources/openstack/manila/security_service.py:66
msgid "Security service domain."
msgstr ""

#: heat/engine/resources/openstack/manila/security_service.py:71
msgid "Security service user or group used by tenant."
msgstr ""

#: heat/engine/resources/openstack/manila/security_service.py:76
msgid "Password used by user."
msgstr ""

#: heat/engine/resources/openstack/manila/security_service.py:81
msgid "Security service description."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:77
msgid "Share protocol supported by shared filesystem."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:84
msgid "Share storage size in GB."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:89
msgid ""
"Name or ID of shared file system snapshot that will be restored and "
"created as a new share."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:95
msgid "Share name."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:100
msgid "Metadata key-values defined for share."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:105
msgid "Name or ID of shared network defined for shared filesystem."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:110
msgid "Share description."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:115
msgid ""
"Name or ID of shared filesystem type. Types defines some share filesystem"
" profiles that will be used for share creation."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:121
msgid "Defines if shared filesystem is public or private."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:127
msgid "A list of access rules that define access from IP to Share."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:133
msgid ""
"IP or other address information about guest that allowed to access to "
"Share."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:139
msgid "Type of access that should be provided to guest."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:146
msgid "Level of access that need to be provided for guest."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:159
msgid "The availability zone of shared filesystem."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:163
msgid "Share host."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:167
msgid "Export locations of share."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:171
msgid ""
"ID of server (VM, etc...) on host that is used for exporting network "
"file-system."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:176
msgid "Datetime when a share was created."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:180
msgid "Current share status."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:184
msgid "Share project ID."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:248
msgid ""
"Error during applying access rules to share \"{0}\". The root cause of "
"the problem is the following: {1}."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:254
msgid "Error during creation of share \"{0}\""
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:259
msgid "Unknown share_status during creation of share \"{0}\""
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:280
msgid "Error during deleting share \"{0}\"."
msgstr ""

#: heat/engine/resources/openstack/manila/share.py:285
msgid "Unknown status during deleting share \"{0}\""
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:49
msgid "Name of the share network."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:54
msgid "Neutron network id."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:60
msgid "Neutron subnet id."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:66
msgid "Nova network id."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:72
msgid "Share network description."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:77
msgid "A list of security services IDs or names."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:88
msgid "VLAN ID for VLAN networks or tunnel-id for GRE/VXLAN networks."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:93
msgid "CIDR of subnet."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:97
msgid "Version of IP address."
msgstr ""

#: heat/engine/resources/openstack/manila/share_network.py:101
msgid "The physical mechanism by which the virtual network is implemented."
msgstr ""

#: heat/engine/resources/openstack/manila/share_type.py:44
msgid "Name of the share type."
msgstr ""

#: heat/engine/resources/openstack/manila/share_type.py:49
msgid "Defines if share type is accessible to the public."
msgstr ""

#: heat/engine/resources/openstack/manila/share_type.py:54
msgid ""
"Required extra specification. Defines if share drivers handles share "
"servers."
msgstr ""

#: heat/engine/resources/openstack/manila/share_type.py:60
msgid "Extra specs key-value pairs defined for share type."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:54
msgid "Name of the cron trigger."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:58
msgid "Cron expression."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:66
msgid "Workflow to execute."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:71
msgid "Name of the workflow."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:75
msgid "Input values for the workflow."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:81
msgid "Time of the first execution in format \"YYYY-MM-DD HH:MM\"."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:85
msgid "Remaining executions."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:91
msgid "Time of the next execution in format \"YYYY-MM-DD HH:MM:SS\"."
msgstr ""

#: heat/engine/resources/openstack/mistral/cron_trigger.py:95
msgid "Number of remaining executions."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:86
msgid "Workflow name."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:90
msgid "Workflow type."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:99
msgid ""
"Defines the method in which the request body for signaling a workflow "
"would be parsed. In case this property is set to True, the body would be "
"parsed as a simple json where each key is a workflow input, in other "
"cases body would be parsed expecting a specific json format with two "
"keys: \"input\" and \"params\""
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:110
msgid "Workflow description."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:115
msgid "Dictionary which contains input for workflow."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:120
msgid ""
"Any data structure arbitrarily containing YAQL expressions that defines "
"workflow output. May be nested."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:127
msgid ""
"Workflow additional parameters. If Workflow is reverse typed, params "
"requires 'task_name', which defines initial task."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:133
msgid "Default settings for some of task attributes defined at workflow level."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:140
#: heat/engine/resources/openstack/mistral/workflow.py:231
msgid "List of tasks which will run after the task has completed successfully."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:145
#: heat/engine/resources/openstack/mistral/workflow.py:236
msgid "List of tasks which will run after the task has completed with an error."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:150
#: heat/engine/resources/openstack/mistral/workflow.py:241
msgid ""
"List of tasks which will run after the task has completed regardless of "
"whether it is successful or not."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:156
#: heat/engine/resources/openstack/mistral/workflow.py:261
msgid ""
"List of tasks which should be executed before this task. Used only in "
"reverse workflows."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:161
#: heat/engine/resources/openstack/mistral/workflow.py:266
msgid "Defines a pattern how task should be repeated in case of an error."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:166
#: heat/engine/resources/openstack/mistral/workflow.py:272
msgid ""
"Defines a delay in seconds that Mistral Engine should wait before "
"starting a task."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:171
#: heat/engine/resources/openstack/mistral/workflow.py:278
msgid ""
"Defines a delay in seconds that Mistral Engine should wait after a task "
"has completed before starting next tasks defined in on-success, on-error "
"or on-complete."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:178
msgid ""
"Defines whether Mistral Engine should put the workflow on hold or not "
"before starting a task"
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:183
#: heat/engine/resources/openstack/mistral/workflow.py:293
msgid ""
"Defines a period of time in seconds after which a task will be failed "
"automatically by engine if hasn't completed."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:192
msgid "Dictionary containing workflow tasks."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:198
msgid "Task name."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:203
msgid "Task description."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:207
msgid "Actual input parameter values of the task."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:211
msgid ""
"Name of the action associated with the task. Either action or workflow "
"may be defined in the task."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:217
msgid ""
"Name of the workflow associated with the task. Can be defined by "
"intrinsic function get_resource or by name of the referenced workflow, "
"i.e. { workflow: wf_name } or { workflow: { get_resource: wf_name }}. "
"Either action or workflow may be defined in the task."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:226
msgid "Dictionary of variables to publish to the workflow context."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:247
msgid ""
"Dictionary-like section defining task policies that influence how Mistral"
" Engine runs tasks. Must satisfy Mistral DSL v2."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:253
msgid "Add needed policies directly to the task, Policy keyword is not needed"
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:286
msgid ""
"Defines whether Mistral Engine should put the workflow on hold or not "
"before starting a task."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:300
msgid ""
"If configured, it allows to run action or workflow associated with a task"
" multiple times on a provided list of items."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:307
msgid "Allowing not to store action results after task completion."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:313
msgid "It defines an executor to which task action should be sent to."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:319
msgid ""
"Allows to synchronize multiple parallel workflow branches and aggregate "
"their data. Valid inputs: all - the task will run only if all upstream "
"tasks are completed. Any numeric value - then the task will run once at "
"least this number of upstream tasks are completed and corresponding "
"conditions have triggered."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:338
msgid "A dictionary which contains name and input of the workflow."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:342
msgid ""
"A signed url to create executions for workflows specified in Workflow "
"resource."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:347
msgid ""
"List of workflows' executions, each of them is a dictionary with "
"information about execution. Each dictionary returns values for next "
"keys: id, workflow_name, created_at, updated_at, state for current "
"execution state, input, output."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:373
#, python-format
msgid "Input in signal data must be a map, find a %s"
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:376
#: heat/engine/resources/openstack/mistral/workflow.py:383
#: heat/engine/resources/openstack/mistral/workflow.py:389
msgid "Signal data error"
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:381
#, python-format
msgid "Unknown input %s"
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:386
#, python-format
msgid "Params must be a map, find a %s"
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:398
#: heat/engine/resources/openstack/mistral/workflow.py:425
msgid "Mistral resource validation error"
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:404
msgid "'task_name' is not assigned in 'params' in case of reverse type workflow."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:418
#, python-format
msgid ""
"task %(task)s contains property 'requires' in case of direct workflow. "
"Only reverse workflows can contain property 'requires'."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:438
#, python-format
msgid "Property %(policies)s and %(item)s cannot be used both at one time."
msgstr ""

#: heat/engine/resources/openstack/mistral/workflow.py:457
#, python-format
msgid "No such workflow %s"
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:61
msgid "Name of the alarm. By default, physical resource name is used."
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:67
msgid "Description of the alarm."
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:72
msgid "Expression of the alarm to evaluate."
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:78
msgid ""
"The metric dimensions to match to the alarm dimensions. One or more "
"dimension key names separated by a comma."
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:92
msgid "The notification methods to use when an alarm state is OK."
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:96
#: heat/engine/resources/openstack/monasca/alarm_definition.py:108
#: heat/engine/resources/openstack/monasca/alarm_definition.py:121
msgid "Monasca notification"
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:104
msgid "The notification methods to use when an alarm state is ALARM."
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:116
msgid "The notification methods to use when an alarm state is UNDETERMINED."
msgstr ""

#: heat/engine/resources/openstack/monasca/alarm_definition.py:129
msgid "Whether to enable the actions or not."
msgstr ""

#: heat/engine/resources/openstack/monasca/notification.py:54
msgid "Name of the notification. By default, physical resource name is used."
msgstr ""

#: heat/engine/resources/openstack/monasca/notification.py:60
msgid "Type of the notification."
msgstr ""

#: heat/engine/resources/openstack/monasca/notification.py:69
msgid ""
"Address of the notification. It could be a valid email address, url or "
"service key based on notification type."
msgstr ""

#: heat/engine/resources/openstack/neutron/extraroute.py:31
msgid ""
"The resource OS::Neutron::ExtraRoute is not supported, use at your own "
"risk."
msgstr ""

#: heat/engine/resources/openstack/neutron/extraroute.py:43
msgid "The router id."
msgstr ""

#: heat/engine/resources/openstack/neutron/extraroute.py:51
msgid "Network in CIDR notation."
msgstr ""

#: heat/engine/resources/openstack/neutron/extraroute.py:55
msgid "Nexthop IP address."
msgstr ""

#: heat/engine/resources/openstack/neutron/extraroute.py:87
msgid "Route duplicates an existing route."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:46
#: heat/engine/resources/openstack/neutron/firewall.py:90
msgid "Name for the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:51
msgid "Description for the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:56
msgid ""
"Administrative state of the firewall. If false (down), firewall does not "
"forward packets and will drop all traffic to/from VMs behind the "
"firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:64
msgid "The ID of the firewall policy that this firewall is associated with."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:71
#: heat/engine/resources/openstack/neutron/net.py:48
msgid ""
"Extra parameters to include in the request. Parameters are often specific"
" to installed hardware or extensions."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:79
msgid ""
"Whether this firewall should be shared across all tenants. NOTE: The "
"default policy setting in Neutron restricts usage of this property to "
"administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:94
msgid "Description of the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:98
msgid "The administrative state of the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:102
msgid "Unique identifier of the firewall policy used to create the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:107
msgid "Shared status of this firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:111
msgid "The status of the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:115
#: heat/engine/resources/openstack/neutron/firewall.py:414
msgid "Id of the tenant owning the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:169
#: heat/engine/resources/openstack/neutron/firewall.py:203
msgid "Name for the firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:174
msgid "Description for the firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:179
msgid "Whether this policy should be shared across all tenants."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:185
msgid ""
"Whether this policy should be audited. When set to True, each time the "
"firewall policy or the associated firewall rules are changed, this "
"attribute will be set to False and will have to be explicitly set to True"
" through an update operation."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:195
msgid "An ordered list of firewall rules to apply to the firewall."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:207
msgid "Description of the firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:211
msgid "List of firewall rules in this firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:215
msgid "Shared status of this firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:219
msgid "Audit status of this firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:223
msgid "Id of the tenant owning the firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:284
#: heat/engine/resources/openstack/neutron/firewall.py:361
msgid "Name for the firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:289
msgid "Description for the firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:294
msgid "Whether this rule should be shared across all tenants."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:300
msgid "Protocol for the firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:309
msgid "Internet protocol version."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:318
msgid "Source IP address or CIDR."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:326
msgid "Destination IP address or CIDR."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:334
msgid "Source port number or a range."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:339
msgid "Destination port number or a range."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:344
msgid "Action to be performed on the traffic matching the rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:353
msgid "Whether this rule should be enabled."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:365
msgid "Description of the firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:369
msgid ""
"Unique identifier of the firewall policy to which this firewall rule "
"belongs."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:374
msgid "Shared status of this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:378
msgid "Protocol value for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:382
msgid "Ip_version for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:386
msgid "Source ip_address for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:390
msgid "Destination ip_address for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:394
msgid "Source port range for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:398
msgid "Destination port range for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:402
msgid "Allow or deny action for this firewall rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:406
msgid "Indicates whether this firewall rule is enabled or not."
msgstr ""

#: heat/engine/resources/openstack/neutron/firewall.py:410
msgid "Position of the rule within the firewall policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:61
msgid "Network to allocate floating IP from."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:70
msgid ""
"Extra parameters to include in the \"floatingip\" object in the creation "
"request. Parameters are often specific to installed hardware or "
"extensions."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:77
#: heat/engine/resources/openstack/neutron/floatingip.py:263
msgid ""
"ID of an existing port with at least one IP address to associate with "
"this floating IP."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:86
#: heat/engine/resources/openstack/neutron/floatingip.py:273
msgid "IP address to use if the port has multiple addresses."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:94
msgid ""
"IP address of the floating IP. NOTE: The default policy setting in "
"Neutron restricts usage of this property to administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:106
msgid "ID of the router used as gateway, set when associated with a port."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:111
msgid "The tenant owning this floating IP."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:115
msgid "ID of the network in which this IP is allocated."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:119
msgid "IP address of the associated port, if specified."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:123
msgid "The allocated address of this IP."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:127
msgid "ID of the port associated with this IP."
msgstr ""

#: heat/engine/resources/openstack/neutron/floatingip.py:257
msgid "ID of the floating IP to associate."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:51
#: heat/engine/resources/openstack/neutron/loadbalancer.py:110
msgid "The minimum time in seconds between regular connections of the member."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:58
#: heat/engine/resources/openstack/neutron/loadbalancer.py:135
msgid "One of predefined health monitor types."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:66
#: heat/engine/resources/openstack/neutron/loadbalancer.py:125
msgid ""
"Number of permissible connection failures before changing the member "
"status to INACTIVE."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:73
#: heat/engine/resources/openstack/neutron/loadbalancer.py:130
msgid ""
"Maximum number of seconds for a monitor to wait for a connection to be "
"established before it times out."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:80
msgid "The administrative state of the health monitor."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:86
#: heat/engine/resources/openstack/neutron/loadbalancer.py:120
msgid "The HTTP method used for requests by the monitor of type HTTP."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:92
#: heat/engine/resources/openstack/neutron/loadbalancer.py:115
msgid ""
"The list of HTTP status codes expected in response from the member to "
"declare it healthy."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:98
#: heat/engine/resources/openstack/neutron/loadbalancer.py:139
msgid ""
"The HTTP path used in the HTTP request used by the monitor to test a "
"member health."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:106
msgid "The administrative state of this health monitor."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:144
msgid "Tenant owning the health monitor."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:215
msgid "Protocol for balancing."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:238
#: heat/engine/resources/openstack/neutron/loadbalancer.py:367
msgid ""
"The subnet for the port on which the members of the pool will be "
"connected."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:248
#: heat/engine/resources/openstack/neutron/loadbalancer.py:372
msgid "The algorithm used to distribute load between the members of the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:259
#: heat/engine/resources/openstack/neutron/loadbalancer.py:359
msgid "Name of the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:263
#: heat/engine/resources/openstack/neutron/loadbalancer.py:377
msgid "Description of the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:268
#: heat/engine/resources/openstack/neutron/loadbalancer.py:355
msgid "The administrative state of this pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:274
msgid "LBaaS provider to implement this load balancer instance."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:282
msgid "IP address and port of the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:286
msgid "Name of the vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:290
msgid "Description of the vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:294
msgid "Subnet of the vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:301
msgid "IP address of the vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:308
msgid "The maximum number of connections per second allowed for the vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:313
msgid ""
"TCP port on which to listen for client traffic that is associated with "
"the vip address."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:319
msgid "Configuration of session persistence."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:323
msgid "Method of implementation of session persistence feature."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:332
msgid "Name of the cookie, required if type is APP_COOKIE."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:339
msgid "The administrative state of this vip."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:347
msgid "List of health monitors associated with the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:363
msgid "Protocol to balance."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:381
msgid "Tenant owning the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:385
msgid "Vip associated with the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:389
msgid "Provider implementing this load balancer instance."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:419
#: heat/tests/openstack/neutron/test_neutron_loadbalancer.py:615
msgid ""
"Property cookie_name is required, when session_persistence type is set to"
" APP_COOKIE."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:480
msgid "error in vip"
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:483
msgid "Pool creation failed due to vip"
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:487
msgid "error in pool"
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:491
msgid "Pool creation failed"
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:579
#: heat/engine/resources/openstack/neutron/loadbalancer.py:633
#: heat/engine/resources/openstack/neutron/loadbalancer.py:694
msgid "The ID of the load balancing pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:585
msgid "IP address of the pool member on the pool network."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:593
#: heat/engine/resources/openstack/neutron/loadbalancer.py:637
msgid "TCP port on which the pool member listens for requests or connections."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:602
msgid "Weight of pool member in the pool (default to 1)."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:610
msgid "The administrative state of the pool member."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:617
msgid "The administrative state of this pool member."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:621
msgid "Tenant owning the pool member."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:625
msgid "Weight of the pool member in the pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:629
msgid "IP address of the pool member."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:700
msgid "Port number on which the servers are running on the members."
msgstr ""

#: heat/engine/resources/openstack/neutron/loadbalancer.py:708
msgid "The list of Nova server IDs load balanced."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:42
#: heat/engine/resources/openstack/neutron/metering.py:59
msgid "Name of the metering label."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:46
#: heat/engine/resources/openstack/neutron/metering.py:63
msgid "Description of the metering label."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:50
msgid "Whether the metering label should be shared across all tenants."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:67
msgid "Shared status of the metering label."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:117
#: heat/engine/resources/openstack/neutron/metering.py:153
msgid "The metering label ID to associate with this metering rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:122
msgid "Indicates remote IP prefix to be associated with this metering rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:128
msgid "The direction in which metering rule is applied, either ingress or egress."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:136
msgid ""
"Specify whether the remote_ip_prefix will be excluded or not from traffic"
" counters of the metering label. For example to not count the traffic of "
"a specific IP address of a range."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:145
msgid "The direction in which metering rule is applied."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:149
msgid "Exclude state for cidr."
msgstr ""

#: heat/engine/resources/openstack/neutron/metering.py:157
msgid "CIDR to be associated with this metering rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:42
msgid ""
"A string specifying a symbolic name for the network, which is not "
"required to be unique."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:55
msgid "A boolean value specifying the administrative status of the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:62
msgid ""
"The ID of the tenant which will own the network. Only administrative "
"users can set the tenant identifier; this cannot be changed using "
"authorization policies."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:68
msgid ""
"Whether this network should be shared across all tenants. Note that the "
"default policy setting restricts usage of this attribute to "
"administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:76
msgid ""
"The IDs of the DHCP agent to schedule the network. Note that the default "
"policy setting in Neutron restricts usage of this property to "
"administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:83
msgid ""
"Flag to enable/disable port security on the network. It provides the "
"default value for the attribute of the ports created on this network"
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:91
msgid "The name or ID of QoS policy to attach to this network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:102
#: heat/engine/resources/openstack/neutron/provider_net.py:79
msgid "The status of the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:106
msgid "The name of the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:110
#: heat/engine/resources/openstack/neutron/provider_net.py:83
msgid "Subnets of this network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:114
msgid "The administrative status of the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:118
msgid "The tenant owning this network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:122
msgid "Port security enabled of the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:127
msgid "The maximum transmission unit size(in bytes) for the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/net.py:132
msgid "The QoS policy ID attached to this network."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:60
msgid "The name of the network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:65
msgid "Device info for this network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:74
msgid "The device id for the network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:80
msgid "The interface name for the network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:89
msgid "Connection info for this network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:112
msgid "The internal network to connect on the network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:123
msgid "L2 segmentation strategy on the external side of the network gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:132
msgid ""
"The id for L2 segment on the external side of the network gateway. Must "
"be specified when using vlan."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:145
msgid "A boolean value of default flag."
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:174
msgid "segmentation_id must be specified for using vlan"
msgstr ""

#: heat/engine/resources/openstack/neutron/network_gateway.py:178
msgid "segmentation_id cannot be specified except 0 for using flat"
msgstr ""

#: heat/engine/resources/openstack/neutron/neutron.py:110
msgid "Resource is not built"
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:79
msgid "A symbolic name for this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:101
#, python-format
msgid ""
"Network this port belongs to. If you plan to use current port to assign "
"Floating IP, you should specify %(fixed_ips)s with %(subnet)s.  Note if "
"this changes to a different network update, the port will be replaced"
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:115
msgid "Device ID of this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:120
msgid ""
"Name of the network owning the port. The value is typically "
"network:floatingip or network:router_interface or network:dhcp"
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:127
msgid "Desired IPs for this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:149
msgid "Subnet in which to allocate the IP address for this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:158
msgid "IP address desired in the subnet for this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:169
msgid "Security group IDs to associate with this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:174
msgid ""
"Policy on how to respond to a stack-update for this resource. "
"REPLACE_ALWAYS will replace the port regardless of any property changes. "
"AUTO will update the existing port for any changed update-allowed "
"property."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:191
msgid ""
"Extra parameters to include in the \"port\" object in the creation "
"request."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:197
#: heat/engine/resources/openstack/neutron/port.py:269
msgid "The administrative state of this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:203
msgid "MAC address to give to this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:210
msgid "Additional MAC/IP address pairs allowed to pass through the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:217
msgid "MAC address to allow through this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:224
msgid "IP address to allow through this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:235
msgid ""
"The vnic type to be bound on the neutron port. To support SR-IOV PCI "
"passthrough networking, you can request that the neutron port to be "
"realized as normal (virtual nic), direct (pci passthrough), or macvtap "
"(virtual interface with a tap-like software interface). Note that this "
"only works for Neutron deployments that support the bindings extension."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:250
msgid ""
"Flag to enable/disable port security on the port. When disable this "
"feature(set it to False), there will be no packages filtering, like "
"security-group and address-pairs."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:258
msgid "The name or ID of QoS policy to attach to this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:273
msgid "Unique identifier for the device."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:277
msgid "Name of the network owning the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:281
msgid "Fixed IP addresses."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:285
msgid "MAC address of the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:289
msgid "Friendly name of the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:293
msgid "Unique identifier for the network owning the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:297
msgid "A list of security groups for the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:301
msgid "The status of the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:305
msgid "Tenant owning the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:309
msgid "Additional MAC/IP address pairs allowed to pass through a port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:314
msgid "A list of all subnet attributes for the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:318
msgid "Port security enabled of the port."
msgstr ""

#: heat/engine/resources/openstack/neutron/port.py:323
msgid "The QoS policy ID attached to this port."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:47
msgid "A string specifying the provider network type for the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:57
msgid "A string specifying physical network mapping for the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:64
msgid "A string specifying the segmentation id for the network."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:71
msgid "Whether this network should be shared across all tenants."
msgstr ""

#: heat/engine/resources/openstack/neutron/provider_net.py:98
msgid "segmentation_id not allowed for flat network type."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:52
msgid "The name for the QoS policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:58
msgid "The description for the QoS policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:63
msgid "Whether this QoS policy should be shared to other tenants."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:69
msgid "The owner tenant ID of this QoS policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:75
msgid "A list of all rules for the QoS policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:123
msgid "ID or name of the QoS policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:129
msgid "The owner tenant ID of this rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:166
msgid "Max bandwidth in kbps."
msgstr ""

#: heat/engine/resources/openstack/neutron/qos.py:175
msgid "Max burst bandwidth in kbps."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:60
msgid "The name of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:65
msgid "External network gateway configuration for a router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:69
msgid "ID or name of the external network for the gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:75
msgid ""
"Enables Source NAT on the router gateway. NOTE: The default policy "
"setting in Neutron restricts usage of this property to administrative "
"users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:85
msgid "Extra parameters to include in the creation request."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:91
msgid "The administrative state of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:97
msgid ""
"ID of the L3 agent. NOTE: The default policy setting in Neutron restricts"
" usage of this property to administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:114
msgid ""
"ID list of the L3 agent. User can specify multi-agents for highly "
"available router. NOTE: The default policy setting in Neutron restricts "
"usage of this property to administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:126
msgid ""
"Indicates whether or not to create a distributed router. NOTE: The "
"default policy setting in Neutron restricts usage of this property to "
"administrative users only. This property can not be used in conjunction "
"with the L3 agent ID."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:134
msgid ""
"Indicates whether or not to create a highly available router. NOTE: The "
"default policy setting in Neutron restricts usage of this property to "
"administrative users only. And now neutron do not support distributed and"
" ha at the same time."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:144
msgid "The status of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:148
msgid "Gateway network for the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:152
msgid "Friendly name of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:156
msgid "Administrative state of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:160
msgid "Tenant owning the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:198
msgid "Non HA routers can only have one L3 agent."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:299
msgid "The router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:307
#: heat/engine/resources/openstack/neutron/router.py:460
msgid "ID of the router."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:339
msgid "The subnet, either subnet or port should be specified."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:347
msgid "The port id, either subnet or port_id should be specified."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:364
msgid "The port, either subnet or port should be specified."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:442
msgid ""
"Use the `external_gateway_info` property in the router resource to set up"
" the gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/router.py:478
msgid "external network for the gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:47
msgid ""
"The direction in which the security group rule is applied. For a compute "
"instance, an ingress security group rule matches traffic that is incoming"
" (ingress) for that instance. An egress rule is applied to traffic "
"leaving the instance."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:59
msgid "Ethertype of the traffic."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:67
msgid ""
"The minimum port number in the range that is matched by the security "
"group rule. If the protocol is TCP or UDP, this value must be less than "
"or equal to the value of the port_range_max attribute. If the protocol is"
" ICMP, this value must be an ICMP type."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:78
msgid ""
"The maximum port number in the range that is matched by the security "
"group rule. The port_range_min attribute constrains the port_range_max "
"attribute. If the protocol is ICMP, this value must be an ICMP type."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:88
msgid ""
"The protocol that is matched by the security group rule. Valid values "
"include tcp, udp, and icmp."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:93
msgid "Whether to specify a remote group or a remote IP prefix."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:102
msgid ""
"The remote group ID to be associated with this security group rule. If no"
" value is specified then this rule will use this security group for the "
"remote_group_id. The remote mode parameter must be set to "
"\"remote_group_id\"."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:109
msgid ""
"The remote IP prefix (CIDR) to be associated with this security group "
"rule."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:120
msgid ""
"A string specifying a symbolic name for the security group, which is not "
"required to be unique."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:131
msgid "List of security group rules."
msgstr ""

#: heat/engine/resources/openstack/neutron/security_group.py:149
msgid "Security groups cannot be assigned the name \"default\"."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:85
msgid "The ID of the attached network."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:94
msgid "The name or ID of the subnet pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:102
msgid "Prefix length for subnet allocation from subnet pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:108
msgid "The CIDR."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:115
msgid "Extra parameters to include in the request."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:121
msgid "The name of the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:126
msgid "The IP version, which is 4 or 6."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:134
msgid "A specified set of DNS name servers to be used."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:140
msgid ""
"The gateway IP address. Set to any of [ null | ~ | \"\" ] to "
"create/update a subnet without a gateway. If omitted when creation, "
"neutron will assign the first free IP address within the subnet to the "
"gateway automatically. If remove this from template when update, the old "
"gateway IP address will be detached."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:150
msgid "Set to true if DHCP is enabled and false if DHCP is disabled."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:156
msgid "The start and end addresses for the allocation pools."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:180
msgid ""
"The ID of the tenant who owns the network. Only administrative users can "
"specify a tenant ID other than their own."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:208
msgid ""
"IPv6 RA (Router Advertisement) mode. dhcpv6-stateful, dhcpv6-stateless, "
"or slaac."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:218
msgid "IPv6 address mode. dhcpv6-stateful, dhcpv6-stateless, or slaac."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:230
msgid "Friendly name of the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:234
msgid "Parent network of the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:238
msgid "Tenant owning the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:242
msgid "Ip allocation pools and their ranges."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:246
msgid "Ip of the subnet's gateway."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:250
msgid "Additional routes for this subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:254
msgid "Ip version for the subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:258
msgid "CIDR block notation for this subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:262
msgid "List of dns nameservers."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:266
msgid "'true' if DHCP is enabled for this subnet; 'false' otherwise."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:310
msgid "ipv6_ra_mode and ipv6_address_mode are not supported for ipv4."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:314
msgid "When both ipv6_ra_mode and ipv6_address_mode are set, they must be equal."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnet.py:321
#, python-format
msgid "Gateway IP address \"%(gateway)s\" is in invalid format."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:47
msgid "Name of the subnet pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:52
msgid "List of subnet prefixes to assign."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:65
msgid "An address scope ID to assign to the subnet pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:73
msgid ""
"A per-tenant quota on the prefix space that can be allocated from the "
"subnet pool for tenant subnets."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:80
msgid ""
"The size of the prefix to allocate when the cidr or prefixlen attributes "
"are not specified while creating a subnet."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:88
msgid "Smallest prefix size that can be allocated from the subnet pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:95
msgid "Maximum prefix size that can be allocated from the subnet pool."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:102
msgid ""
"Whether this is default IPv4/IPv6 subnet pool.There can only be one "
"default subnet pool for each IP family.Note that the default policy "
"setting restricts administrative users to set this to True"
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:111
msgid ""
"The ID of the tenant who owns the subnet pool. Only administrative users "
"can specify a tenant ID other than their own."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:117
msgid ""
"Whether the subnet pool will be shared across all tenants.Note that the "
"default policy setting restricts usage of this attribute to "
"administrative users only."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:132
#, python-format
msgid "Illegal prefix bounds: %(key1)s=%(value1)s, %(key2)s=%(value2)s."
msgstr ""

#: heat/engine/resources/openstack/neutron/subnetpool.py:163
#, python-format
msgid ""
"Property %(key)s updated value %(new)s should be superset of existing "
"value %(old)s."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:46
msgid "Name for the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:51
msgid "Description for the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:56
msgid "Administrative state for the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:77
msgid "Subnet in which the vpn service will be created."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:86
msgid ""
"Unique identifier for the router to which the vpn service will be "
"inserted."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:93
#, python-format
msgid "Use property %s"
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:103
msgid "The router to which the vpn service will be inserted."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:114
msgid "The administrative state of the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:118
msgid "The description of the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:122
msgid "The name of the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:126
msgid "The unique identifier of the router to which the vpn service was inserted."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:131
msgid "The status of the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:135
msgid "The unique identifier of the subnet in which the vpn service was created."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:140
msgid "The unique identifier of the tenant owning the vpn service."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:224
msgid "Name for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:229
msgid "Description for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:234
msgid "Remote branch router public IPv4 address or IPv6 address or FQDN."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:240
msgid "Remote branch router identity."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:245
msgid "Remote subnet(s) in CIDR format."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:256
msgid "Maximum transmission unit size (in bytes) for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:262
msgid "Dead Peer Detection protocol configuration for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:267
msgid "Controls DPD protocol mode."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:277
msgid "Number of seconds for the DPD delay."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:282
msgid "Number of seconds for the DPD timeout."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:289
msgid "Pre-shared key string for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:294
msgid "Initiator state in lowercase for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:302
msgid "Administrative state for the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:308
msgid ""
"Unique identifier for the ike policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:314
msgid ""
"Unique identifier for the ipsec policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:320
msgid ""
"Unique identifier for the vpn service associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:328
msgid "The administrative state of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:332
msgid "The authentication mode of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:336
msgid "The description of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:340
msgid ""
"The dead peer detection protocol configuration of the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:345
msgid ""
"The unique identifier of ike policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:350
msgid "The initiator of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:354
msgid ""
"The unique identifier of ipsec policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:359
msgid ""
"The maximum transmission unit size (in bytes) of the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:364
msgid "The name of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:368
msgid "The remote branch router public IPv4 address or IPv6 address or FQDN."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:373
msgid "The remote subnet(s) in CIDR format of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:378
msgid "The remote branch router identity of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:383
msgid "The pre-shared key string of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:387
msgid "The route mode of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:391
msgid "The status of the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:395
msgid "The unique identifier of the tenant owning the ipsec site connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:400
msgid ""
"The unique identifier of vpn service associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:464
msgid "Name for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:469
msgid "Description for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:474
msgid "Authentication hash algorithm for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:482
msgid "Encryption algorithm for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:491
msgid "Negotiation mode for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:499
msgid "Safety assessment lifetime configuration for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:503
#: heat/engine/resources/openstack/neutron/vpnservice.py:680
msgid "Safety assessment lifetime units."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:511
#: heat/engine/resources/openstack/neutron/vpnservice.py:689
msgid "Safety assessment lifetime value in specified units."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:519
msgid "Perfect forward secrecy in lowercase for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:527
msgid "Version for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:537
msgid "The authentication hash algorithm used by the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:541
msgid "The description of the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:545
msgid "The encryption algorithm used by the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:549
msgid "The version of the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:553
msgid "The safety assessment lifetime configuration for the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:558
msgid "The name of the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:562
msgid "The perfect forward secrecy of the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:566
msgid "The negotiation mode of the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:570
msgid "The unique identifier of the tenant owning the ike policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:632
msgid "Name for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:637
msgid "Description for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:642
msgid "Transform protocol for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:650
msgid "Encapsulation mode for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:658
msgid "Authentication hash algorithm for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:666
msgid "Encryption algorithm for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:675
msgid "Safety assessment lifetime configuration for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:697
msgid "Perfect forward secrecy for the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:707
msgid "The authentication hash algorithm of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:711
msgid "The description of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:715
msgid "The encapsulation mode of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:719
msgid "The encryption algorithm of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:723
msgid "The safety assessment lifetime configuration of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:728
msgid "The name of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:732
msgid "The perfect forward secrecy of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:736
msgid "The unique identifier of the tenant owning the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/neutron/vpnservice.py:740
msgid "The transform protocol of the ipsec policy."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:73
msgid "Memory in MB for the flavor."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:78
msgid "Number of VCPUs for the flavor."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:83
msgid ""
"Size of local disk in GB. The \"0\" size is a special case that uses the "
"native base image size as the size of the ephemeral root volume."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:90
msgid "Swap space in MB."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:95
msgid "Size of a secondary ephemeral data disk in GB."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:100
msgid "RX/TX factor."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:105
msgid "Key/Value pairs to extend the capabilities of the flavor."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:110
msgid ""
"Scope of flavor accessibility. Public or private.Default value is True, "
"means public, shared across all projects."
msgstr ""

#: heat/engine/resources/openstack/nova/flavor.py:121
msgid "Whether the flavor is shared across all projects."
msgstr ""

#: heat/engine/resources/openstack/nova/floatingip.py:45
msgid "Allocate a floating IP from a given floating IP pool."
msgstr ""

#: heat/engine/resources/openstack/nova/floatingip.py:52
msgid "Pool from which floating IP is allocated."
msgstr ""

#: heat/engine/resources/openstack/nova/floatingip.py:56
msgid "Allocated floating IP address."
msgstr ""

#: heat/engine/resources/openstack/nova/floatingip.py:112
msgid "Server to assign floating IP to."
msgstr ""

#: heat/engine/resources/openstack/nova/floatingip.py:121
msgid "ID of the floating IP to assign to the server."
msgstr ""

#: heat/engine/resources/openstack/nova/host_aggregate.py:52
msgid "Name for the aggregate."
msgstr ""

#: heat/engine/resources/openstack/nova/host_aggregate.py:58
msgid "Name for the availability zone."
msgstr ""

#: heat/engine/resources/openstack/nova/host_aggregate.py:64
msgid "List of hosts to join aggregate."
msgstr ""

#: heat/engine/resources/openstack/nova/host_aggregate.py:73
msgid "Arbitrary key/value metadata to store information for aggregate."
msgstr ""

#: heat/engine/resources/openstack/nova/keypair.py:55
msgid "The name of the key pair."
msgstr ""

#: heat/engine/resources/openstack/nova/keypair.py:63
msgid ""
"True if the system should remember a generated private key; False "
"otherwise."
msgstr ""

#: heat/engine/resources/openstack/nova/keypair.py:69
msgid ""
"The optional public key. This allows users to supply the public key from "
"a pre-existing key pair. If not supplied, a new key pair will be "
"generated."
msgstr ""

#: heat/engine/resources/openstack/nova/keypair.py:77
msgid "The public key."
msgstr ""

#: heat/engine/resources/openstack/nova/keypair.py:81
msgid "The private key if it has been saved."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:130
msgid "Server name."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:135
msgid "The ID or name of the image to boot with."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:143
msgid "Block device mappings for this server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:149
#: heat/engine/resources/openstack/nova/server.py:193
msgid ""
"A device name where the volume will be attached in the system at "
"/dev/device_name. This value is typically vda."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:156
msgid ""
"The ID of the volume to boot from. Only one of volume_id or snapshot_id "
"should be provided."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:173
msgid ""
"The size of the volume, in GB. It is safe to leave this blank and have "
"the Compute service infer the size."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:179
#: heat/engine/resources/openstack/nova/server.py:253
msgid ""
"Indicate whether the volume should be deleted when the server is "
"terminated."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:187
msgid "Block device mappings v2 for this server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:199
msgid "The volume_id can be boot or non-boot device to the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:207
msgid "The ID of the image to create a volume from."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:222
msgid "The size of the swap, in MB."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:226
msgid ""
"Device type: at the moment we can make distinction only between disk and "
"cdrom."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:234
msgid ""
"Bus of the device: hypervisor driver chooses a suitable default if "
"omitted."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:244
msgid "Integer used for ordering the boot disks."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:248
msgid ""
"Size of the block device in GB. If it is omitted, hypervisor driver "
"calculates size."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:262
msgid "The ID or name of the flavor to boot onto."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:271
msgid ""
"Policy on how to apply a flavor update; either by requesting a server "
"resize or by replacing the entire server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:281
msgid ""
"Policy on how to apply an image-id update; either by requesting a server "
"rebuild or by replacing the entire server"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:292
msgid "Name of keypair to inject into the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:299
msgid "Name of the administrative user to use on the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:303
msgid ""
"The default cloud-init user set up for each image (e.g. \"ubuntu\" for "
"Ubuntu 12.04+, \"fedora\" for Fedora 19+ and \"cloud-user\" for "
"CentOS/RHEL 6.5)."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:315
msgid "Name of the availability zone for server placement."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:319
msgid ""
"List of security group names or IDs. Cannot be used if neutron ports are "
"associated with this server; assign security groups to the ports instead."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:326
msgid ""
"An ordered list of nics to be added to this server, with information "
"about connected networks, fixed ips, port etc."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:333
msgid "ID of network to create a port on."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:349
msgid "Name or ID of network to create a port on."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:356
msgid "Fixed IP address to specify for the port created on the requested network."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:364
msgid "ID of an existing port to associate with this server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:372
msgid ""
"Dict, which has expand properties for port. Used only if port property is"
" not specified for creating port."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:380
msgid ""
"Subnet in which to allocate the IP address for port. Used for creating "
"port, based on derived properties. If subnet is specified, network "
"property becomes optional."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:392
msgid "Arbitrary key-value pairs specified by the client to help boot a server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:397
msgid ""
"Arbitrary key/value metadata to store for this server. Both keys and "
"values must be 255 characters or less.  Non-string values will be "
"serialized to JSON (and the serialized string must be 255 characters or "
"less)."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:405
msgid ""
"How the user_data should be formatted for the server. For HEAT_CFNTOOLS, "
"the user_data is bundled as part of the heat-cfntools cloud-init boot "
"configuration data. For RAW the user_data is passed to Nova unmodified. "
"For SOFTWARE_CONFIG user_data is bundled as part of the software config "
"data, and metadata is derived from any associated SoftwareDeployment "
"resources."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:419
msgid ""
"How the server should receive the metadata required for software "
"configuration. POLL_SERVER_CFN will allow calls to the cfn API action "
"DescribeStackResource authenticated with the provided keypair. "
"POLL_SERVER_HEAT will allow calls to the Heat API resource-show using the"
" provided keystone credentials. POLL_TEMP_URL will create and populate a "
"Swift TempURL with metadata for polling. ZAQAR_MESSAGE will create a "
"dedicated zaqar queue and post the metadata for polling."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:436
msgid "User data script to be executed by cloud-init."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:441
msgid "A UUID for the set of servers being requested."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:445
msgid "If True, enable config drive on the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:449
msgid "Control how the disk is partitioned when the server is created."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:457
msgid ""
"A map of files to create/overwrite on the server upon boot. Keys are file"
" names and values are the file contents."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:463
msgid "The administrator password for the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:470
msgid "Name of the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:474
msgid ""
"A dict of all network addresses with corresponding port_id. Each network "
"will have two keys in dict, they are network name and network id. The "
"port ID may be obtained through the following expression: \"{get_attr: "
"[<server>, addresses, <network name_or_id>, 0, port]}\"."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:483
msgid ""
"A dict of assigned network addresses of the form: {\"public\": [ip1, "
"ip2...], \"private\": [ip3, ip4], \"public_uuid\": [ip1, ip2...], "
"\"private_uuid\": [ip3, ip4]}. Each network will have two keys in dict, "
"they are network name and network id."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:491
msgid ""
"Convenience attribute to fetch the first assigned network address, or an "
"empty string if nothing has been assigned at this time. Result may not be"
" predictable if the server has addresses from more than one network."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:498
msgid ""
"Use the networks attribute instead of first_address. For example: "
"\"{get_attr: [<server name>, networks, <network name>, 0]}\""
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:509
msgid "AWS compatible instance name."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:513
msgid "The manually assigned alternative public IPv4 address of the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:518
msgid "The manually assigned alternative public IPv6 address of the server."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:523
msgid ""
"URLs of server's consoles. To get a specific console type, the requested "
"type can be specified as parameter to the get_attr function, e.g. "
"get_attr: [ <server>, console_urls, novnc ]. Currently supported types "
"are novnc, xvpvnc, spice-html5, rdp-html5, serial."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1192
#, python-format
msgid "Either volume_id or snapshot_id must be specified for device mapping %s"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1217
msgid "Either volume_id, snapshot_id, image_id or swap_size must be specified."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1232
msgid ""
"deployments key not allowed in resource metadata with user_data_format of"
" SOFTWARE_CONFIG"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1241
#, python-format
msgid "Neither image nor bootable volume is specified for instance %s"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1272
#, python-format
msgid ""
"Instance metadata must not contain greater than %s entries.  This is the "
"maximum number allowed by your service provider"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1281
#, python-format
msgid "The personality property may not contain greater than %s entries."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1287
#, python-format
msgid ""
"The contents of personality file \"%(path)s\" is larger than the maximum "
"allowed personality file size (%(max_size)s bytes)."
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1385
#: heat/engine/resources/openstack/nova/server.py:1428
#, python-format
msgid "Failed to find server %s"
msgstr ""

#: heat/engine/resources/openstack/nova/server.py:1409
#, python-format
msgid "Suspend of server %s failed"
msgstr ""

#: heat/engine/resources/openstack/nova/server_group.py:40
msgid "Server Group name."
msgstr ""

#: heat/engine/resources/openstack/nova/server_group.py:44
msgid "A list of string policies to apply. Defaults to anti-affinity."
msgstr ""

#: heat/engine/resources/openstack/nova/server_network_mixin.py:40
#, python-format
msgid ""
"One of the properties \"%(id)s\", \"%(port_id)s\", \"%(uuid)s\" or "
"\"%(subnet)s\" should be set for the specified network of server "
"\"%(server)s\"."
msgstr ""

#: heat/engine/resources/openstack/nova/server_network_mixin.py:51
#, python-format
msgid ""
"Properties \"%(uuid)s\" and \"%(id)s\" are both set to the network "
"\"%(network)s\" for the server \"%(server)s\". The \"%(uuid)s\" property "
"is deprecated. Use only \"%(id)s\" property."
msgstr ""

#: heat/engine/resources/openstack/nova/server_network_mixin.py:81
#, python-format
msgid "Specified subnet %(subnet)s does not belongs to network %(network)s."
msgstr ""

#: heat/engine/resources/openstack/nova/server_network_mixin.py:88
#, python-format
msgid "%(server)s-port-%(number)s"
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:62
msgid "Hadoop cluster name."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:66
#: heat/engine/resources/openstack/sahara/templates.py:84
#: heat/engine/resources/openstack/sahara/templates.py:400
msgid "Plugin name."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:74
#: heat/engine/resources/openstack/sahara/templates.py:93
#: heat/engine/resources/openstack/sahara/templates.py:409
msgid "Version of Hadoop running on instances."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:79
msgid "ID of the Cluster Template used for Node Groups and configurations."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:85
msgid "Keypair added to instances to make them accessible for user."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:92
msgid "Name or UUID of the image used to boot Hadoop nodes."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:108
msgid "Default name or UUID of the image used to boot Hadoop nodes."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:116
#: heat/engine/resources/openstack/sahara/templates.py:423
msgid "Name or UUID of network."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:123
#: heat/engine/resources/openstack/sahara/templates.py:203
#: heat/engine/resources/openstack/sahara/templates.py:472
msgid "Configure most important configs automatically."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:128
#: heat/engine/resources/openstack/sahara/templates.py:209
#: heat/engine/resources/openstack/sahara/templates.py:477
msgid "List of manila shares to be mounted."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:134
#: heat/engine/resources/openstack/sahara/templates.py:215
#: heat/engine/resources/openstack/sahara/templates.py:483
msgid "Id of the manila share."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:139
#: heat/engine/resources/openstack/sahara/templates.py:220
#: heat/engine/resources/openstack/sahara/templates.py:488
msgid ""
"Local path on each cluster node on which to mount the share. Defaults to "
"'/mnt/{share_id}'."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:144
#: heat/engine/resources/openstack/sahara/templates.py:225
#: heat/engine/resources/openstack/sahara/templates.py:493
msgid "Governs permissions set in manila for the cluster ips."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:159
msgid "Cluster status."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:163
msgid "Cluster information."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:206
#, python-format
msgid ""
"%(img)s must be provided: Referenced cluster template %(tmpl)s has no "
"default_image_id defined."
msgstr ""

#: heat/engine/resources/openstack/sahara/cluster.py:278
#: heat/engine/resources/openstack/sahara/templates.py:566
#, python-format
msgid "%s must be provided"
msgstr ""

#: heat/engine/resources/openstack/sahara/data_source.py:53
msgid "Name of the data source."
msgstr ""

#: heat/engine/resources/openstack/sahara/data_source.py:58
msgid "Type of the data source."
msgstr ""

#: heat/engine/resources/openstack/sahara/data_source.py:67
msgid "URL for the data source."
msgstr ""

#: heat/engine/resources/openstack/sahara/data_source.py:73
msgid "Description of the data source."
msgstr ""

#: heat/engine/resources/openstack/sahara/data_source.py:79
#: heat/engine/resources/openstack/sahara/job_binary.py:67
msgid ""
"Credentials used for swift. Not required if sahara is configured to use "
"proxy users and delegated trusts for access."
msgstr ""

#: heat/engine/resources/openstack/sahara/data_source.py:85
msgid "Username for accessing the data source URL."
msgstr ""

#: heat/engine/resources/openstack/sahara/data_source.py:90
msgid "Password for accessing the data source URL."
msgstr ""

#: heat/engine/resources/openstack/sahara/image.py:40
msgid "ID or name of the image to register."
msgstr ""

#: heat/engine/resources/openstack/sahara/image.py:48
msgid "Username of privileged user in the image."
msgstr ""

#: heat/engine/resources/openstack/sahara/image.py:54
msgid "Description of the image."
msgstr ""

#: heat/engine/resources/openstack/sahara/image.py:60
msgid "Tags to add to the image."
msgstr ""

#: heat/engine/resources/openstack/sahara/job_binary.py:49
msgid "Name of the job binary."
msgstr ""

#: heat/engine/resources/openstack/sahara/job_binary.py:54
msgid ""
"URL for the job binary. Must be in the format swift://<container>/<path> "
"or internal-db://<uuid>"
msgstr ""

#: heat/engine/resources/openstack/sahara/job_binary.py:61
msgid "Description of the job binary."
msgstr ""

#: heat/engine/resources/openstack/sahara/job_binary.py:73
msgid "Username for accessing the job binary URL."
msgstr ""

#: heat/engine/resources/openstack/sahara/job_binary.py:78
msgid "Password for accessing the job binary URL."
msgstr ""

#: heat/engine/resources/openstack/sahara/job_binary.py:107
#, python-format
msgid "%s is not a valid job location."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:69
msgid "Name for the Sahara Node Group Template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:78
msgid "Description of the Node Group Template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:99
msgid "Name or ID Nova flavor for the nodes."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:108
msgid "Volumes per node."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:116
msgid "Size of the volumes, in GB."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:124
msgid "Type of the volume to create on Cinder backend."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:132
msgid "List of security group names or IDs to assign to this Node Group template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:141
msgid "Defines whether auto-assign security group to this Node Group template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:147
msgid "Availability zone to create servers in."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:152
msgid "Availability zone to create volumes in."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:157
msgid "List of processes to run on every node."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:169
msgid ""
"Name or UUID of the Neutron floating IP network or name of the Nova "
"floating ip pool to use. Should not be provided when used with Nova-"
"network that auto-assign floating IPs."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:177
msgid "Dictionary of node configurations."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:182
msgid "ID of the image to use for the template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:190
msgid ""
"Provide access to nodes using other nodes of the cluster as proxy "
"gateways."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:197
msgid "Create volumes on the same physical port as an instance."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:341
#, python-format
msgid ""
"Plugin %(plugin)s doesn't support the following node processes: "
"%(unsupported)s. Allowed processes are: %(allowed)s"
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:385
msgid "Name for the Sahara Cluster Template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:394
msgid "Description of the Sahara Group Template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:415
msgid "ID of the default image to use for the template."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:431
msgid "List of processes to enable anti-affinity for."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:439
msgid "Cluster configs dictionary."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:444
msgid "Node groups."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:450
msgid "Name of the Node group."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:455
msgid "Number of instances in the Node group."
msgstr ""

#: heat/engine/resources/openstack/sahara/templates.py:463
msgid "ID of the Node Group Template."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:63
msgid "The name or id of the Senlin profile."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:71
msgid "Name of the cluster. By default, physical resource name is used."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:76
msgid "Desired initial number of resources in cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:81
msgid "Minimum number of resources in the cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:89
msgid "Maximum number of resources in the cluster. -1 means unlimited."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:98
msgid "Metadata key-values defined for cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:102
msgid "The number of seconds to wait for the cluster actions."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:111
msgid "Cluster name."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:115
msgid "Cluster metadata."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:119
msgid "Desired capacity of the cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:123
msgid "Nodes list in the cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:127
msgid "Min size of the cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:131
msgid "Max size of the cluster."
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:186
#, python-format
msgid "%(min_size)s can not be greater than %(max_size)s"
msgstr ""

#: heat/engine/resources/openstack/senlin/cluster.py:194
#, python-format
msgid "%(desired_capacity)s must be between %(min_size)s and %(max_size)s"
msgstr ""

#: heat/engine/resources/openstack/senlin/profile.py:44
msgid "Name of the senlin profile. By default, physical resource name is used."
msgstr ""

#: heat/engine/resources/openstack/senlin/profile.py:50
msgid ""
"The spec template content for Senlin profile, should be either in YAML or"
" JSON format."
msgstr ""

#: heat/engine/resources/openstack/senlin/profile.py:56
msgid "Metadata key-values defined for profile."
msgstr ""

#: heat/engine/resources/openstack/senlin/profile.py:90
#, python-format
msgid "Failed to parse %(spec)s: %(ex)s"
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:49
msgid "Name for the container. If not specified, a unique name will be generated."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:54
msgid "Specify the ACL permissions on who can read objects in the container."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:59
msgid "Specify the ACL permissions on who can write objects to the container."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:64
msgid ""
"A map of user-defined meta data to associate with the container. Each key"
" in the map will set the header X-Container-Meta-{key} with the "
"corresponding value."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:71
msgid ""
"A map of user-defined meta data to associate with the account. Each key "
"in the map will set the header X-Account-Meta-{key} with the "
"corresponding value."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:78
msgid ""
"If True, delete any objects in the container when the container is "
"deleted. Otherwise, deleting a non-empty container will result in an "
"error."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:90
msgid "The host from the container URL."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:94
msgid "The URL of the container."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:98
msgid "The parent URL of the container."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:102
msgid "The number of objects stored in the container."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:106
msgid "The number of bytes stored in the container."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:110
msgid "A map containing all headers for the container."
msgstr ""

#: heat/engine/resources/openstack/swift/swift.py:194
#, python-format
msgid "Deleting non-empty container (%(id)s) when %(prop)s is False"
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:40
#: heat/engine/resources/openstack/trove/os_database.py:41
msgid ""
"The database instance was created, but heat failed to set up the "
"datastore. If a database instance is in the FAILED state, it should be "
"deleted and a new one should be created."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:44
#: heat/engine/resources/openstack/trove/os_database.py:45
msgid "The last operation for the database instance failed due to an error."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:71
msgid "Name of the cluster to create."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:78
#: heat/engine/resources/openstack/trove/os_database.py:102
msgid "Name of registered datastore type."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:86
#: heat/engine/resources/openstack/trove/os_database.py:109
msgid ""
"Name of the registered datastore version. It must exist for provided "
"datastore type. Defaults to using single active version. If several "
"active versions exist for provided datastore type, explicit value for "
"this parameter must be specified."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:96
msgid "List of database instances."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:103
msgid "Flavor of the instance."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:111
msgid "Size of the instance disk volume in GB."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:124
msgid "A list of instances ids."
msgstr ""

#: heat/engine/resources/openstack/trove/cluster.py:128
msgid "A list of cluster instance IPs."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:87
msgid "Name of the DB instance to create."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:94
msgid "Reference to a flavor for creating DB instance."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:118
msgid "Database volume size in GB."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:126
msgid "List of network interfaces to create on instance."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:133
#, python-format
msgid ""
"Name or UUID of the network to attach this NIC to. Either %(port)s or "
"%(net)s must be specified."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:142
#, python-format
msgid ""
"Name or UUID of Neutron port to attach this NIC to. Either %(port)s or "
"%(net)s must be specified."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:152
msgid "Fixed IPv4 address for this NIC."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:162
msgid "List of databases to be created on DB instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:169
msgid "Set of symbols and encodings."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:174
msgid "Set of rules for comparing characters in a character set."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:180
msgid "Specifies database names for creating databases on instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:195
msgid "List of users to be created on DB instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:202
msgid "User name to create a user on instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:214
msgid "Password for those users on instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:225
msgid "The host from which a user is allowed to connect to the database."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:231
msgid "Names of databases that those users can access on instance creation."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:246
msgid "Name of the availability zone for DB instance."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:250
msgid "DB instance restore point."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:254
msgid "Identifier of the source instance to replicate."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:259
msgid "The number of replicas to be created."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:266
msgid "Hostname of the instance."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:270
msgid "Api endpoint reference of the instance."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:456
#, python-format
msgid ""
"Databases property is required if users property is provided for resource"
" %s."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:466
#, python-format
msgid ""
"Database %(dbs)s specified for user does not exist in databases for "
"resource %(name)s."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:476
#, python-format
msgid "Can not use %s property on Nova-network."
msgstr ""

#: heat/engine/resources/openstack/trove/os_database.py:480
#, python-format
msgid "Either %(net)s or %(port)s must be provided."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:43
msgid "Name of the queue instance to create."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:47
msgid ""
"Arbitrary key/value metadata to store contextual information about this "
"queue."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:54
msgid "ID of the queue."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:61
msgid ""
"Use get_resource|Ref command instead. For example: { get_resource : "
"<resource_name> }"
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:70
msgid "The resource href of the queue."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:84
#, python-format
msgid "Message queue %s already exists."
msgstr ""

#: heat/engine/resources/openstack/zaqar/queue.py:99
#, python-format
msgid "Message queue %s creation failed."
msgstr ""

#: heat/objects/stack.py:181
#, python-format
msgid "Attempt to update a stack with id: %(id)s %(traversal)s %(msg)s"
msgstr ""

#: heat/openstack/common/crypto/utils.py:43
msgid "An unknown error occurred in crypto utils."
msgstr ""

#: heat/openstack/common/crypto/utils.py:50
#, python-format
msgid "Block size of %(given)d is too big, max = %(maximum)d"
msgstr ""

#: heat/openstack/common/crypto/utils.py:59
#, python-format
msgid "Length of %(given)d is too long, max = %(maximum)d"
msgstr ""

#: heat/scaling/lbutils.py:41
#, python-format
msgid "Unsupported resource '%s' in LoadBalancerNames"
msgstr ""

#: heat/tests/test_exception.py:28
#, python-format
msgid "Testing message %(text)s"
msgstr ""

#: heat/tests/test_fault_middleware.py:167
msgid "Error"
msgstr ""

#: heat/tests/test_function.py:35
msgid "Need more arguments"
msgstr ""

#: heat/tests/test_provider_template.py:809
#: heat/tests/test_provider_template.py:838
msgid "Failed to retrieve template"
msgstr ""

#: heat/tests/test_resource.py:1832
msgid "Resource update failed"
msgstr ""

#: heat/tests/test_validate.py:1458
msgid ""
"Parameter Groups error: parameter_groups.Database Group: The InstanceType"
" parameter must be assigned to one parameter group only."
msgstr ""

#: heat/tests/test_validate.py:1471
msgid ""
"Parameter Groups error: parameter_groups.: The key_name parameter must be"
" assigned to one parameter group only."
msgstr ""

#: heat/tests/test_validate.py:1489
msgid ""
"Parameter Groups error: parameter_groups.Database Group: The grouped "
"parameter SomethingNotHere does not reference a valid parameter."
msgstr ""

#: heat/tests/test_validate.py:1503
msgid ""
"Parameter Groups error: parameter_groups.: The grouped parameter key_name"
" does not reference a valid parameter."
msgstr ""

#: heat/tests/test_validate.py:1516
msgid ""
"Parameter Groups error: parameter_groups.Server Group: The parameters "
"must be provided for each parameter group."
msgstr ""

#: heat/tests/test_validate.py:1527
msgid ""
"Parameter Groups error: parameter_groups: The parameter_groups should be "
"a list."
msgstr ""

#: heat/tests/test_validate.py:1538
msgid ""
"Parameter Groups error: parameter_groups.Server Group: The parameters of "
"parameter group should be a list."
msgstr ""

#: heat/tests/test_validate.py:1550
msgid ""
"Parameter Groups error: parameter_groups.: The parameters of parameter "
"group should be a list."
msgstr ""

#: heat/tests/convergence/framework/fake_resource.py:38
msgid "Fake property a."
msgstr ""

#: heat/tests/convergence/framework/fake_resource.py:44
msgid "Fake property c."
msgstr ""

#: heat/tests/convergence/framework/fake_resource.py:50
msgid "Fake property ca."
msgstr ""

#: heat/tests/convergence/framework/fake_resource.py:56
msgid "Fake property !a."
msgstr ""

#: heat/tests/convergence/framework/fake_resource.py:62
msgid "Fake property !c."
msgstr ""

#: heat/tests/convergence/framework/fake_resource.py:70
msgid "Fake attribute a."
msgstr ""

#: heat/tests/convergence/framework/fake_resource.py:74
msgid "Fake attribute !a."
msgstr ""

#: heat/tests/openstack/heat/test_remote_stack.py:640
msgid ""
"ResourceInError: resources.remote_stack: Went to status UPDATE_FAILED due"
" to \"Remote stack update failed\""
msgstr ""

#: heat/tests/openstack/heat/test_software_deployment.py:859
msgid "need more memory."
msgstr ""

#: heat/tests/openstack/nova/test_server.py:1327
msgid "Cannot use network and uuid at the same time."
msgstr ""

#: heat/tests/openstack/nova/test_server.py:1368
#, python-format
msgid ""
"One of the properties \"network\", \"port\", \"uuid\" or \"subnet\" "
"should be set for the specified network of server \"%s\"."
msgstr ""

