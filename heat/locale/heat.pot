# Translations template for heat.
# Copyright (C) 2014 ORGANIZATION
# This file is distributed under the same license as the heat project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: heat 2014.2.dev169.g59517ea\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2014-07-04 06:02+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 1.3\n"

#: heat/api/aws/ec2token.py:36
msgid "Authentication Endpoint URI."
msgstr ""

#: heat/api/aws/ec2token.py:39 heat/common/config.py:147
msgid "Allow orchestration of multiple clouds."
msgstr ""

#: heat/api/aws/ec2token.py:42 heat/common/config.py:150
msgid ""
"Allowed keystone endpoints for auth_uri when multi_cloud is enabled. At "
"least one endpoint needs to be specified."
msgstr ""

#: heat/api/aws/ec2token.py:142
msgid "Checking AWS credentials.."
msgstr ""

#: heat/api/aws/ec2token.py:149
msgid "No AWS Signature found."
msgstr ""

#: heat/api/aws/ec2token.py:157
msgid "No AWSAccessKeyId/Authorization Credential"
msgstr ""

#: heat/api/aws/ec2token.py:160
msgid "AWS credentials found, checking against keystone."
msgstr ""

#: heat/api/aws/ec2token.py:163
msgid "Ec2Token authorization failed, no auth_uri specified in config file"
msgstr ""

#: heat/api/aws/ec2token.py:165
msgid "Service misconfigured"
msgstr ""

#: heat/api/aws/ec2token.py:188
#, python-format
msgid "Authenticating with %s"
msgstr ""

#: heat/api/aws/ec2token.py:196
msgid "AWS authentication successful."
msgstr ""

#: heat/api/aws/ec2token.py:198
msgid "AWS authentication failure."
msgstr ""

#: heat/api/aws/exception.py:35
msgid "Generic HeatAPIException, please use specific subclasses!"
msgstr ""

#: heat/api/aws/exception.py:74
msgid "The request signature does not conform to AWS standards"
msgstr ""

#: heat/api/aws/exception.py:83
msgid "The request processing has failed due to an internal error"
msgstr ""

#: heat/api/aws/exception.py:94
msgid "The action or operation requested is invalid"
msgstr ""

#: heat/api/aws/exception.py:103
msgid "The certificate or AWS Key ID provided does not exist"
msgstr ""

#: heat/api/aws/exception.py:112
msgid "Incompatible parameters were used together"
msgstr ""

#: heat/api/aws/exception.py:121
msgid "A bad or out-of-range value was supplied"
msgstr ""

#: heat/api/aws/exception.py:130
msgid "AWS query string is malformed, does not adhere to AWS spec"
msgstr ""

#: heat/api/aws/exception.py:140
msgid "The query string is malformed"
msgstr ""

#: heat/api/aws/exception.py:149
msgid "The request is missing an action or operation parameter"
msgstr ""

#: heat/api/aws/exception.py:159
msgid "Does not contain a valid AWS Access Key or certificate"
msgstr ""

#: heat/api/aws/exception.py:168
msgid "A mandatory input parameter is missing"
msgstr ""

#: heat/api/aws/exception.py:177
msgid "The AWS Access Key ID needs a subscription for the service"
msgstr ""

#: heat/api/aws/exception.py:188
msgid "Request expired or more than 15mins in the future"
msgstr ""

#: heat/api/aws/exception.py:197
msgid "Service temporarily unavailable"
msgstr ""

#: heat/api/aws/exception.py:207
msgid "Request was denied due to request throttling"
msgstr ""

#: heat/api/aws/exception.py:216
msgid "Resource with the name requested already exists"
msgstr ""

#: heat/api/aws/exception.py:227
msgid "User is not authorized to perform action"
msgstr ""

#: heat/api/aws/exception.py:237
msgid ""
"The request signature we calculated does not match the signature you "
"provided"
msgstr ""

#: heat/api/aws/exception.py:248
msgid "The requested action is not yet implemented"
msgstr ""

#: heat/api/aws/utils.py:105
#, python-format
msgid "Request does not contain %s parameter!"
msgstr ""

#: heat/api/cfn/v1/stacks.py:54 heat/api/cloudwatch/watch.py:49
#, python-format
msgid "Action %s not allowed for user"
msgstr ""

#: heat/api/cfn/v1/stacks.py:61 heat/api/cloudwatch/watch.py:56
#, python-format
msgid "Error authorizing action %s"
msgstr ""

#: heat/api/cfn/v1/stacks.py:257
#, python-format
msgid "Failed to fetch template: %s"
msgstr ""

#: heat/api/cfn/v1/stacks.py:292
msgid "DisableRollback and OnFailure may not be used together"
msgstr ""

#: heat/api/cfn/v1/stacks.py:312
#, python-format
msgid "Unexpected action %(action)s"
msgstr ""

#: heat/api/cfn/v1/stacks.py:330 heat/api/cfn/v1/stacks.py:412
msgid "Invalid Template URL"
msgstr ""

#: heat/api/cfn/v1/stacks.py:334 heat/api/cfn/v1/stacks.py:415
msgid "TemplateBody or TemplateUrl were not given."
msgstr ""

#: heat/api/cfn/v1/stacks.py:340 heat/api/cfn/v1/stacks.py:421
msgid "The Template must be a JSON or YAML document."
msgstr ""

#: heat/api/cfn/v1/stacks.py:382
msgid "stack not not found"
msgstr ""

#: heat/api/cfn/v1/stacks.py:424 heat/engine/service.py:638
msgid "validate_template"
msgstr ""

#: heat/api/cloudwatch/watch.py:216
#, python-format
msgid "Invalid filter key %s, ignoring"
msgstr ""

#: heat/api/cloudwatch/watch.py:271
msgid "Request does not contain required MetricData"
msgstr ""

#: heat/api/cloudwatch/watch.py:322
#, python-format
msgid "Invalid state %(state)s, expecting one of %(expect)s"
msgstr ""

#: heat/api/openstack/v1/actions.py:44
msgid "No action specified"
msgstr ""

#: heat/api/openstack/v1/actions.py:47
msgid "Multiple actions specified"
msgstr ""

#: heat/api/openstack/v1/actions.py:51
#, python-format
msgid "Invalid action %s specified"
msgstr ""

#: heat/api/openstack/v1/actions.py:58
#, python-format
msgid "Unexpected action %s"
msgstr ""

#: heat/api/openstack/v1/events.py:104
#, python-format
msgid "No events found for resource %s"
msgstr ""

#: heat/api/openstack/v1/events.py:122
#, python-format
msgid "No event %s found"
msgstr ""

#: heat/api/openstack/v1/stacks.py:75
#, python-format
msgid "%(type)s not in valid format: %(error)s"
msgstr ""

#: heat/api/openstack/v1/stacks.py:83
msgid "No stack name specified"
msgstr ""

#: heat/api/openstack/v1/stacks.py:101
#, python-format
msgid "Could not retrieve template: %s"
msgstr ""

#: heat/api/openstack/v1/stacks.py:104
msgid "No template specified"
msgstr ""

#: heat/api/openstack/v1/stacks.py:191
#, python-format
msgid "Old Engine Version: %s"
msgstr ""

#: heat/api/openstack/v1/util.py:62
msgid "Invalid Stack address"
msgstr ""

#: heat/cmd/manage.py:65
msgid "How long to preserve deleted data."
msgstr ""

#: heat/cmd/manage.py:69
msgid "Granularity to use for age argument, defaults to days."
msgstr ""

#: heat/common/auth_url.py:44
msgid "Request missing required header X-Auth-Url"
msgstr ""

#: heat/common/auth_url.py:48
#, python-format
msgid "Header X-Auth-Url \"%s\" not an allowed endpoint"
msgstr ""

#: heat/common/config.py:29
msgid "The flavor to use."
msgstr ""

#: heat/common/config.py:31
msgid "The API paste config file to use."
msgstr ""

#: heat/common/config.py:97
msgid "Select deferred auth method, stored password or trusts."
msgstr ""

#: heat/common/config.py:101
msgid "Subset of trustor roles to be delegated to heat."
msgstr ""

#: heat/common/config.py:107
msgid "Maximum number of stacks any one tenant may have active at one time."
msgstr ""

#: heat/common/config.py:111
msgid ""
"Controls how many events will be pruned whenever a  stack's events exceed"
" max_events_per_stack. Set this lower to keep more events at the expense "
"of more frequent purges."
msgstr ""

#: heat/common/config.py:117
msgid ""
"Maximum events that will be available per stack. Older events will be "
"deleted when this is reached. Set to 0 for unlimited events per stack."
msgstr ""

#: heat/common/config.py:122
msgid "Timeout in seconds for stack action (ie. create or update)."
msgstr ""

#: heat/common/config.py:126
msgid "RPC timeout for the engine liveness check that is used for stack locking."
msgstr ""

#: heat/common/config.py:129
msgid ""
"onready allows you to send a notification when the heat processes are "
"ready to serve.  This is either a module with the notify() method or a "
"shell command.  To enable notifications with systemd, one may use the "
"'systemd-notify --ready' shell command or the 'heat.common.systemd' "
"notification module."
msgstr ""

#: heat/common/config.py:156
msgid ""
"Type of endpoint in Identity service catalog to use for communication "
"with the OpenStack service."
msgstr ""

#: heat/common/config.py:160
msgid "Optional CA cert file to use in SSL connections."
msgstr ""

#: heat/common/config.py:162
msgid "Optional PEM-formatted certificate chain file."
msgstr ""

#: heat/common/config.py:164
msgid "Optional PEM-formatted file that contains the private key."
msgstr ""

#: heat/common/config.py:168
msgid "If set, then the server's certificate will not be verified."
msgstr ""

#: heat/common/config.py:173
#, python-format
msgid "Optional heat url in format like http://0.0.0.0:8004/v1/%(tenant_id)s."
msgstr ""

#: heat/common/config.py:179
msgid "Allow client's debug log output."
msgstr ""

#: heat/common/config.py:185
msgid ""
"Heat build revision. If you would prefer to manage your build revision "
"separately, you can move this section to a different file and add it as "
"another config option."
msgstr ""

#: heat/common/config.py:260
msgid "Unable to locate config file"
msgstr ""

#: heat/common/config.py:272
#, python-format
msgid ""
"Unable to load %(app_name)s from configuration file %(conf_file)s.\n"
"Got: %(e)r"
msgstr ""

#: heat/common/custom_backend_auth.py:61
msgid "Backend authentication failed"
msgstr ""

#: heat/common/environment_format.py:36
msgid "The environment is not a valid YAML mapping data type."
msgstr ""

#: heat/common/environment_format.py:40
#, python-format
msgid "environment has wrong section \"%s\""
msgstr ""

#: heat/common/exception.py:104
msgid "An unknown exception occurred."
msgstr ""

#: heat/common/exception.py:115
msgid "Exception in string format operation"
msgstr ""

#: heat/common/exception.py:133
#, python-format
msgid "Missing required credential: %(required)s"
msgstr ""

#: heat/common/exception.py:137
#, python-format
msgid ""
"Incorrect auth strategy, expected \"%(expected)s\" but received "
"\"%(received)s\""
msgstr ""

#: heat/common/exception.py:142
#, python-format
msgid "Connect error/bad request to Auth service at URL %(url)s."
msgstr ""

#: heat/common/exception.py:146
#, python-format
msgid "Auth service at URL %(url)s not found."
msgstr ""

#: heat/common/exception.py:150
msgid "Authorization failed."
msgstr ""

#: heat/common/exception.py:154
msgid "You are not authenticated."
msgstr ""

#: heat/common/exception.py:158 heat/common/exception.py:163
msgid "You are not authorized to complete this action."
msgstr ""

#: heat/common/exception.py:167
#, python-format
msgid "Data supplied was not valid: %(reason)s"
msgstr ""

#: heat/common/exception.py:171
#, python-format
msgid "Redirecting to %(uri)s for authorization."
msgstr ""

#: heat/common/exception.py:175
msgid "The URI was too long."
msgstr ""

#: heat/common/exception.py:179
#, python-format
msgid "Maximum redirects (%(redirects)s) was exceeded."
msgstr ""

#: heat/common/exception.py:183
msgid "Received invalid HTTP redirect."
msgstr ""

#: heat/common/exception.py:187
#, python-format
msgid ""
"Multiple 'image' service matches for region %(region)s. This generally "
"means that a region is required and you have not supplied one."
msgstr ""

#: heat/common/exception.py:193
#, python-format
msgid "The Parameter (%(key)s) was not provided."
msgstr ""

#: heat/common/exception.py:197
#, python-format
msgid "The Parameter (%(key)s) was not defined in template."
msgstr ""

#: heat/common/exception.py:201
#, python-format
msgid "The template version is invalid: %(explanation)s"
msgstr ""

#: heat/common/exception.py:205
#, python-format
msgid "The template section is invalid: %(section)s"
msgstr ""

#: heat/common/exception.py:209
#, python-format
msgid "The Parameter (%(key)s) has no attributes."
msgstr ""

#: heat/common/exception.py:213
#, python-format
msgid "The Referenced Attribute (%(resource)s %(key)s) is incorrect."
msgstr ""

#: heat/common/exception.py:218
#, python-format
msgid "The specified reference \"%(resource)s\" (in %(key)s) is incorrect."
msgstr ""

#: heat/common/exception.py:223
#, python-format
msgid "The Key (%(key_name)s) could not be found."
msgstr ""

#: heat/common/exception.py:227
#, python-format
msgid "The Flavor ID (%(flavor_id)s) could not be found."
msgstr ""

#: heat/common/exception.py:231
#, python-format
msgid "The Image (%(image_name)s) could not be found."
msgstr ""

#: heat/common/exception.py:235
#, python-format
msgid "Multiple physical resources were found with name (%(name)s)."
msgstr ""

#: heat/common/exception.py:240
#, python-format
msgid "Searching Tenant %(target)s from Tenant %(actual)s forbidden."
msgstr ""

#: heat/common/exception.py:245
#, python-format
msgid "The Stack (%(stack_name)s) could not be found."
msgstr ""

#: heat/common/exception.py:249
#, python-format
msgid "The Stack (%(stack_name)s) already exists."
msgstr ""

#: heat/common/exception.py:253
#, python-format
msgid "%(message)s"
msgstr ""

#: heat/common/exception.py:257
#, python-format
msgid ""
"The Resource (%(resource_name)s) could not be found in Stack "
"%(stack_name)s."
msgstr ""

#: heat/common/exception.py:262
#, python-format
msgid "The Resource Type (%(type_name)s) could not be found."
msgstr ""

#: heat/common/exception.py:266
#, python-format
msgid "The Resource (%(resource_name)s) is not available."
msgstr ""

#: heat/common/exception.py:270
#, python-format
msgid "The Resource (%(resource_id)s) could not be found."
msgstr ""

#: heat/common/exception.py:274
#, python-format
msgid "The Watch Rule (%(watch_name)s) could not be found."
msgstr ""

#: heat/common/exception.py:278
#, python-format
msgid "%(exc_type)s: %(message)s"
msgstr ""

#: heat/common/exception.py:292
#, python-format
msgid "%(feature)s is not supported."
msgstr ""

#: heat/common/exception.py:296
#, python-format
msgid "Cannot define the following properties at the same time: %s."
msgstr ""

#: heat/common/exception.py:314
msgid ""
"Egress rules are only allowed when Neutron is used and the 'VpcId' "
"property is set."
msgstr ""

#: heat/common/exception.py:325
msgid "Not found"
msgstr ""

#: heat/common/exception.py:331
#, python-format
msgid "Invalid content type %(content_type)s"
msgstr ""

#: heat/common/exception.py:335
#, python-format
msgid "Request limit exceeded: %(message)s"
msgstr ""

#: heat/common/exception.py:339
msgid "Maximum resources per stack exceeded."
msgstr ""

#: heat/common/exception.py:343
#, python-format
msgid "Stack %(stack_name)s already has an action (%(action)s) in progress."
msgstr ""

#: heat/common/exception.py:348
#, python-format
msgid "The config (%(software_config_id)s) could not be found."
msgstr ""

#: heat/common/exception.py:352
#, python-format
msgid "Failed to stop stack (%(stack_name)s) on other engine (%(engine_id)s)"
msgstr ""

#: heat/common/heat_keystoneclient.py:96
msgid ""
"heat.conf misconfigured, cannot specify stack_user_domain without "
"stack_domain_admin and stack_domain_admin_password"
msgstr ""

#: heat/common/heat_keystoneclient.py:101
msgid "stack_user_domain ID not set in heat.conf falling back to using default"
msgstr ""

#: heat/common/heat_keystoneclient.py:122
msgid "Admin client authentication failed"
msgstr ""

#: heat/common/heat_keystoneclient.py:138
msgid "Domain admin client authentication failed"
msgstr ""

#: heat/common/heat_keystoneclient.py:163
msgid "Keystone v3 API connection failed, no password trust or auth_token!"
msgstr ""

#: heat/common/heat_keystoneclient.py:174
msgid "trust token re-scoping failed!"
msgstr ""

#: heat/common/heat_keystoneclient.py:178
msgid "Trust impersonation failed"
msgstr ""

#: heat/common/heat_keystoneclient.py:260
#, python-format
msgid "Truncating the username %s to the last 64 characters."
msgstr ""

#: heat/common/heat_keystoneclient.py:292
#: heat/common/heat_keystoneclient.py:335
#, python-format
msgid "Failed to add user %(user)s to role %(role)s, check role exists!"
msgstr ""

#: heat/common/heat_keystoneclient.py:296
#: heat/common/heat_keystoneclient.py:339
#, python-format
msgid "Can't find role %s"
msgstr ""

#: heat/common/heat_keystoneclient.py:314
msgid ""
"Falling back to legacy non-domain user create, configure domain in "
"heat.conf"
msgstr ""

#: heat/common/heat_keystoneclient.py:348
#, python-format
msgid "User %s in invalid domain"
msgstr ""

#: heat/common/heat_keystoneclient.py:350
#, python-format
msgid "User %s in invalid project"
msgstr ""

#: heat/common/heat_keystoneclient.py:356
msgid ""
"Falling back to legacy non-domain user delete, configure domain in "
"heat.conf"
msgstr ""

#: heat/common/heat_keystoneclient.py:377
#: heat/common/heat_keystoneclient.py:394
msgid "Falling back to legacy non-domain project, configure domain in heat.conf"
msgstr ""

#: heat/common/heat_keystoneclient.py:468
#: heat/common/heat_keystoneclient.py:485
msgid "Falling back to legacy non-domain keypair, configure domain in heat.conf"
msgstr ""

#: heat/common/heat_keystoneclient.py:504
msgid "Falling back to legacy non-domain disable, configure domain in heat.conf"
msgstr ""

#: heat/common/heat_keystoneclient.py:514
msgid "Falling back to legacy non-domain enable, configure domain in heat.conf"
msgstr ""

#: heat/common/identifier.py:42
msgid "Stack name may not contain \"/\""
msgstr ""

#: heat/common/identifier.py:56
#, python-format
msgid "\"%s\" is not a valid ARN"
msgstr ""

#: heat/common/identifier.py:62
#, python-format
msgid "\"%s\" is not a valid Heat ARN"
msgstr ""

#: heat/common/identifier.py:79
#, python-format
msgid "\"%s\" is not a valid URL"
msgstr ""

#: heat/common/identifier.py:85
#, python-format
msgid "\"%s\" is not a valid ARN URL"
msgstr ""

#: heat/common/identifier.py:138 heat/common/identifier.py:145
#, python-format
msgid "Unknown attribute \"%s\""
msgstr ""

#: heat/common/identifier.py:178 heat/engine/resource.py:141
msgid "Resource name may not contain \"/\""
msgstr ""

#: heat/common/notify.py:38
#, python-format
msgid "Failed to execute onready command: %s"
msgstr ""

#: heat/common/param_utils.py:24
#, python-format
msgid "Unrecognized value \"%(value)s, acceptable values are: true, false."
msgstr ""

#: heat/common/plugin_loader.py:97
#, python-format
msgid "Failed to import module %s"
msgstr ""

#: heat/common/short_id.py:44
#, python-format
msgid "Invalid UUID version (%d)"
msgstr ""

#: heat/common/systemd.py:40
msgid "Unable to notify systemd of startup completion: NOTIFY_SOCKET not set"
msgstr ""

#: heat/common/template_format.py:71
#, python-format
msgid "Template exceeds maximum allowed size (%s bytes)"
msgstr ""

#: heat/common/template_format.py:76
msgid "The template is not a JSON object or YAML mapping."
msgstr ""

#: heat/common/template_format.py:82
msgid "Template format version not found."
msgstr ""

#: heat/common/timeutils.py:33
msgid "Only ISO 8601 duration format of the form PT#H#M#S is supported."
msgstr ""

#: heat/common/urlfetch.py:43
#, python-format
msgid "Fetching data from %s"
msgstr ""

#: heat/common/urlfetch.py:48
#, python-format
msgid "Invalid URL scheme %s"
msgstr ""

#: heat/common/urlfetch.py:54 heat/common/urlfetch.py:78
#, python-format
msgid "Failed to retrieve template: %s"
msgstr ""

#: heat/common/wsgi.py:55 heat/common/wsgi.py:89 heat/common/wsgi.py:123
msgid ""
"Address to bind the server. Useful when selecting a particular network "
"interface."
msgstr ""

#: heat/common/wsgi.py:59 heat/common/wsgi.py:93 heat/common/wsgi.py:127
msgid "The port on which the server will listen."
msgstr ""

#: heat/common/wsgi.py:62 heat/common/wsgi.py:96 heat/common/wsgi.py:130
msgid "Number of backlog requests to configure the socket with."
msgstr ""

#: heat/common/wsgi.py:66 heat/common/wsgi.py:100 heat/common/wsgi.py:134
msgid "Location of the SSL certificate file to use for SSL mode."
msgstr ""

#: heat/common/wsgi.py:70 heat/common/wsgi.py:104 heat/common/wsgi.py:138
msgid "Location of the SSL key file to use for enabling SSL mode."
msgstr ""

#: heat/common/wsgi.py:74 heat/common/wsgi.py:108 heat/common/wsgi.py:142
msgid "Number of workers for Heat service."
msgstr ""

#: heat/common/wsgi.py:77 heat/common/wsgi.py:111
msgid ""
"Maximum line size of message headers to be accepted. max_header_line may "
"need to be increased when using large tokens (typically those generated "
"by the Keystone v3 API with big service catalogs)."
msgstr ""

#: heat/common/wsgi.py:145
msgid ""
"Maximum line size of message headers to be accepted. max_header_line may "
"need to be increased when using large tokens (typically those generated "
"by the Keystone v3 API with big service catalogs.)"
msgstr ""

#: heat/common/wsgi.py:212 heat/openstack/common/sslutils.py:56
msgid ""
"When running server in SSL mode, you must specify both a cert_file and "
"key_file option value in your configuration file"
msgstr ""

#: heat/common/wsgi.py:230
#, python-format
msgid "Could not bind to %(bind_addr)safter trying for 30 seconds"
msgstr ""

#: heat/common/wsgi.py:262
msgid "SIGTERM received"
msgstr ""

#: heat/common/wsgi.py:271
msgid "SIGHUP received"
msgstr ""

#: heat/common/wsgi.py:287
#, python-format
msgid "Starting %d workers"
msgstr ""

#: heat/common/wsgi.py:298
#, python-format
msgid "Removing dead child %s"
msgstr ""

#: heat/common/wsgi.py:305
msgid "Caught keyboard interrupt. Exiting."
msgstr ""

#: heat/common/wsgi.py:327
#, python-format
msgid "Child %d exiting normally"
msgstr ""

#: heat/common/wsgi.py:330
#, python-format
msgid "Started child %s"
msgstr ""

#: heat/common/wsgi.py:353
msgid "Starting single process server"
msgstr ""

#: heat/common/wsgi.py:560
#, python-format
msgid ""
"JSON body size (%(len)s bytes) exceeds maximum allowed size (%(limit)s "
"bytes)."
msgstr ""

#: heat/common/wsgi.py:627
#, python-format
msgid "Exception handling resource: %s"
msgstr ""

#: heat/common/wsgi.py:628
msgid ""
"The server could not comply with the request since\r\n"
"it is either malformed or otherwise incorrect.\r\n"
msgstr ""

#: heat/common/wsgi.py:649
#, python-format
msgid "Returning %(code)s to user: %(explanation)s"
msgstr ""

#: heat/common/wsgi.py:688
msgid "Unable to serialize exception response"
msgstr ""

#: heat/common/wsgi.py:723
#, python-format
msgid "Unexpected error occurred serving API: %s"
msgstr ""

#: heat/db/sqlalchemy/api.py:90
#, python-format
msgid "raw template with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:114
#, python-format
msgid "resource with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:146
msgid "no resources were found"
msgstr ""

#: heat/db/sqlalchemy/api.py:161
msgid "no resource data found"
msgstr ""

#: heat/db/sqlalchemy/api.py:211
msgid "No resource data found"
msgstr ""

#: heat/db/sqlalchemy/api.py:265
#, python-format
msgid "no resources for stack_id %s were found"
msgstr ""

#: heat/db/sqlalchemy/api.py:413
#, python-format
msgid "Attempt to update a stack with id: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:425
#, python-format
msgid "Attempt to delete a stack with id: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:508
#, python-format
msgid "Attempt to delete user creds with id %(id)s that does not exist"
msgstr ""

#: heat/db/sqlalchemy/api.py:617
#, python-format
msgid "Attempt to update a watch with id: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:629
#, python-format
msgid "Attempt to delete watch_rule: %(id)s %(msg)s"
msgstr ""

#: heat/db/sqlalchemy/api.py:668
#, python-format
msgid "Software config with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:695
#, python-format
msgid "Deployment with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:741
#, python-format
msgid "Snapshot with id %s not found"
msgstr ""

#: heat/db/sqlalchemy/api.py:764
msgid "age should be an integer"
msgstr ""

#: heat/db/sqlalchemy/api.py:766
msgid "age should be a positive integer"
msgstr ""

#: heat/db/sqlalchemy/api.py:770
msgid "granularity should be days, hours, minutes, or seconds"
msgstr ""

#: heat/db/sqlalchemy/migrate_repo/versions/029_event_id_to_uuid.py:40
msgid ""
"If you really want to downgrade to this version, you should drop all the "
"records."
msgstr ""

#: heat/db/sqlalchemy/migrate_repo/versions/037_migrate_hot_template.py:58
#: heat/db/sqlalchemy/migrate_repo/versions/041_migrate_hot_template_resources.py:70
#: heat/db/sqlalchemy/migrate_repo/versions/043_migrate_template_versions.py:58
msgid ""
"This version cannot be downgraded because it involves a data migration to"
" the raw_template table."
msgstr ""

#: heat/engine/api.py:37
msgid "Timeout conversion failed"
msgstr ""

#: heat/engine/api.py:42
#, python-format
msgid "Invalid timeout value %s"
msgstr ""

#: heat/engine/api.py:58
#, python-format
msgid "Unexpected adopt data \"%s\". Adopt data must be a dict."
msgstr ""

#: heat/engine/api.py:242
msgid "Unexpected number of keys in watch_data.data!"
msgstr ""

#: heat/engine/attributes.py:148
#, python-format
msgid "%(resource)s: Invalid attribute %(key)s"
msgstr ""

#: heat/engine/constraints.py:88
#, python-format
msgid "Invalid type (%s)"
msgstr ""

#: heat/engine/constraints.py:95
#, python-format
msgid "Single schema valid only for %(ltype)s, not %(utype)s"
msgstr ""

#: heat/engine/constraints.py:105
#, python-format
msgid "Schema valid only for %(ltype)s or %(mtype)s, not %(utype)s"
msgstr ""

#: heat/engine/constraints.py:123
#, python-format
msgid "%(name)s constraint invalid for %(utype)s"
msgstr ""

#: heat/engine/constraints.py:143 heat/engine/parameters.py:85
#, python-format
msgid "Invalid default %(default)s (%(exc)s)"
msgstr ""

#: heat/engine/constraints.py:175
#, python-format
msgid "%s is not an integer."
msgstr ""

#: heat/engine/constraints.py:186
#, python-format
msgid "Value \"%(val)s\" is invalid for data type \"%(type)s\"."
msgstr ""

#: heat/engine/constraints.py:249
#, python-format
msgid "Invalid key %s"
msgstr ""

#: heat/engine/constraints.py:338
msgid "min/max must be numeric"
msgstr ""

#: heat/engine/constraints.py:342
msgid "A range constraint must have a min value and/or a max value specified."
msgstr ""

#: heat/engine/constraints.py:347
#, python-format
msgid "The value must be at least %(min)s."
msgstr ""

#: heat/engine/constraints.py:349
#, python-format
msgid "The value must be no greater than %(max)s."
msgstr ""

#: heat/engine/constraints.py:351
#, python-format
msgid "The value must be in the range %(min)s to %(max)s."
msgstr ""

#: heat/engine/constraints.py:399
msgid "A length constraint must have a min value and/or a max value specified."
msgstr ""

#: heat/engine/constraints.py:406
msgid "min/max length must be integral"
msgstr ""

#: heat/engine/constraints.py:411
#, python-format
msgid "The length must be at least %(min)s."
msgstr ""

#: heat/engine/constraints.py:413
#, python-format
msgid "The length must be no greater than %(max)s."
msgstr ""

#: heat/engine/constraints.py:415
#, python-format
msgid "The length must be in the range %(min)s to %(max)s."
msgstr ""

#: heat/engine/constraints.py:446
msgid "AllowedValues must be a list"
msgstr ""

#: heat/engine/constraints.py:451
#, python-format
msgid "Allowed values: %s"
msgstr ""

#: heat/engine/constraints.py:490
msgid "AllowedPattern must be a string"
msgstr ""

#: heat/engine/constraints.py:495
#, python-format
msgid "Value must match pattern: %s"
msgstr ""

#: heat/engine/constraints.py:537
#, python-format
msgid "Value must be of type %s"
msgstr ""

#: heat/engine/constraints.py:543
#, python-format
msgid "\"%(value)s\" does not validate %(name)s (constraint not found)"
msgstr ""

#: heat/engine/constraints.py:550
#, python-format
msgid "\"%(value)s\" does not validate %(name)s"
msgstr ""

#: heat/engine/constraints.py:573
#, python-format
msgid "Error validating value %(value)r"
msgstr ""

#: heat/engine/constraints.py:574
#, python-format
msgid "Error validating value %(value)r: %(message)s"
msgstr ""

#: heat/engine/dependencies.py:24
#, python-format
msgid "Circular Dependency Found: %(cycle)s"
msgstr ""

#: heat/engine/environment.py:192 heat/engine/environment.py:198
#, python-format
msgid "Removing %(item)s from %(path)s"
msgstr ""

#: heat/engine/environment.py:211
#, python-format
msgid "Changing %(path)s from %(was)s to %(now)s"
msgstr ""

#: heat/engine/environment.py:213
#, python-format
msgid "Registering %(path)s -> %(value)s"
msgstr ""

#: heat/engine/environment.py:288 heat/tests/test_resource.py:96
#, python-format
msgid "Resource \"%s\" has no type"
msgstr ""

#: heat/engine/environment.py:291
#, python-format
msgid "Non-empty resource type is required for resource \"%s\""
msgstr ""

#: heat/engine/environment.py:295
#, python-format
msgid "Resource \"%s\" type is not a string"
msgstr ""

#: heat/engine/environment.py:302
#, python-format
msgid "Unknown resource Type : %s"
msgstr ""

#: heat/engine/environment.py:405
#, python-format
msgid "Failed to read %s"
msgstr ""

#: heat/engine/environment.py:412
#, python-format
msgid "Loading %s"
msgstr ""

#: heat/engine/environment.py:417
#, python-format
msgid "Failed to parse %(file_path)s"
msgstr ""

#: heat/engine/environment.py:421
#, python-format
msgid "Failed to read %(file_path)s"
msgstr ""

#: heat/engine/event.py:60
#, python-format
msgid "No event exists with id \"%s\""
msgstr ""

#: heat/engine/event.py:91
msgid "Duplicating event"
msgstr ""

#: heat/engine/parameter_groups.py:52 heat/tests/test_validate.py:1357
msgid "Parameters must be provided for each Parameter Group."
msgstr ""

#: heat/engine/parameter_groups.py:59
#, python-format
msgid "The %s parameter must be assigned to one Parameter Group only."
msgstr ""

#: heat/engine/parameter_groups.py:67
#, python-format
msgid "The Parameter name (%s) does not reference an existing parameter."
msgstr ""

#: heat/engine/parameters.py:78
#, python-format
msgid "Default must be a comma-delimited list string: %s"
msgstr ""

#: heat/engine/parameters.py:105
#, python-format
msgid "Invalid %s, expected a mapping"
msgstr ""

#: heat/engine/parameters.py:109
#, python-format
msgid "Invalid key '%(key)s' for %(entity)s"
msgstr ""

#: heat/engine/parameters.py:120
#, python-format
msgid "Missing parameter type for parameter: %s"
msgstr ""

#: heat/engine/parameters.py:196
#, python-format
msgid "Invalid Parameter type \"%s\""
msgstr ""

#: heat/engine/parameters.py:230
#, python-format
msgid "Parameter '%(name)s' is invalid: %(exp)s"
msgstr ""

#: heat/engine/parameters.py:338
#, python-format
msgid "Value must be a comma-delimited list string: %s"
msgstr ""

#: heat/engine/parameters.py:373
#, python-format
msgid "Value must be valid JSON: %s"
msgstr ""

#: heat/engine/parameters.py:500 heat/engine/hot/parameters.py:135
msgid "Stack ID"
msgstr ""

#: heat/engine/parameters.py:504 heat/engine/hot/parameters.py:140
msgid "Stack Name"
msgstr ""

#: heat/engine/parser.py:73
#, python-format
msgid ""
"Invalid stack name %s must contain only alphanumeric or \"_-.\" "
"characters, must start with alpha"
msgstr ""

#: heat/engine/parser.py:134
msgid "Attempt to use stored_context with no user_creds"
msgstr ""

#: heat/engine/parser.py:199
msgid "Unable to set parameters StackId identifier"
msgstr ""

#: heat/engine/parser.py:219
#, python-format
msgid "No stack exists with id \"%s\""
msgstr ""

#: heat/engine/parser.py:413
#, python-format
msgid "Duplicate names %s"
msgstr ""

#: heat/engine/parser.py:448 heat/engine/resource.py:807
#, python-format
msgid "Invalid action %s"
msgstr ""

#: heat/engine/parser.py:451 heat/engine/resource.py:810
#, python-format
msgid "Invalid status %s"
msgstr ""

#: heat/engine/parser.py:465
#, python-format
msgid "Stack %(action)s %(status)s (%(name)s): %(reason)s"
msgstr ""

#: heat/engine/parser.py:611
#, python-format
msgid "Unexpected action %s passed to update!"
msgstr ""

#: heat/engine/parser.py:698
#, python-format
msgid "Unexpected action %s passed to delete!"
msgstr ""

#: heat/engine/parser.py:785
#, python-format
msgid ""
"Tried to delete user_creds that do not exist (stack=%(stack)s "
"user_creds_id=%(uc)s)"
msgstr ""

#: heat/engine/parser.py:793
#, python-format
msgid "Tried to store a stack that does not exist %s "
msgstr ""

#: heat/engine/parser.py:810 heat/engine/parser.py:818
#, python-format
msgid "Tried to delete stack that does not exist %s "
msgstr ""

#: heat/engine/parser.py:833
#, python-format
msgid "%s is already suspended"
msgstr ""

#: heat/engine/parser.py:852
#, python-format
msgid "%s is already resumed"
msgstr ""

#: heat/engine/parser.py:884
#, python-format
msgid "delete: %s"
msgstr ""

#: heat/engine/parser.py:892
msgid "create"
msgstr ""

#: heat/engine/plugin_manager.py:96
#, python-format
msgid "Failed to load %(mapping_name)s from %(module)s"
msgstr ""

#: heat/engine/plugin_manager.py:103
#, python-format
msgid "Invalid type for %(mapping_name)s from %(module)s"
msgstr ""

#: heat/engine/properties.py:77
#, python-format
msgid "Unknown key(s) %s"
msgstr ""

#: heat/engine/properties.py:98
#, python-format
msgid "No %s specified"
msgstr ""

#: heat/engine/properties.py:107
#, python-format
msgid "%(schema)s supplied for  %(type)s %(data)s"
msgstr ""

#: heat/engine/properties.py:203
#, python-format
msgid "Value '%s' is not an integer"
msgstr ""

#: heat/engine/properties.py:216
msgid "Value must be a string"
msgstr ""

#: heat/engine/properties.py:238
#, python-format
msgid "\"%s\" is not a map"
msgstr ""

#: heat/engine/properties.py:247
#, python-format
msgid "\"%s\" is not a list"
msgstr ""

#: heat/engine/properties.py:260
#, python-format
msgid "\"%s\" is not a valid boolean"
msgstr ""

#: heat/engine/properties.py:321
#, python-format
msgid "Property error : %s"
msgstr ""

#: heat/engine/properties.py:326
#, python-format
msgid "Property %s not implemented yet"
msgstr ""

#: heat/engine/properties.py:331
#, python-format
msgid "Unknown Property %s"
msgstr ""

#: heat/engine/properties.py:336
#, python-format
msgid "%(prefix)sInvalid Property %(key)s"
msgstr ""

#: heat/engine/properties.py:353
#, python-format
msgid "%(prefix)sProperty %(key)s not assigned"
msgstr ""

#: heat/engine/resource.py:59
#, python-format
msgid "The Resource %s requires replacement."
msgstr ""

#: heat/engine/resource.py:420
msgid "Error marking resource as failed"
msgstr ""

#: heat/engine/resource.py:440
#, python-format
msgid "State %s invalid for create"
msgstr ""

#: heat/engine/resource.py:444
#, python-format
msgid "creating %s"
msgstr ""

#: heat/engine/resource.py:476
msgid "Resource ID was not provided."
msgstr ""

#: heat/engine/resource.py:524
msgid "Resource update already requested"
msgstr ""

#: heat/engine/resource.py:527
#, python-format
msgid "updating %s"
msgstr ""

#: heat/engine/resource.py:555
#, python-format
msgid "update %(resource)s : %(err)s"
msgstr ""

#: heat/engine/resource.py:574
#, python-format
msgid "State %s invalid for suspend"
msgstr ""

#: heat/engine/resource.py:578
#, python-format
msgid "suspending %s"
msgstr ""

#: heat/engine/resource.py:590
#, python-format
msgid "State %s invalid for resume"
msgstr ""

#: heat/engine/resource.py:594
#, python-format
msgid "resuming %s"
msgstr ""

#: heat/engine/resource.py:630
msgid "limit cannot be less than 4"
msgstr ""

#: heat/engine/resource.py:636
#, python-format
msgid "Validating %s"
msgstr ""

#: heat/engine/resource.py:645
#, python-format
msgid "Invalid deletion policy \"%s\""
msgstr ""

#: heat/engine/resource.py:650
#, python-format
msgid "\"%s\" deletion policy not supported"
msgstr ""

#: heat/engine/resource.py:668
#, python-format
msgid "deleting %s"
msgstr ""

#: heat/engine/resource.py:693
#, python-format
msgid "Delete %s"
msgstr ""

#: heat/engine/resource.py:703
msgid "Error marking resource deletion failed"
msgstr ""

#: heat/engine/resource.py:733
#, python-format
msgid "db error %s"
msgstr ""

#: heat/engine/resource.py:753 heat/engine/resource.py:778
#, python-format
msgid "DB error %s"
msgstr ""

#: heat/engine/resource.py:891
#, python-format
msgid "Resource %s is not able to receive a signal"
msgstr ""

#: heat/engine/resource.py:898
#, python-format
msgid "signal %(name)s : %(msg)s"
msgstr ""

#: heat/engine/resource.py:912
#, python-format
msgid "Resource %s does not implement metadata update"
msgstr ""

#: heat/engine/scheduler.py:63
#, python-format
msgid "%s Timed out"
msgstr ""

#: heat/engine/scheduler.py:177
#, python-format
msgid "%s timed out"
msgstr ""

#: heat/engine/service.py:216
#, python-format
msgid "Unable to retrieve stack %s for periodic task"
msgstr ""

#: heat/engine/service.py:230
#, python-format
msgid "periodic_task db error watch rule removed? %(ex)s"
msgstr ""

#: heat/engine/service.py:352
msgid "Attempting to stop engine service..."
msgstr ""

#: heat/engine/service.py:363
#, python-format
msgid "Waiting stack %s processing to be finished"
msgstr ""

#: heat/engine/service.py:367
#, python-format
msgid "Stack %s processing was finished"
msgstr ""

#: heat/engine/service.py:370
msgid "All threads were gone, terminating engine"
msgstr ""

#: heat/engine/service.py:489
#, python-format
msgid ""
"You have reached the maximum stacks per tenant, %d. Please delete some "
"stacks."
msgstr ""

#: heat/engine/service.py:514
#, python-format
msgid "previewing stack %s"
msgstr ""

#: heat/engine/service.py:542
#, python-format
msgid "Creating stack %s"
msgstr ""

#: heat/engine/service.py:557
#, python-format
msgid "Stack create failed, status %s"
msgstr ""

#: heat/engine/service.py:595
#, python-format
msgid "Updating stack %s"
msgstr ""

#: heat/engine/service.py:600
msgid "Updating a stack when it is suspended"
msgstr ""

#: heat/engine/service.py:640
msgid "No Template provided."
msgstr ""

#: heat/engine/service.py:734
#, python-format
msgid "Deleting stack %s"
msgstr ""

#: heat/engine/service.py:779
#, python-format
msgid "abandoning stack %s"
msgstr ""

#: heat/engine/service.py:897
#, python-format
msgid "Access denied to resource %s"
msgstr ""

#: heat/engine/service.py:1082
#, python-format
msgid "show_watch (all) db error %s"
msgstr ""

#: heat/engine/service.py:1105
msgid "Filtering by namespace/metric not yet supported"
msgstr ""

#: heat/engine/service.py:1111
#, python-format
msgid "show_metric (all) db error %s"
msgstr ""

#: heat/engine/service.py:1173
msgid "server_id must be specified"
msgstr ""

#: heat/engine/signal_responder.py:68
msgid "Cannot generate signed url, no stored access/secret key"
msgstr ""

#: heat/engine/stack_lock.py:83
#, python-format
msgid ""
"Stale lock detected on stack %(stack)s.  Engine %(engine)s will attempt "
"to steal the lock"
msgstr ""

#: heat/engine/stack_lock.py:91
#, python-format
msgid "Engine %(engine)s successfully stole the lock on stack %(stack)s"
msgstr ""

#: heat/engine/stack_lock.py:98
#, python-format
msgid ""
"The lock on stack %(stack)s was released while engine %(engine)s was "
"stealing it. Trying again"
msgstr ""

#: heat/engine/stack_lock.py:105
#, python-format
msgid ""
"Failed to steal lock on stack %(stack)s. Engine %(engine)s stole the lock"
" first"
msgstr ""

#: heat/engine/stack_lock.py:118
#, python-format
msgid "Lock was already released on stack %s!"
msgstr ""

#: heat/engine/stack_resource.py:68
msgid "Nested stack not found in DB"
msgstr ""

#: heat/engine/stack_resource.py:105
#, python-format
msgid "Preview of '%s' not yet implemented"
msgstr ""

#: heat/engine/stack_resource.py:151
#, python-format
msgid "Recursion depth exceeds %d."
msgstr ""

#: heat/engine/stack_resource.py:211
#, python-format
msgid "Cannot update %s, stack not created"
msgstr ""

#: heat/engine/stack_resource.py:256
#, python-format
msgid "Nested stack UPDATE failed: %s"
msgstr ""

#: heat/engine/stack_resource.py:267
msgid "Stack not found to delete"
msgstr ""

#: heat/engine/stack_resource.py:290
#, python-format
msgid "Cannot suspend %s, stack not created"
msgstr ""

#: heat/engine/stack_resource.py:312
#, python-format
msgid "Cannot resume %s, stack not created"
msgstr ""

#: heat/engine/stack_user.py:83
msgid "Reverting to legacy user delete path"
msgstr ""

#: heat/engine/stack_user.py:117
#, python-format
msgid "Error creating ec2 keypair for user %s"
msgstr ""

#: heat/engine/support.py:28
#, python-format
msgid "Specified status is invalid, defaulting to %s"
msgstr ""

#: heat/engine/template.py:65
#, python-format
msgid "Ambiguous versions (%s)"
msgstr ""

#: heat/engine/template.py:70
msgid "Template version was not provided"
msgstr ""

#: heat/engine/template.py:94
#, python-format
msgid "\"%(version)s\". \"%(version_type)s\" should be one of: %(available)s"
msgstr ""

#: heat/engine/template.py:97
#, python-format
msgid "\"%(version)s\". \"%(version_type)s\" should be: %(available)s"
msgstr ""

#: heat/engine/template.py:218
msgid ""
"Template does not contain any resources, so the template would not really"
" do anything when being instantiated."
msgstr ""

#: heat/engine/template.py:225
msgid "Every Resource object must contain a Type member."
msgstr ""

#: heat/engine/template.py:232
#, python-format
msgid "Resources must contain Resource. Found a [%s] instead"
msgstr ""

#: heat/engine/update.py:131
#, python-format
msgid "Resource %(res_name)s for stack %(stack_name)s updated"
msgstr ""

#: heat/engine/watchrule.py:78
#, python-format
msgid "WatchRule.load (%(watch_name)s) db error %(ex)s"
msgstr ""

#: heat/engine/watchrule.py:249
#, python-format
msgid "WATCH: stack:%(stack)s, watch_name:%(watch_name)s, new_state:%(new_state)s"
msgstr ""

#: heat/engine/watchrule.py:255
#, python-format
msgid "no action for new state %s"
msgstr ""

#: heat/engine/watchrule.py:265
#, python-format
msgid "Could not process watch state %s for stack"
msgstr ""

#: heat/engine/watchrule.py:327
#, python-format
msgid "Invalid watch state %s"
msgstr ""

#: heat/engine/watchrule.py:339
#, python-format
msgid "Unknown watch state %s"
msgstr ""

#: heat/engine/watchrule.py:350
#, python-format
msgid "Unable to override state %(state)s for watch %(name)s"
msgstr ""

#: heat/engine/cfn/functions.py:158
#, python-format
msgid "Arguments to \"%s\" must be of the form [resource_name, attribute]"
msgstr ""

#: heat/engine/cfn/functions.py:210
#, python-format
msgid "Arguments to \"%s\" must be of the form [index, collection]"
msgstr ""

#: heat/engine/cfn/functions.py:236
#, python-format
msgid "\"%(fn_name)s\": %(err)s"
msgstr ""

#: heat/engine/cfn/functions.py:240
#, python-format
msgid "Index to \"%s\" must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:247
#, python-format
msgid "Index to \"%s\" must be an integer"
msgstr ""

#: heat/engine/cfn/functions.py:258
#, python-format
msgid "Arguments to %s not fully resolved"
msgstr ""

#: heat/engine/cfn/functions.py:283 heat/engine/cfn/functions.py:289
#: heat/engine/cfn/functions.py:334 heat/engine/cfn/functions.py:340
#: heat/engine/cfn/functions.py:393 heat/engine/cfn/functions.py:399
#, python-format
msgid "Incorrect arguments to \"%(fn_name)s\" should be: %(example)s"
msgstr ""

#: heat/engine/cfn/functions.py:296
#, python-format
msgid "\"%s\" must operate on a list"
msgstr ""

#: heat/engine/cfn/functions.py:300
#, python-format
msgid "\"%s\" delimiter must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:307
msgid "Items to join must be strings"
msgstr ""

#: heat/engine/cfn/functions.py:347
#, python-format
msgid "Delimiter for %s must be string"
msgstr ""

#: heat/engine/cfn/functions.py:350
#, python-format
msgid "String to split must be string; got %s"
msgstr ""

#: heat/engine/cfn/functions.py:381
#, python-format
msgid "\"%s\" parameters must be a mapping"
msgstr ""

#: heat/engine/cfn/functions.py:409
#, python-format
msgid "\"%s\" template must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:412
#, python-format
msgid "\"%s\" params must be a map"
msgstr ""

#: heat/engine/cfn/functions.py:418
#, python-format
msgid "\"%s\" param placeholders must be strings"
msgstr ""

#: heat/engine/cfn/functions.py:425
#, python-format
msgid "\"%s\" params must be strings or numbers"
msgstr ""

#: heat/engine/cfn/functions.py:449
#, python-format
msgid "\"%s\" argument must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:484
#, python-format
msgid "Wrong Arguments try: \"%s\""
msgstr ""

#: heat/engine/cfn/functions.py:487
#, python-format
msgid "%s Key Name must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:490
#, python-format
msgid "%s Value Name must be a string"
msgstr ""

#: heat/engine/cfn/functions.py:496
msgid "Member list must be a list"
msgstr ""

#: heat/engine/cfn/functions.py:500
msgid "Member list items must be strings"
msgstr ""

#: heat/engine/cfn/functions.py:535
#, python-format
msgid "Incorrect arguments to \"%(fn_name)s\" should be one of: %(allowed)s"
msgstr ""

#: heat/engine/cfn/template.py:46 heat/engine/hot/template.py:58
#: heat/engine/hot/template.py:62
#, python-format
msgid "\"%s\" is not a valid template section"
msgstr ""

#: heat/engine/cfn/template.py:49 heat/engine/hot/template.py:65
#, python-format
msgid "Section %s can not be accessed directly."
msgstr ""

#: heat/engine/cfn/template.py:76 heat/engine/hot/template.py:166
#, python-format
msgid "Resource %(name)s %(key)s typemust be %(typename)s"
msgstr ""

#: heat/engine/cfn/template.py:86 heat/engine/hot/template.py:176
#, python-format
msgid "Resource %(name)s is missing \"%(type_key)s\""
msgstr ""

#: heat/engine/clients/__init__.py:172
msgid "Neutron connection failed, no auth_token!"
msgstr ""

#: heat/engine/hot/functions.py:46
#, python-format
msgid "Function \"%s\" must have arguments"
msgstr ""

#: heat/engine/hot/functions.py:56
#, python-format
msgid "Argument to \"%s\" must be string or list"
msgstr ""

#: heat/engine/hot/functions.py:60
#, python-format
msgid "Parameter name in \"%s\" must be string"
msgstr ""

#: heat/engine/hot/functions.py:71 heat/engine/hot/functions.py:123
#, python-format
msgid "\"%s\" can't traverse path"
msgstr ""

#: heat/engine/hot/functions.py:74 heat/engine/hot/functions.py:126
#, python-format
msgid "Path components in \"%s\" must be strings"
msgstr ""

#: heat/engine/hot/functions.py:101
#, python-format
msgid "Argument to \"%s\" must be a list"
msgstr ""

#: heat/engine/hot/functions.py:105
#, python-format
msgid ""
"Arguments to \"%s\" must be of the form [resource_name, attribute, "
"(path), ...]"
msgstr ""

#: heat/engine/hot/functions.py:160
#, python-format
msgid "Arguments to \"%s\" must be a map"
msgstr ""

#: heat/engine/hot/functions.py:172
#, python-format
msgid "\"str_replace\" syntax should be %s"
msgstr ""

#: heat/engine/hot/functions.py:193
#, python-format
msgid "Argument to \"%s\" must be a string"
msgstr ""

#: heat/engine/hot/functions.py:200
#, python-format
msgid ""
"No content found in the \"files\" section for %(fn_name)s path: "
"%(file_key)s"
msgstr ""

#: heat/engine/hot/parameters.py:67
#, python-format
msgid "Invalid parameter constraints for parameter %s, expected a list"
msgstr ""

#: heat/engine/hot/parameters.py:100
msgid "No constraint expressed"
msgstr ""

#: heat/engine/hot/template.py:115 heat/engine/hot/template.py:207
#, python-format
msgid "\"%s\" is not a valid keyword inside a resource definition"
msgstr ""

#: heat/engine/hot/template.py:135
#, python-format
msgid "\"%s\" is not a valid keyword inside an output definition"
msgstr ""

#: heat/engine/resources/autoscaling.py:110
#: heat/engine/resources/autoscaling.py:476
#: heat/engine/resources/autoscaling.py:509
#: heat/engine/resources/autoscaling.py:514
#: heat/engine/resources/autoscaling.py:793
#: heat/engine/resources/autoscaling.py:798
#: heat/engine/resources/autoscaling.py:803
#: heat/engine/resources/instance.py:191 heat/engine/resources/instance.py:196
#: heat/engine/resources/instance.py:201 heat/engine/resources/instance.py:206
#: heat/engine/resources/instance.py:211 heat/engine/resources/instance.py:216
#: heat/engine/resources/instance.py:234 heat/engine/resources/instance.py:279
#: heat/engine/resources/loadbalancer.py:317
#: heat/engine/resources/loadbalancer.py:322
#: heat/engine/resources/loadbalancer.py:331
#: heat/engine/resources/loadbalancer.py:336
#: heat/engine/resources/loadbalancer.py:341
#: heat/engine/resources/loadbalancer.py:346 heat/engine/resources/user.py:47
#: heat/engine/resources/user.py:51 heat/engine/resources/user.py:143
#: heat/engine/resources/user.py:153
msgid "Not Implemented."
msgstr ""

#: heat/engine/resources/autoscaling.py:115
#: heat/engine/resources/autoscaling.py:481
msgid "Name of LaunchConfiguration resource."
msgstr ""

#: heat/engine/resources/autoscaling.py:121
msgid "Desired number of instances."
msgstr ""

#: heat/engine/resources/autoscaling.py:127
#: heat/engine/resources/autoscaling.py:522
msgid "List of LoadBalancer resources."
msgstr ""

#: heat/engine/resources/autoscaling.py:131
#: heat/engine/resources/autoscaling.py:538
msgid "Tags to attach to this group."
msgstr ""

#: heat/engine/resources/autoscaling.py:150
msgid "A comma-delimited list of server ip addresses. (Heat extension)."
msgstr ""

#: heat/engine/resources/autoscaling.py:411
#, python-format
msgid "Unsupported resource '%s' in LoadBalancerNames"
msgstr ""

#: heat/engine/resources/autoscaling.py:487
msgid "Maximum number of instances in the group."
msgstr ""

#: heat/engine/resources/autoscaling.py:493
msgid "Minimum number of instances in the group."
msgstr ""

#: heat/engine/resources/autoscaling.py:499
#: heat/engine/resources/autoscaling.py:872
#: heat/engine/resources/autoscaling.py:984
#: heat/engine/resources/autoscaling.py:1125
msgid "Cooldown period, in seconds."
msgstr ""

#: heat/engine/resources/autoscaling.py:504
msgid "Desired initial number of instances."
msgstr ""

#: heat/engine/resources/autoscaling.py:526
msgid ""
"Use only with Neutron, to list the internal subnet to which the instance "
"will be attached; needed only if multiple exist; list length must be "
"exactly 1."
msgstr ""

#: heat/engine/resources/autoscaling.py:532
msgid "UUID of the internal subnet to which the instance will be attached."
msgstr ""

#: heat/engine/resources/autoscaling.py:630
#, python-format
msgid "%(name)s NOT performing scaling adjustment, cooldown %(cooldown)s"
msgstr ""

#: heat/engine/resources/autoscaling.py:657
#, python-format
msgid "truncating growth to %s"
msgstr ""

#: heat/engine/resources/autoscaling.py:660
#, python-format
msgid "can not exceed %s"
msgstr ""

#: heat/engine/resources/autoscaling.py:664
#, python-format
msgid "truncating shrinkage to %s"
msgstr ""

#: heat/engine/resources/autoscaling.py:667
#, python-format
msgid "can not be less than %s"
msgstr ""

#: heat/engine/resources/autoscaling.py:681
#, python-format
msgid "Start resizing the group %(group)s"
msgstr ""

#: heat/engine/resources/autoscaling.py:696
msgid "Failed sending error notification"
msgstr ""

#: heat/engine/resources/autoscaling.py:701
#, python-format
msgid "End resizing the group %(group)s"
msgstr ""

#: heat/engine/resources/autoscaling.py:729
msgid "MinSize can not be greater than MaxSize"
msgstr ""

#: heat/engine/resources/autoscaling.py:733
msgid "The size of AutoScalingGroup can not be less than zero"
msgstr ""

#: heat/engine/resources/autoscaling.py:739
msgid "DesiredCapacity must be between MinSize and MaxSize"
msgstr ""

#: heat/engine/resources/autoscaling.py:748
msgid "Anything other than one VPCZoneIdentifier"
msgstr ""

#: heat/engine/resources/autoscaling.py:771
#: heat/engine/resources/instance.py:164
msgid "Glance image ID or name."
msgstr ""

#: heat/engine/resources/autoscaling.py:776
#: heat/engine/resources/instance.py:174
msgid "Nova instance type (flavor)."
msgstr ""

#: heat/engine/resources/autoscaling.py:781
#: heat/engine/resources/instance.py:180
msgid "Optional Nova keypair name."
msgstr ""

#: heat/engine/resources/autoscaling.py:785
#: heat/engine/resources/instance.py:287
msgid "User data to pass to instance."
msgstr ""

#: heat/engine/resources/autoscaling.py:789
#: heat/engine/resources/instance.py:221
msgid "Security group names to assign."
msgstr ""

#: heat/engine/resources/autoscaling.py:808
#: heat/engine/resources/instance.py:262
msgid "Scheduler hints to pass to Nova (Heat extension)."
msgstr ""

#: heat/engine/resources/autoscaling.py:849
msgid ""
"Resource definition for the resources in the group, in HOT format. The "
"value of this property is the definition of a resource just as if it had "
"been declared in the template itself."
msgstr ""

#: heat/engine/resources/autoscaling.py:858
msgid "Maximum number of resources in the group."
msgstr ""

#: heat/engine/resources/autoscaling.py:865
msgid "Minimum number of resources in the group."
msgstr ""

#: heat/engine/resources/autoscaling.py:877
msgid "Desired initial number of resources."
msgstr ""

#: heat/engine/resources/autoscaling.py:882
msgid "Policy for rolling updates for this scaling group."
msgstr ""

#: heat/engine/resources/autoscaling.py:888
msgid ""
"The minimum number of resources in service while rolling updates are "
"being executed."
msgstr ""

#: heat/engine/resources/autoscaling.py:894
msgid "The maximum number of resources to replace at once."
msgstr ""

#: heat/engine/resources/autoscaling.py:899
msgid "The number of seconds to wait between batches of updates."
msgstr ""

#: heat/engine/resources/autoscaling.py:962
msgid "AutoScaling group name to apply policy to."
msgstr ""

#: heat/engine/resources/autoscaling.py:967
#: heat/engine/resources/autoscaling.py:1108
msgid "Size of adjustment."
msgstr ""

#: heat/engine/resources/autoscaling.py:973
#: heat/engine/resources/autoscaling.py:1114
msgid "Type of adjustment (absolute or percentage)."
msgstr ""

#: heat/engine/resources/autoscaling.py:991
msgid "A signed url to handle the alarm. (Heat extension)."
msgstr ""

#: heat/engine/resources/autoscaling.py:1013
#: heat/engine/resources/instance.py:83 heat/tests/generic_resource.py:131
#, python-format
msgid "Cannot signal resource during %s"
msgstr ""

#: heat/engine/resources/autoscaling.py:1030
#: heat/engine/resources/instance.py:91
#, python-format
msgid "%(name)s Alarm, new state %(state)s"
msgstr ""

#: heat/engine/resources/autoscaling.py:1036
#, python-format
msgid "%(name)s NOT performing scaling action, cooldown %(cooldown)s"
msgstr ""

#: heat/engine/resources/autoscaling.py:1045
#, python-format
msgid "Alarm %(alarm)s could not find scaling group named \"%(group)s\""
msgstr ""

#: heat/engine/resources/autoscaling.py:1050
#, python-format
msgid ""
"%(name)s Alarm, adjusting Group %(group)s with id %(asgn_id)s by "
"%(filter)s"
msgstr ""

#: heat/engine/resources/autoscaling.py:1103
msgid "AutoScaling group ID to apply policy to."
msgstr ""

#: heat/engine/resources/autoscaling.py:1132
msgid "A signed url to handle the alarm."
msgstr ""

#: heat/engine/resources/cloud_watch.py:37
msgid "Operator used to compare the specified Statistic with Threshold."
msgstr ""

#: heat/engine/resources/cloud_watch.py:49
#: heat/engine/resources/ceilometer/alarm.py:35
msgid "Description for the alarm."
msgstr ""

#: heat/engine/resources/cloud_watch.py:54
#: heat/engine/resources/ceilometer/alarm.py:117
msgid "Number of periods to evaluate over."
msgstr ""

#: heat/engine/resources/cloud_watch.py:59
msgid "Metric name watched by the alarm."
msgstr ""

#: heat/engine/resources/cloud_watch.py:63
msgid "Namespace for the metric."
msgstr ""

#: heat/engine/resources/cloud_watch.py:67
#: heat/engine/resources/ceilometer/alarm.py:127
msgid "Period (seconds) to evaluate over."
msgstr ""

#: heat/engine/resources/cloud_watch.py:72
msgid "Metric statistic to evaluate."
msgstr ""

#: heat/engine/resources/cloud_watch.py:81
msgid "A list of actions to execute when state transitions to alarm."
msgstr ""

#: heat/engine/resources/cloud_watch.py:86
msgid "A list of actions to execute when state transitions to ok."
msgstr ""

#: heat/engine/resources/cloud_watch.py:91
msgid ""
"A list of dimensions (arbitrary name/value pairs) associated with the "
"metric."
msgstr ""

#: heat/engine/resources/cloud_watch.py:96
msgid "A list of actions to execute when state transitions to insufficient-data."
msgstr ""

#: heat/engine/resources/cloud_watch.py:102
#: heat/engine/resources/ceilometer/alarm.py:141
msgid "Threshold to evaluate against."
msgstr ""

#: heat/engine/resources/cloud_watch.py:107
msgid "Unit for the metric."
msgstr ""

#: heat/engine/resources/eip.py:44
msgid "Set to \"vpc\" to have IP address allocation associated to your VPC."
msgstr ""

#: heat/engine/resources/eip.py:52
msgid "Instance ID to associate with EIP."
msgstr ""

#: heat/engine/resources/eip.py:58
msgid ""
"ID that AWS assigns to represent the allocation of the address for use "
"with Amazon VPC. Returned only for VPC elastic IP addresses."
msgstr ""

#: heat/engine/resources/eip.py:76 heat/engine/resources/eip.py:83
#, python-format
msgid "Floating IPs not found: %s"
msgstr ""

#: heat/engine/resources/eip.py:100 heat/engine/resources/eip.py:117
#, python-format
msgid "ElasticIp create %s"
msgstr ""

#: heat/engine/resources/eip.py:103
#, python-format
msgid "Domain property can not be set on resource %s without Neutron available"
msgstr ""

#: heat/engine/resources/eip.py:110
msgid ""
"No default floating IP pool configured. Set 'default_floating_pool' in "
"nova.conf."
msgstr ""

#: heat/engine/resources/eip.py:167
msgid "Instance ID to associate with EIP specified by EIP property."
msgstr ""

#: heat/engine/resources/eip.py:171
msgid "EIP address to associate with instance."
msgstr ""

#: heat/engine/resources/eip.py:175
msgid "Allocation ID for VPC EIP address."
msgstr ""

#: heat/engine/resources/eip.py:179
msgid "Network interface ID to associate with EIP."
msgstr ""

#: heat/engine/resources/eip.py:196
msgid "Skipping association, InstanceId not specified"
msgstr ""

#: heat/engine/resources/eip.py:218
msgid "Skipping association, resource not specified"
msgstr ""

#: heat/engine/resources/glance_image.py:38
msgid ""
"Name for the image. The name of an image is not unique to a Image Service"
" node."
msgstr ""

#: heat/engine/resources/glance_image.py:43
msgid "The image ID. Glance will generate a UUID if not specified."
msgstr ""

#: heat/engine/resources/glance_image.py:47
msgid ""
"Scope of image accessibility. Public or private. Default value is False "
"means private."
msgstr ""

#: heat/engine/resources/glance_image.py:53
msgid ""
"Amount of disk space (in GB) required to boot image. Default value is 0 "
"if not specified and means no limit on the disk size."
msgstr ""

#: heat/engine/resources/glance_image.py:62
msgid ""
"Amount of ram (in MB) required to boot image. Default value is 0 if not "
"specified and means no limit on the ram size."
msgstr ""

#: heat/engine/resources/glance_image.py:70
msgid ""
"Whether the image can be deleted. If the value is True, the image is "
"protected and cannot be deleted."
msgstr ""

#: heat/engine/resources/glance_image.py:75
msgid "Disk format of image."
msgstr ""

#: heat/engine/resources/glance_image.py:85
msgid "Container format of image."
msgstr ""

#: heat/engine/resources/glance_image.py:94
msgid ""
"URL where the data for this image already resides. For example, if the "
"image data is stored in swift, you could specify "
"\"swift://example.com/container/obj\"."
msgstr ""

#: heat/engine/resources/glance_utils.py:58
#, python-format
msgid "Error retrieving image list from glance: %s"
msgstr ""

#: heat/engine/resources/glance_utils.py:61
#, python-format
msgid "Image %s was not found in glance"
msgstr ""

#: heat/engine/resources/glance_utils.py:65
#, python-format
msgid "Multiple images %s were found in glance with name"
msgstr ""

#: heat/engine/resources/instance.py:56
msgid "Instance ID to be restarted."
msgstr ""

#: heat/engine/resources/instance.py:63
msgid "A signed url to handle the alarm (Heat extension)."
msgstr ""

#: heat/engine/resources/instance.py:99
#, python-format
msgid "%(name)s Alarm, can not find instance %(instance)s"
msgstr ""

#: heat/engine/resources/instance.py:104
#, python-format
msgid "%(name)s Alarm, restarting resource: %(victim)s"
msgstr ""

#: heat/engine/resources/instance.py:187
msgid "Availability zone to launch the instance in."
msgstr ""

#: heat/engine/resources/instance.py:225
msgid "Security group IDs to assign."
msgstr ""

#: heat/engine/resources/instance.py:229
msgid "Network interfaces to associate with instance."
msgstr ""

#: heat/engine/resources/instance.py:239
msgid "Subnet ID to launch instance in."
msgstr ""

#: heat/engine/resources/instance.py:244
msgid "Tags to attach to instance."
msgstr ""

#: heat/engine/resources/instance.py:291
msgid "Volumes to attach to instance."
msgstr ""

#: heat/engine/resources/instance.py:298 heat/engine/resources/volume.py:436
msgid ""
"The device where the volume is exposed on the instance. This assignment "
"may not be honored and it is advised that the path /dev/disk/by-"
"id/virtio-<VolumeId> be used instead."
msgstr ""

#: heat/engine/resources/instance.py:307 heat/engine/resources/volume.py:430
#: heat/engine/resources/volume.py:707
msgid "The ID of the volume to be attached."
msgstr ""

#: heat/engine/resources/instance.py:317
msgid "The Availability Zone where the specified instance is launched."
msgstr ""

#: heat/engine/resources/instance.py:321
msgid "Private DNS name of the specified instance."
msgstr ""

#: heat/engine/resources/instance.py:324
msgid "Public DNS name of the specified instance."
msgstr ""

#: heat/engine/resources/instance.py:327
msgid "Private IP address of the specified instance."
msgstr ""

#: heat/engine/resources/instance.py:330
msgid "Public IP address of the specified instance."
msgstr ""

#: heat/engine/resources/instance.py:369
#, python-format
msgid "%(name)s._resolve_attribute(%(attname)s) == %(res)s"
msgstr ""

#: heat/engine/resources/instance.py:533
#, python-format
msgid "Creation of server %(server)s failed: %(message)s (%(code)s)"
msgstr ""

#: heat/engine/resources/instance.py:540 heat/engine/resources/server.py:551
#, python-format
msgid "Creation of server %(server)s failed with unknown status: %(status)s"
msgstr ""

#: heat/engine/resources/instance.py:743 heat/engine/resources/server.py:987
#, python-format
msgid "Cannot suspend %s, resource_id not set"
msgstr ""

#: heat/engine/resources/instance.py:749 heat/engine/resources/instance.py:804
#, python-format
msgid "Failed to find instance %s"
msgstr ""

#: heat/engine/resources/instance.py:781
#, python-format
msgid " nova reported unexpected instance[%(instance)s] status[%(status)s]"
msgstr ""

#: heat/engine/resources/instance.py:798 heat/engine/resources/server.py:1032
#, python-format
msgid "Cannot resume %s, resource_id not set"
msgstr ""

#: heat/engine/resources/internet_gateway.py:71
#, python-format
msgid "Expected 1 external network, found %d"
msgstr ""

#: heat/engine/resources/internet_gateway.py:87
msgid "VPC ID for this gateway association."
msgstr ""

#: heat/engine/resources/internet_gateway.py:92
msgid "ID of the InternetGateway."
msgstr ""

#: heat/engine/resources/internet_gateway.py:96
msgid "ID of the VPNGateway to attach to the VPC."
msgstr ""

#: heat/engine/resources/loadbalancer.py:246
msgid "The Availability Zones in which to create the load balancer."
msgstr ""

#: heat/engine/resources/loadbalancer.py:251
msgid "An application health check for the instances."
msgstr ""

#: heat/engine/resources/loadbalancer.py:255
msgid ""
"The number of consecutive health probe successes required before moving "
"the instance to the healthy state."
msgstr ""

#: heat/engine/resources/loadbalancer.py:262
msgid ""
"The approximate interval, in seconds, between health checks of an "
"individual instance."
msgstr ""

#: heat/engine/resources/loadbalancer.py:268
msgid "The port being checked."
msgstr ""

#: heat/engine/resources/loadbalancer.py:273
msgid "Health probe timeout, in seconds."
msgstr ""

#: heat/engine/resources/loadbalancer.py:278
msgid ""
"The number of consecutive health probe failures required before moving "
"the instance to the unhealthy state"
msgstr ""

#: heat/engine/resources/loadbalancer.py:287
msgid "The list of instance IDs load balanced."
msgstr ""

#: heat/engine/resources/loadbalancer.py:292
msgid "One or more listeners for this load balancer."
msgstr ""

#: heat/engine/resources/loadbalancer.py:298
msgid "TCP port on which the instance server is listening."
msgstr ""

#: heat/engine/resources/loadbalancer.py:304
msgid "The external load balancer port number."
msgstr ""

#: heat/engine/resources/loadbalancer.py:309
msgid "The load balancer transport protocol to use."
msgstr ""

#: heat/engine/resources/loadbalancer.py:353
msgid "The name of the hosted zone that is associated with the LoadBalancer."
msgstr ""

#: heat/engine/resources/loadbalancer.py:357
msgid "The ID of the hosted zone name that is associated with the LoadBalancer."
msgstr ""

#: heat/engine/resources/loadbalancer.py:361
msgid "The DNS name for the LoadBalancer."
msgstr ""

#: heat/engine/resources/loadbalancer.py:364
msgid ""
"The security group that you can use as part of your inbound rules for "
"your LoadBalancer's back-end instances."
msgstr ""

#: heat/engine/resources/loadbalancer.py:368
msgid "Owner of the source security group."
msgstr ""

#: heat/engine/resources/loadbalancer.py:439
#, python-format
msgid "Using custom loadbalancer template %s"
msgstr ""

#: heat/engine/resources/loadbalancer.py:508
msgid "Custom LoadBalancer template can not be found"
msgstr ""

#: heat/engine/resources/network_interface.py:46
msgid "Description for this interface."
msgstr ""

#: heat/engine/resources/network_interface.py:50
msgid "List of security group IDs associated with this interface."
msgstr ""

#: heat/engine/resources/network_interface.py:58
msgid "Flag indicating if traffic to or from instance is validated."
msgstr ""

#: heat/engine/resources/network_interface.py:63
msgid "Subnet ID to associate with this interface."
msgstr ""

#: heat/engine/resources/network_interface.py:70
msgid "List of tags associated with this interface."
msgstr ""

#: heat/engine/resources/network_interface.py:88
msgid "Private IP address of the network interface."
msgstr ""

#: heat/engine/resources/nova_floatingip.py:37
msgid "Allocate a floating IP from a given floating IP pool."
msgstr ""

#: heat/engine/resources/nova_floatingip.py:44
msgid "Pool from which floating IP is allocated."
msgstr ""

#: heat/engine/resources/nova_floatingip.py:47
msgid "Allocated floating IP address."
msgstr ""

#: heat/engine/resources/nova_floatingip.py:68
msgid ""
"Could not allocate floating IP. Probably there is no default floating IP "
"pool is configured."
msgstr ""

#: heat/engine/resources/nova_floatingip.py:101
msgid "Server to assign floating IP to."
msgstr ""

#: heat/engine/resources/nova_floatingip.py:107
msgid "ID of the floating IP to assign to the server."
msgstr ""

#: heat/engine/resources/nova_keypair.py:54
msgid "The name of the key pair."
msgstr ""

#: heat/engine/resources/nova_keypair.py:59
msgid ""
"True if the system should remember a generated private key; False "
"otherwise."
msgstr ""

#: heat/engine/resources/nova_keypair.py:65
msgid ""
"The optional public key. This allows users to supply the public key from "
"a pre-existing key pair. If not supplied, a new key pair will be "
"generated."
msgstr ""

#: heat/engine/resources/nova_keypair.py:73
msgid "The public key."
msgstr ""

#: heat/engine/resources/nova_keypair.py:76
msgid "The private key if it has been saved."
msgstr ""

#: heat/engine/resources/nova_servergroup.py:35
msgid "Server Group name."
msgstr ""

#: heat/engine/resources/nova_servergroup.py:39
msgid "A list of string policies to apply.Defaults to anti-affinity."
msgstr ""

#: heat/engine/resources/nova_utils.py:56
#, python-format
msgid ""
"Server %(name)s (%(id)s) received an OverLimit response during "
"server.get(): %(exception)s"
msgstr ""

#: heat/engine/resources/nova_utils.py:64
#, python-format
msgid ""
"Server \"%(name)s\" (%(id)s) received the following exception during "
"server.get(): %(exception)s"
msgstr ""

#: heat/engine/resources/nova_utils.py:280
#, python-format
msgid "Resizing to '%(flavor)s' failed, status '%(status)s'"
msgstr ""

#: heat/engine/resources/nova_utils.py:302
#, python-format
msgid "Rebuilding server failed, status '%s'"
msgstr ""

#: heat/engine/resources/nova_utils.py:334 heat/engine/resources/server.py:630
#, python-format
msgid "Instance (%(server)s) not found: %(ex)s"
msgstr ""

#: heat/engine/resources/os_database.py:61
msgid "Name of the DB instance to create."
msgstr ""

#: heat/engine/resources/os_database.py:69
msgid "Reference to a flavor for creating DB instance."
msgstr ""

#: heat/engine/resources/os_database.py:74
msgid "Database volume size in GB."
msgstr ""

#: heat/engine/resources/os_database.py:82
msgid "List of databases to be created on DB instance creation."
msgstr ""

#: heat/engine/resources/os_database.py:89
msgid "Set of symbols and encodings."
msgstr ""

#: heat/engine/resources/os_database.py:94
msgid "Set of rules for comparing characters in a character set."
msgstr ""

#: heat/engine/resources/os_database.py:100
msgid "Specifies database names for creating databases on instance creation."
msgstr ""

#: heat/engine/resources/os_database.py:115
msgid "List of users to be created on DB instance creation."
msgstr ""

#: heat/engine/resources/os_database.py:122
msgid "User name to create a user on instance creation."
msgstr ""

#: heat/engine/resources/os_database.py:134
msgid "Password for those users on instance creation."
msgstr ""

#: heat/engine/resources/os_database.py:145
msgid "The host from which a user is allowed to connect to the database."
msgstr ""

#: heat/engine/resources/os_database.py:151
msgid "Names of databases that those users can access on instance creation."
msgstr ""

#: heat/engine/resources/os_database.py:163
msgid "Name of the availability zone for DB instance."
msgstr ""

#: heat/engine/resources/os_database.py:167
msgid "DB instance restore point."
msgstr ""

#: heat/engine/resources/os_database.py:173
msgid "Hostname of the instance"
msgstr ""

#: heat/engine/resources/os_database.py:176
msgid "Api endpoint reference of the instance"
msgstr ""

#: heat/engine/resources/os_database.py:236
#, python-format
msgid ""
"Stack %(name)s (%(id)s) received an OverLimit response during "
"instance.get(): %(exception)s"
msgstr ""

#: heat/engine/resources/os_database.py:249
msgid "Database instance creation failed."
msgstr ""

#: heat/engine/resources/os_database.py:254
#, python-format
msgid ""
"Database instance %(database)s created (flavor:%(flavor)s, "
"volume:%(volume)s)"
msgstr ""

#: heat/engine/resources/os_database.py:308
msgid "Databases property is required if users property is provided"
msgstr ""

#: heat/engine/resources/os_database.py:315
#, python-format
msgid "Must provide access to at least one database for user %s"
msgstr ""

#: heat/engine/resources/os_database.py:323
#, python-format
msgid "Database %s specified for user does not exist in databases."
msgstr ""

#: heat/engine/resources/random_string.py:63
msgid "Length of the string to generate."
msgstr ""

#: heat/engine/resources/random_string.py:71
msgid "Sequence of characters to build the random string from."
msgstr ""

#: heat/engine/resources/random_string.py:80
#: heat/engine/resources/server.py:215 heat/engine/resources/volume.py:579
#: heat/engine/resources/neutron/floatingip.py:48
#: heat/engine/resources/neutron/loadbalancer.py:223
#: heat/engine/resources/neutron/network_gateway.py:101
#: heat/engine/resources/neutron/port.py:70
#: heat/engine/resources/neutron/port.py:106
#: heat/engine/resources/neutron/router.py:214
#: heat/engine/resources/neutron/router.py:309
#: heat/engine/resources/neutron/subnet.py:65
#: heat/engine/resources/neutron/vpnservice.py:68
#, python-format
msgid "Use property %s."
msgstr ""

#: heat/engine/resources/random_string.py:85
msgid ""
"A list of character class and their constraints to generate the random "
"string from."
msgstr ""

#: heat/engine/resources/random_string.py:92
#, python-format
msgid ""
"A character class and its corresponding %(min)s constraint to generate "
"the random string from."
msgstr ""

#: heat/engine/resources/random_string.py:104
msgid ""
"The minimum number of characters from this character class that will be "
"in the generated string."
msgstr ""

#: heat/engine/resources/random_string.py:117
msgid ""
"A list of character sequences and their constraints to generate the "
"random string from."
msgstr ""

#: heat/engine/resources/random_string.py:124
#, python-format
msgid ""
"A character sequence and its corresponding %(min)s constraint to generate"
" the random string from."
msgstr ""

#: heat/engine/resources/random_string.py:130
msgid ""
"The minimum number of characters from this sequence that will be in the "
"generated string."
msgstr ""

#: heat/engine/resources/random_string.py:143
msgid ""
"Value which can be set or changed on stack update to trigger the resource"
" for replacement with a new random string . The salt value itself is "
"ignored by the random generator."
msgstr ""

#: heat/engine/resources/random_string.py:151
msgid ""
"The random string generated by this resource. This value is also "
"available by referencing the resource."
msgstr ""

#: heat/engine/resources/random_string.py:231
#, python-format
msgid ""
"Cannot use deprecated '%(seq)s' property along with '%(char_seqs)s' or "
"'%(char_classes)s' properties"
msgstr ""

#: heat/engine/resources/random_string.py:247
msgid ""
"Length property cannot be smaller than combined character class and "
"character sequence minimums"
msgstr ""

#: heat/engine/resources/resource_group.py:67
msgid "The number of instances to create."
msgstr ""

#: heat/engine/resources/resource_group.py:76
msgid ""
"Resource definition for the resources in the group. The value of this "
"property is the definition of a resource just as if it had been declared "
"in the template itself."
msgstr ""

#: heat/engine/resources/resource_group.py:82
msgid "The type of the resources in the group"
msgstr ""

#: heat/engine/resources/resource_group.py:87
msgid "Property values for the resources in the group"
msgstr ""

#: heat/engine/resources/resource_group.py:96
msgid "A list of resource IDs for the resources in the group"
msgstr ""

#: heat/engine/resources/route_table.py:41
msgid "VPC ID for where the route table is created."
msgstr ""

#: heat/engine/resources/route_table.py:48
msgid "List of tags to be attached to this resource."
msgstr ""

#: heat/engine/resources/route_table.py:117
msgid "Route table ID."
msgstr ""

#: heat/engine/resources/route_table.py:122
msgid "Subnet ID."
msgstr ""

#: heat/engine/resources/s3.py:57
msgid ""
"A predefined access control list (ACL) that grants permissions on the "
"bucket."
msgstr ""

#: heat/engine/resources/s3.py:69
msgid "Information used to configure the bucket as a static website."
msgstr ""

#: heat/engine/resources/s3.py:73
msgid "The name of the index document."
msgstr ""

#: heat/engine/resources/s3.py:77
msgid "The name of the error document."
msgstr ""

#: heat/engine/resources/s3.py:83
msgid "Tags to attach to the bucket."
msgstr ""

#: heat/engine/resources/s3.py:89
msgid "The tag key name."
msgstr ""

#: heat/engine/resources/s3.py:94
msgid "The tag value."
msgstr ""

#: heat/engine/resources/s3.py:104
msgid "The DNS name of the specified bucket."
msgstr ""

#: heat/engine/resources/s3.py:107
msgid "The website endpoint for the specified bucket."
msgstr ""

#: heat/engine/resources/s3.py:158 heat/engine/resources/swift.py:150
#, python-format
msgid "Delete container failed: %s"
msgstr ""

#: heat/engine/resources/security_group.py:67
#: heat/engine/resources/neutron/security_group.py:114
msgid "Description of the security group."
msgstr ""

#: heat/engine/resources/security_group.py:72
msgid "Physical ID of the VPC."
msgstr ""

#: heat/engine/resources/security_group.py:78
msgid "List of security group ingress rules."
msgstr ""

#: heat/engine/resources/security_group.py:86
msgid "List of security group egress rules."
msgstr ""

#: heat/engine/resources/security_group.py:281
#, python-format
msgid "Security Group \"%(group_name)s\" not found"
msgstr ""

#: heat/engine/resources/server.py:100
msgid "Server name."
msgstr ""

#: heat/engine/resources/server.py:105
msgid "The ID or name of the image to boot with."
msgstr ""

#: heat/engine/resources/server.py:113
msgid "Block device mappings for this server."
msgstr ""

#: heat/engine/resources/server.py:119
msgid ""
"A device name where the volume will be attached in the system at "
"/dev/device_name. This value is typically vda."
msgstr ""

#: heat/engine/resources/server.py:126
msgid ""
"The ID of the volume to boot from. Only one of volume_id or snapshot_id "
"should be provided."
msgstr ""

#: heat/engine/resources/server.py:132
msgid "The ID of the snapshot to create a volume from."
msgstr ""

#: heat/engine/resources/server.py:137
msgid ""
"The size of the volume, in GB. It is safe to leave this blank and have "
"the Compute service infer the size."
msgstr ""

#: heat/engine/resources/server.py:143
msgid ""
"Indicate whether the volume should be deleted when the server is "
"terminated."
msgstr ""

#: heat/engine/resources/server.py:151
msgid "The ID or name of the flavor to boot onto."
msgstr ""

#: heat/engine/resources/server.py:157
msgid ""
"Policy on how to apply a flavor update; either by requesting a server "
"resize or by replacing the entire server."
msgstr ""

#: heat/engine/resources/server.py:167
msgid ""
"Policy on how to apply an image-id update; either by requesting a server "
"rebuild or by replacing the entire server"
msgstr ""

#: heat/engine/resources/server.py:178
msgid "Name of keypair to inject into the server."
msgstr ""

#: heat/engine/resources/server.py:185
msgid ""
"Name of the administrative user to use on the server. This property will "
"be removed from Juno in favor of the default cloud-init user set up for "
"each image (e.g. \"ubuntu\" for Ubuntu 12.04+, \"fedora\" for Fedora 19+ "
"and \"cloud-user\" for CentOS/RHEL 6.5)."
msgstr ""

#: heat/engine/resources/server.py:194
msgid "Name of the availability zone for server placement."
msgstr ""

#: heat/engine/resources/server.py:198
msgid ""
"List of security group names or IDs. Cannot be used if neutron ports are "
"associated with this server; assign security groups to the ports instead."
msgstr ""

#: heat/engine/resources/server.py:205
msgid ""
"An ordered list of nics to be added to this server, with information "
"about connected networks, fixed ips, port etc."
msgstr ""

#: heat/engine/resources/server.py:212
msgid "ID of network to create a port on."
msgstr ""

#: heat/engine/resources/server.py:219
msgid "Name or ID of network to create a port on."
msgstr ""

#: heat/engine/resources/server.py:223
msgid "Fixed IP address to specify for the port created on the requested network."
msgstr ""

#: heat/engine/resources/server.py:228
msgid "ID of an existing port to associate with this server."
msgstr ""

#: heat/engine/resources/server.py:237
msgid "Arbitrary key-value pairs specified by the client to help boot a server."
msgstr ""

#: heat/engine/resources/server.py:242
msgid ""
"Arbitrary key/value metadata to store for this server. Both keys and "
"values must be 255 characters or less.  Non-string values will be "
"serialized to JSON (and the serialized string must be 255 characters or "
"less)."
msgstr ""

#: heat/engine/resources/server.py:250
msgid ""
"How the user_data should be formatted for the server. For HEAT_CFNTOOLS, "
"the user_data is bundled as part of the heat-cfntools cloud-init boot "
"configuration data. For RAW the user_data is passed to Nova unmodified. "
"For SOFTWARE_CONFIG user_data is bundled as part of the software config "
"data, and metadata is derived from any associated SoftwareDeployment "
"resources."
msgstr ""

#: heat/engine/resources/server.py:264
msgid ""
"How the server should receive the metadata required for software "
"configuration. POLL_SERVER_CFN will allow calls to the cfn API action "
"DescribeStackResource authenticated with the provided keypair. "
"POLL_SERVER_HEAT will allow calls to the Heat API resource-show using the"
" provided keystone credentials."
msgstr ""

#: heat/engine/resources/server.py:277
msgid "User data script to be executed by cloud-init."
msgstr ""

#: heat/engine/resources/server.py:282
msgid "A UUID for the set of servers being requested."
msgstr ""

#: heat/engine/resources/server.py:286
msgid "If True, enable config drive on the server."
msgstr ""

#: heat/engine/resources/server.py:290
msgid "Control how the disk is partitioned when the server is created."
msgstr ""

#: heat/engine/resources/server.py:298
msgid ""
"A map of files to create/overwrite on the server upon boot. Keys are file"
" names and values are the file contents."
msgstr ""

#: heat/engine/resources/server.py:304
msgid "The administrator password for the server."
msgstr ""

#: heat/engine/resources/server.py:312
msgid "Name of the server."
msgstr ""

#: heat/engine/resources/server.py:315
msgid "A dict of all server details as returned by the API."
msgstr ""

#: heat/engine/resources/server.py:318
msgid "A dict of all network addresses with corresponding port_id."
msgstr ""

#: heat/engine/resources/server.py:321
msgid ""
"A dict of assigned network addresses of the form: {\"public\": [ip1, "
"ip2...], \"private\": [ip3, ip4]}."
msgstr ""

#: heat/engine/resources/server.py:325
msgid ""
"Convenience attribute to fetch the first assigned network address, or an "
"empty string if nothing has been assigned at this time. Result may not be"
" predictable if the server has addresses from more than one network."
msgstr ""

#: heat/engine/resources/server.py:331
msgid ""
"Use the networks attribute instead of first_address. For example: "
"\"{get_attr: [<server name>, networks, <network name>, 0]}\""
msgstr ""

#: heat/engine/resources/server.py:337
msgid "AWS compatible instance name."
msgstr ""

#: heat/engine/resources/server.py:340
msgid "The manually assigned alternative public IPv4 address of the server."
msgstr ""

#: heat/engine/resources/server.py:344
msgid "The manually assigned alternative public IPv6 address of the server."
msgstr ""

#: heat/engine/resources/server.py:547
#, python-format
msgid "Creation of server %s failed."
msgstr ""

#: heat/engine/resources/server.py:881
#, python-format
msgid "Either volume_id or snapshot_id must be specified for device mapping %s"
msgstr ""

#: heat/engine/resources/server.py:888
#, python-format
msgid "Neither image nor bootable volume is specified for instance %s"
msgstr ""

#: heat/engine/resources/server.py:901
#, python-format
msgid ""
"Properties \"%(uuid)s\" and \"%(id)s\" are both set to the network "
"\"%(network)s\" for the server \"%(server)s\". The \"%(uuid)s\" property "
"is deprecated. Use only \"%(id)s\" property."
msgstr ""

#: heat/engine/resources/server.py:911
#, python-format
msgid ""
"For the server \"%(server)s\" the \"%(uuid)s\" property is set to network"
" \"%(network)s\". \"%(uuid)s\" property is deprecated. Use \"%(id)s\"  "
"property instead."
msgstr ""

#: heat/engine/resources/server.py:937
#, python-format
msgid ""
"Instance metadata must not contain greater than %s entries.  This is the "
"maximum number allowed by your service provider"
msgstr ""

#: heat/engine/resources/server.py:946
#, python-format
msgid "The personality property may not contain greater than %s entries."
msgstr ""

#: heat/engine/resources/server.py:952
#, python-format
msgid ""
"The contents of personality file \"%(path)s\" is larger than the maximum "
"allowed personality file size (%(max_size)s bytes)."
msgstr ""

#: heat/engine/resources/server.py:993 heat/engine/resources/server.py:1038
#, python-format
msgid "Failed to find server %s"
msgstr ""

#: heat/engine/resources/server.py:1019
#, python-format
msgid "Suspend of server %(server)s failed with unknown status: %(status)s"
msgstr ""

#: heat/engine/resources/stack.py:37
msgid ""
"The URL of a template that specifies the stack to be created as a "
"resource."
msgstr ""

#: heat/engine/resources/stack.py:44
msgid "The length of time, in minutes, to wait for the nested stack creation."
msgstr ""

#: heat/engine/resources/stack.py:50
msgid "The set of parameters passed to this nested stack."
msgstr ""

#: heat/engine/resources/stack.py:59 heat/engine/resources/stack.py:102
#, python-format
msgid "Could not fetch remote template '%(url)s': %(exc)s"
msgstr ""

#: heat/engine/resources/subnet.py:38
msgid "Availability zone in which you want the subnet."
msgstr ""

#: heat/engine/resources/subnet.py:42
msgid "CIDR block to apply to subnet."
msgstr ""

#: heat/engine/resources/subnet.py:47
msgid ""
"Ref structure that contains the ID of the VPC on which you want to create"
" the subnet."
msgstr ""

#: heat/engine/resources/subnet.py:55
msgid "List of tags to attach to this resource."
msgstr ""

#: heat/engine/resources/swift.py:46
msgid "Name for the container. If not specified, a unique name will be generated."
msgstr ""

#: heat/engine/resources/swift.py:51
msgid "Specify the ACL permissions on who can read objects in the container."
msgstr ""

#: heat/engine/resources/swift.py:56
msgid "Specify the ACL permissions on who can write objects to the container."
msgstr ""

#: heat/engine/resources/swift.py:61
msgid ""
"A map of user-defined meta data to associate with the container. Each key"
" in the map will set the header X-Container-Meta-{key} with the "
"corresponding value."
msgstr ""

#: heat/engine/resources/swift.py:68
msgid ""
"A map of user-defined meta data to associate with the account. Each key "
"in the map will set the header X-Account-Meta-{key} with the "
"corresponding value."
msgstr ""

#: heat/engine/resources/swift.py:77
msgid "The host from the container URL."
msgstr ""

#: heat/engine/resources/swift.py:80
msgid "The URL of the container."
msgstr ""

#: heat/engine/resources/swift.py:83
msgid "The parent URL of the container."
msgstr ""

#: heat/engine/resources/swift.py:86
msgid "The number of objects stored in the container."
msgstr ""

#: heat/engine/resources/swift.py:89
msgid "The number of bytes stored in the container."
msgstr ""

#: heat/engine/resources/swift.py:92
msgid "A map containing all headers for the container."
msgstr ""

#: heat/engine/resources/swift.py:169
#, python-format
msgid "Head container failed: %s"
msgstr ""

#: heat/engine/resources/template_resource.py:64
msgid "Only Templates with an extension of .yaml or .template are supported"
msgstr ""

#: heat/engine/resources/template_resource.py:159
#, python-format
msgid "Could not fetch remote template '%(name)s': %(exc)s"
msgstr ""

#: heat/engine/resources/template_resource.py:172
#, python-format
msgid "Unknown error retrieving %s"
msgstr ""

#: heat/engine/resources/template_resource.py:181
#, python-format
msgid "Required property %(n)s for facade %(type)s missing in provider"
msgstr ""

#: heat/engine/resources/template_resource.py:189
#, python-format
msgid ""
"Property %(n)s type mismatch between facade %(type)s (%(fs_type)s) and "
"provider (%(ps_type)s)"
msgstr ""

#: heat/engine/resources/template_resource.py:198
#, python-format
msgid "Provider requires property %(n)s unknown in facade %(type)s"
msgstr ""

#: heat/engine/resources/template_resource.py:205
#, python-format
msgid "Attribute %(attr)s for facade %(type)s missing in provider"
msgstr ""

#: heat/engine/resources/template_resource.py:218
#, python-format
msgid "Failed to retrieve template data: %s"
msgstr ""

#: heat/engine/resources/user.py:55
msgid "A login profile for the user."
msgstr ""

#: heat/engine/resources/user.py:64
msgid "Access policies to apply to the user."
msgstr ""

#: heat/engine/resources/user.py:79 heat/engine/resources/user.py:118
#, python-format
msgid "Ignoring policy %s, must be string resource name"
msgstr ""

#: heat/engine/resources/user.py:86
#, python-format
msgid "Policy %(policy)s does not exist in stack %(stack)s"
msgstr ""

#: heat/engine/resources/user.py:92
#, python-format
msgid "Policy %s is not an AccessPolicy resource"
msgstr ""

#: heat/engine/resources/user.py:148
msgid "The name of the user that the new key will belong to."
msgstr ""

#: heat/engine/resources/user.py:163
msgid "Username associated with the AccessKey."
msgstr ""

#: heat/engine/resources/user.py:167
msgid "Keypair secret key."
msgstr ""

#: heat/engine/resources/user.py:195
#, python-format
msgid "could not find user %s"
msgstr ""

#: heat/engine/resources/user.py:215
#, python-format
msgid "Error deleting %s - user not found"
msgstr ""

#: heat/engine/resources/user.py:225 heat/engine/resources/user.py:245
#, python-format
msgid "could not get secret for %(username)s Error:%(msg)s"
msgstr ""

#: heat/engine/resources/user.py:276
msgid ""
"Resources that users are allowed to access by the DescribeStackResource "
"API."
msgstr ""

#: heat/engine/resources/user.py:293
#, python-format
msgid "AccessPolicy resource %s not in stack"
msgstr ""

#: heat/engine/resources/volume.py:50 heat/engine/resources/volume.py:535
msgid "The availability zone in which the volume will be created."
msgstr ""

#: heat/engine/resources/volume.py:55 heat/engine/resources/volume.py:539
msgid ""
"The size of the volume in GB. On update only increase in size is "
"supported."
msgstr ""

#: heat/engine/resources/volume.py:64
msgid "If specified, the backup used as the source to create the volume."
msgstr ""

#: heat/engine/resources/volume.py:69
msgid "The list of tags to associate with the volume."
msgstr ""

#: heat/engine/resources/volume.py:113
msgid "Backups not supported."
msgstr ""

#: heat/engine/resources/volume.py:158
msgid "can not delete volume when in-use"
msgstr ""

#: heat/engine/resources/volume.py:159
msgid "Volume in use"
msgstr ""

#: heat/engine/resources/volume.py:192
msgid "Shrinking volume"
msgstr ""

#: heat/engine/resources/volume.py:243
#, python-format
msgid "Resizing volume %(vol)s to size %(size)i"
msgstr ""

#: heat/engine/resources/volume.py:259
#, python-format
msgid "Failed to extend volume %(vol)s - %(err)s"
msgstr ""

#: heat/engine/resources/volume.py:272
#, python-format
msgid "Resize failed: Volume %(vol)s is in %(status)s state."
msgstr ""

#: heat/engine/resources/volume.py:276 heat/engine/resources/volume.py:327
#, python-format
msgid "%s - complete"
msgstr ""

#: heat/engine/resources/volume.py:344
#, python-format
msgid "Removing attachment %(att)s from Instance %(srv)s"
msgstr ""

#: heat/engine/resources/volume.py:367 heat/engine/resources/volume.py:392
#, python-format
msgid "%s - volume not found"
msgstr ""

#: heat/engine/resources/volume.py:375
#, python-format
msgid "%(res)s - %(err)s"
msgstr ""

#: heat/engine/resources/volume.py:386
#, python-format
msgid "%(name)s - status: %(status)s"
msgstr ""

#: heat/engine/resources/volume.py:406
#, python-format
msgid "Server %(srv)s still has attachment %(att)s."
msgstr ""

#: heat/engine/resources/volume.py:410
#, python-format
msgid "Volume %(vol)s is detached from server %(srv)s"
msgstr ""

#: heat/engine/resources/volume.py:424
msgid "The ID of the instance to which the volume attaches."
msgstr ""

#: heat/engine/resources/volume.py:548
msgid "If specified, the snapshot to create the volume from."
msgstr ""

#: heat/engine/resources/volume.py:552
msgid "If specified, the backup to create the volume from."
msgstr ""

#: heat/engine/resources/volume.py:556
msgid "A name used to distinguish the volume."
msgstr ""

#: heat/engine/resources/volume.py:561
msgid "A description of the volume."
msgstr ""

#: heat/engine/resources/volume.py:566
msgid "If specified, the type of volume to use, mapping to a specific backend."
msgstr ""

#: heat/engine/resources/volume.py:571
msgid "Key/value pairs to associate with the volume."
msgstr ""

#: heat/engine/resources/volume.py:576
msgid "The ID of the image to create the volume from."
msgstr ""

#: heat/engine/resources/volume.py:583
msgid "If specified, the name or ID of the image to create the volume from."
msgstr ""

#: heat/engine/resources/volume.py:591
msgid "If specified, the volume to use as source."
msgstr ""

#: heat/engine/resources/volume.py:597
msgid "The availability zone in which the volume is located."
msgstr ""

#: heat/engine/resources/volume.py:600
msgid "The size of the volume in GB."
msgstr ""

#: heat/engine/resources/volume.py:603
msgid "The snapshot the volume was created from, if any."
msgstr ""

#: heat/engine/resources/volume.py:606
msgid "Name of the volume."
msgstr ""

#: heat/engine/resources/volume.py:609
msgid "Description of the volume."
msgstr ""

#: heat/engine/resources/volume.py:612
msgid "The type of the volume mapping to a backend, if any."
msgstr ""

#: heat/engine/resources/volume.py:615
msgid "Key/value pairs associated with the volume."
msgstr ""

#: heat/engine/resources/volume.py:618
msgid "The volume used as source, if any."
msgstr ""

#: heat/engine/resources/volume.py:621
msgid "The current status of the volume."
msgstr ""

#: heat/engine/resources/volume.py:624
msgid "The timestamp indicating volume creation."
msgstr ""

#: heat/engine/resources/volume.py:627
msgid "Boolean indicating if the volume can be booted or not."
msgstr ""

#: heat/engine/resources/volume.py:701
msgid "The ID of the server to which the volume attaches."
msgstr ""

#: heat/engine/resources/volume.py:713
msgid ""
"The location where the volume is exposed on the instance. This assignment"
" may not be honored and it is advised that the path /dev/disk/by-"
"id/virtio-<VolumeId> be used instead."
msgstr ""

#: heat/engine/resources/vpc.py:39
msgid "CIDR block to apply to the VPC."
msgstr ""

#: heat/engine/resources/vpc.py:43
msgid ""
"Allowed tenancy of instances launched in the VPC. default - any tenancy; "
"dedicated - instance will be dedicated, regardless of the tenancy option "
"specified at instance launch."
msgstr ""

#: heat/engine/resources/vpc.py:57
msgid "List of tags to attach to the instance."
msgstr ""

#: heat/engine/resources/vpc.py:100
#, python-format
msgid "Multiple routers found with name %s"
msgstr ""

#: heat/engine/resources/wait_condition.py:86
#, python-format
msgid "Overwriting Metadata item for UniqueId %s!"
msgstr ""

#: heat/engine/resources/wait_condition.py:94
#, python-format
msgid "Metadata failed validation for %s"
msgstr ""

#: heat/engine/resources/wait_condition.py:95
msgid "Metadata format invalid"
msgstr ""

#: heat/engine/resources/wait_condition.py:147
#, python-format
msgid "%(len)d of %(count)d received - %(reasons)s"
msgstr ""

#: heat/engine/resources/wait_condition.py:149
#, python-format
msgid "%(len)d of %(count)d received"
msgstr ""

#: heat/engine/resources/wait_condition.py:169
msgid ""
"A reference to the wait condition handle used to signal this wait "
"condition."
msgstr ""

#: heat/engine/resources/wait_condition.py:175
msgid "The number of seconds to wait for the correct number of signals to arrive."
msgstr ""

#: heat/engine/resources/wait_condition.py:184
msgid ""
"The number of success signals that must be received before the stack "
"creation process continues."
msgstr ""

#: heat/engine/resources/wait_condition.py:196
msgid ""
"JSON serialized dict containing data associated with wait condition "
"signals sent to the handle."
msgstr ""

#: heat/engine/resources/wait_condition.py:209
#, python-format
msgid "WaitCondition invalid Handle tenant %s"
msgstr ""

#: heat/engine/resources/wait_condition.py:212
#: heat/engine/resources/wait_condition.py:215
#, python-format
msgid "WaitCondition invalid Handle stack %s"
msgstr ""

#: heat/engine/resources/wait_condition.py:218
#: heat/engine/resources/wait_condition.py:222
#, python-format
msgid "WaitCondition invalid Handle %s"
msgstr ""

#: heat/engine/resources/wait_condition.py:236
#, python-format
msgid "%(name)s Timed out (%(timeout)s)"
msgstr ""

#: heat/engine/resources/wait_condition.py:244
#, python-format
msgid "%(name)s Failed (%(failure)s)"
msgstr ""

#: heat/engine/resources/wait_condition.py:249
#, python-format
msgid "%s Succeeded"
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:40
msgid "True if alarm evaluation/actioning is enabled."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:46
msgid "A list of URLs (webhooks) to invoke when state transitions to alarm."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:52
msgid "A list of URLs (webhooks) to invoke when state transitions to ok."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:58
msgid ""
"A list of URLs (webhooks) to invoke when state transitions to "
"insufficient-data."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:64
msgid ""
"False to trigger actions when the threshold is reached AND the alarm's "
"state has changed. By default, actions are called each time the threshold"
" is reached."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:108
msgid "Operator used to compare specified statistic with threshold."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:122
msgid "Meter name watched by the alarm."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:132
msgid "Meter statistic to evaluate."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:147
msgid ""
"Meter should match this resource metadata (key=value) additionally to the"
" meter_name."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:214
msgid "List of alarm identifiers to combine."
msgstr ""

#: heat/engine/resources/ceilometer/alarm.py:220
msgid "Operator used to combine the alarms."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:46
#: heat/engine/resources/neutron/firewall.py:73
msgid "Name for the firewall."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:51
msgid "Description for the firewall."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:56
msgid ""
"Administrative state of the firewall. If false (down), firewall does not "
"forward packets and will drop all traffic to/from VMs behind the "
"firewall."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:64
msgid "The ID of the firewall policy that this firewall is associated with."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:76
msgid "Description of the firewall."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:79
msgid "The administrative state of the firewall."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:82
msgid "Unique identifier of the firewall policy used to create the firewall."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:86
msgid "The status of the firewall."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:89
#: heat/engine/resources/neutron/firewall.py:364
msgid "Id of the tenant owning the firewall."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:92
#: heat/engine/resources/neutron/floatingip.py:95
#: heat/engine/resources/neutron/loadbalancer.py:143
#: heat/engine/resources/neutron/loadbalancer.py:572
#: heat/engine/resources/neutron/net.py:102
#: heat/engine/resources/neutron/network_gateway.py:138
#: heat/engine/resources/neutron/port.py:200
#: heat/engine/resources/neutron/provider_net.py:79
#: heat/engine/resources/neutron/router.py:115
#: heat/engine/resources/neutron/subnet.py:186
#: heat/engine/resources/neutron/vpnservice.py:109
msgid "All attributes."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:144
#: heat/engine/resources/neutron/firewall.py:178
msgid "Name for the firewall policy."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:149
msgid "Description for the firewall policy."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:154
msgid "Whether this policy should be shared across all tenants."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:160
msgid ""
"Whether this policy should be audited. When set to True, each time the "
"firewall policy or the associated firewall rules are changed, this "
"attribute will be set to False and will have to be explicitly set to True"
" through an update operation."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:170
msgid "An ordered list of firewall rules to apply to the firewall."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:181
msgid "Description of the firewall policy."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:184
msgid "List of firewall rules in this firewall policy."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:187
msgid "Shared status of this firewall policy."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:190
msgid "Audit status of this firewall policy."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:193
msgid "Id of the tenant owning the firewall policy."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:254
#: heat/engine/resources/neutron/firewall.py:324
msgid "Name for the firewall rule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:259
msgid "Description for the firewall rule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:264
msgid "Whether this rule should be shared across all tenants."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:270
msgid "Protocol for the firewall rule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:278
msgid "Internet protocol version."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:287
msgid "Source IP address or CIDR."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:292
msgid "Destination IP address or CIDR."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:297
msgid "Source port number or a range."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:302
msgid "Destination port number or a range."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:307
msgid "Action to be performed on the traffic matching the rule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:316
msgid "Whether this rule should be enabled."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:327
msgid "Description of the firewall rule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:330
msgid ""
"Unique identifier of the firewall policy to which this firewall rule "
"belongs."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:334
msgid "Shared status of this firewall rule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:337
msgid "Protocol value for this firewall rule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:340
msgid "Ip_version for this firewall rule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:343
msgid "Source ip_address for this firewall rule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:346
msgid "Destination ip_address for this firewall rule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:349
msgid "Source port range for this firewall rule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:352
msgid "Destination port range for this firewall rule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:355
msgid "Allow or deny action for this firewall rule."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:358
msgid "Indicates whether this firewall rule is enabled or not."
msgstr ""

#: heat/engine/resources/neutron/firewall.py:361
msgid "Position of the rule within the firewall policy."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:53
msgid "Network to allocate floating IP from."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:58
msgid ""
"Extra parameters to include in the \"floatingip\" object in the creation "
"request. Parameters are often specific to installed hardware or "
"extensions."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:65
#: heat/engine/resources/neutron/floatingip.py:157
msgid ""
"ID of an existing port with at least one IP address to associate with "
"this floating IP."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:70
#: heat/engine/resources/neutron/floatingip.py:164
msgid "IP address to use if the port has multiple addresses."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:76
msgid "ID of the router used as gateway, set when associated with a port."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:80
msgid "The tenant owning this floating IP."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:83
msgid "ID of the network in which this IP is allocated."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:86
msgid "IP address of the associated port, if specified."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:89
msgid "The allocated address of this IP."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:92
msgid "ID of the port associated with this IP."
msgstr ""

#: heat/engine/resources/neutron/floatingip.py:151
msgid "ID of the floating IP to associate."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:56
#: heat/engine/resources/neutron/loadbalancer.py:114
msgid "The minimum time in seconds between regular connections of the member."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:63
#: heat/engine/resources/neutron/loadbalancer.py:133
msgid "One of predefined health monitor types."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:71
#: heat/engine/resources/neutron/loadbalancer.py:125
msgid ""
"Number of permissible connection failures before changing the member "
"status to INACTIVE."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:78
#: heat/engine/resources/neutron/loadbalancer.py:129
msgid ""
"Maximum number of seconds for a monitor to wait for a connection to be "
"established before it times out."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:85
msgid "The administrative state of the health monitor."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:91
#: heat/engine/resources/neutron/loadbalancer.py:122
msgid "The HTTP method used for requests by the monitor of type HTTP."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:97
#: heat/engine/resources/neutron/loadbalancer.py:118
msgid ""
"The list of HTTP status codes expected in response from the member to "
"declare it healthy."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:103
#: heat/engine/resources/neutron/loadbalancer.py:136
msgid ""
"The HTTP path used in the HTTP request used by the monitor to test a "
"member health."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:111
msgid "The administrative state of this health monitor."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:140
msgid "Tenant owning the health monitor."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:213
msgid "Protocol for balancing."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:228
#: heat/engine/resources/neutron/loadbalancer.py:336
msgid ""
"The subnet for the port on which the members of the pool will be "
"connected."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:234
#: heat/engine/resources/neutron/loadbalancer.py:340
msgid "The algorithm used to distribute load between the members of the pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:245
#: heat/engine/resources/neutron/loadbalancer.py:330
msgid "Name of the pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:249
#: heat/engine/resources/neutron/loadbalancer.py:344
msgid "Description of the pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:254
#: heat/engine/resources/neutron/loadbalancer.py:327
msgid "The administrative state of this pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:260
msgid "IP address and port of the pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:264
msgid "Name of the vip."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:268
msgid "Description of the vip."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:272
msgid "Subnet of the vip."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:276
msgid "IP address of the vip."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:280
msgid "The maximum number of connections per second allowed for the vip."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:285
msgid ""
"TCP port on which to listen for client traffic that is associated with "
"the vip address."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:291
msgid "Configuration of session persistence."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:295
msgid "Method of implementation of session persistence feature."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:304
msgid "Name of the cookie, required if type is APP_COOKIE."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:311
msgid "The administrative state of this vip."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:319
msgid "List of health monitors associated with the pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:333
msgid "Protocol to balance."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:347
msgid "Tenant owning the pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:350
msgid "Vip associated with the pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:370
#: heat/tests/test_neutron_loadbalancer.py:621
msgid ""
"Property cookie_name is required, when session_persistence type is set to"
" APP_COOKIE."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:428
#, python-format
msgid "neutron reported unexpected vip resource[%(name)s] status[%(status)s]"
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:433
#, python-format
msgid "neutron reported unexpected pool resource[%(name)s] status[%(status)s]"
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:518
#: heat/engine/resources/neutron/loadbalancer.py:565
#: heat/engine/resources/neutron/loadbalancer.py:629
msgid "The ID of the load balancing pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:524
msgid "IP address of the pool member on the pool network."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:529
#: heat/engine/resources/neutron/loadbalancer.py:568
msgid "TCP port on which the pool member listens for requests or connections."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:538
msgid "Weight of pool member in the pool (default to 1)."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:546
msgid "The administrative state of the pool member."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:553
msgid "The administrative state of this pool member."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:556
msgid "Tenant owning the pool member."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:559
msgid "Weight of the pool member in the pool."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:562
msgid "IP address of the pool member."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:635
msgid "Port number on which the servers are running on the members."
msgstr ""

#: heat/engine/resources/neutron/loadbalancer.py:640
msgid "The list of Nova server IDs load balanced."
msgstr ""

#: heat/engine/resources/neutron/metering.py:44
#: heat/engine/resources/neutron/metering.py:54
msgid "Name of the metering label."
msgstr ""

#: heat/engine/resources/neutron/metering.py:48
#: heat/engine/resources/neutron/metering.py:57
msgid "Description of the metering label."
msgstr ""

#: heat/engine/resources/neutron/metering.py:106
#: heat/engine/resources/neutron/metering.py:140
msgid "The metering label ID to associate with this metering rule."
msgstr ""

#: heat/engine/resources/neutron/metering.py:111
msgid "Indicates remote IP prefix to be associated with this metering rule."
msgstr ""

#: heat/engine/resources/neutron/metering.py:117
msgid "The direction in which metering rule is applied, either ingress or egress."
msgstr ""

#: heat/engine/resources/neutron/metering.py:125
msgid ""
"Specify whether the remote_ip_prefix will be excluded or not from traffic"
" counters of the metering label. For example to not count the traffic of "
"a specific IP address of a range."
msgstr ""

#: heat/engine/resources/neutron/metering.py:134
msgid "The direction in which metering rule is applied."
msgstr ""

#: heat/engine/resources/neutron/metering.py:137
msgid "Exclude state for cidr."
msgstr ""

#: heat/engine/resources/neutron/metering.py:143
msgid "CIDR to be associated with this metering rule."
msgstr ""

#: heat/engine/resources/neutron/net.py:43
msgid ""
"A string specifying a symbolic name for the network, which is not "
"required to be unique."
msgstr ""

#: heat/engine/resources/neutron/net.py:49
msgid ""
"Extra parameters to include in the \"network\" object in the creation "
"request. Parameters are often specific to installed hardware or "
"extensions."
msgstr ""

#: heat/engine/resources/neutron/net.py:57
msgid "A boolean value specifying the administrative status of the network."
msgstr ""

#: heat/engine/resources/neutron/net.py:64
msgid ""
"The ID of the tenant which will own the network. Only administrative "
"users can set the tenant identifier; this cannot be changed using "
"authorization policies."
msgstr ""

#: heat/engine/resources/neutron/net.py:70
msgid ""
"Whether this network should be shared across all tenants. Note that the "
"default policy setting restricts usage of this attribute to "
"administrative users only."
msgstr ""

#: heat/engine/resources/neutron/net.py:78
msgid ""
"The IDs of the DHCP agent to schedule the network. Note that the default "
"policy setting in Neutron restricts usage of this property to "
"administrative users only."
msgstr ""

#: heat/engine/resources/neutron/net.py:87
#: heat/engine/resources/neutron/provider_net.py:73
msgid "The status of the network."
msgstr ""

#: heat/engine/resources/neutron/net.py:90
msgid "The name of the network."
msgstr ""

#: heat/engine/resources/neutron/net.py:93
#: heat/engine/resources/neutron/provider_net.py:76
msgid "Subnets of this network."
msgstr ""

#: heat/engine/resources/neutron/net.py:96
msgid "The administrative status of the network."
msgstr ""

#: heat/engine/resources/neutron/net.py:99
msgid "The tenant owning this network."
msgstr ""

#: heat/engine/resources/neutron/network_gateway.py:62
msgid "The name of the network gateway."
msgstr ""

#: heat/engine/resources/neutron/network_gateway.py:67
msgid "Device info for this network gateway."
msgstr ""

#: heat/engine/resources/neutron/network_gateway.py:76
msgid "The device id for the network gateway."
msgstr ""

#: heat/engine/resources/neutron/network_gateway.py:82
msgid "The interface name for the network gateway."
msgstr ""

#: heat/engine/resources/neutron/network_gateway.py:91
msgid "Connection info for this network gateway."
msgstr ""

#: heat/engine/resources/neutron/network_gateway.py:106
msgid "The internal network to connect on the network gateway."
msgstr ""

#: heat/engine/resources/neutron/network_gateway.py:113
msgid "L2 segmentation strategy on the external side of the network gateway."
msgstr ""

#: heat/engine/resources/neutron/network_gateway.py:122
msgid ""
"The id for L2 segment on the external side of the network gateway. Must "
"be specified when using vlan."
msgstr ""

#: heat/engine/resources/neutron/network_gateway.py:135
msgid "A boolean value of default flag."
msgstr ""

#: heat/engine/resources/neutron/network_gateway.py:160
msgid "segmentation_id must be specified for using vlan"
msgstr ""

#: heat/engine/resources/neutron/network_gateway.py:164
msgid "segmentation_id cannot be specified except 0 for using flat"
msgstr ""

#: heat/engine/resources/neutron/neutron.py:61
#, python-format
msgid "Either %(prop_key)s or %(depr_prop_key)s should be specified."
msgstr ""

#: heat/engine/resources/neutron/neutron.py:124
#, python-format
msgid "neutron reported unexpected resource[%(name)s] status[%(status)s]"
msgstr ""

#: heat/engine/resources/neutron/neutron.py:133
#, python-format
msgid "failed to fetch resource attributes: %s"
msgstr ""

#: heat/engine/resources/neutron/port.py:75
msgid "Network this port belongs to."
msgstr ""

#: heat/engine/resources/neutron/port.py:80
msgid "A symbolic name for this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:85
msgid ""
"Extra parameters to include in the \"port\" object in the creation "
"request."
msgstr ""

#: heat/engine/resources/neutron/port.py:91
#: heat/engine/resources/neutron/port.py:166
msgid "The administrative state of this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:97
msgid "Desired IPs for this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:110
msgid "Subnet in which to allocate the IP address for this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:115
msgid "IP address desired in the subnet for this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:123
msgid "MAC address to give to this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:127
msgid "Device ID of this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:132
msgid "Security group IDs to associate with this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:138
msgid "Additional MAC/IP address pairs allowed to pass through the port."
msgstr ""

#: heat/engine/resources/neutron/port.py:145
msgid "MAC address to allow through this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:149
msgid "IP address to allow through this port."
msgstr ""

#: heat/engine/resources/neutron/port.py:157
msgid ""
"Name of the network owning the port. The value is typically "
"network:floatingip or network:router_interface or network:dhcp"
msgstr ""

#: heat/engine/resources/neutron/port.py:169
msgid "Unique identifier for the device."
msgstr ""

#: heat/engine/resources/neutron/port.py:172
msgid "Name of the network owning the port."
msgstr ""

#: heat/engine/resources/neutron/port.py:175
msgid "Fixed IP addresses."
msgstr ""

#: heat/engine/resources/neutron/port.py:178
msgid "MAC address of the port."
msgstr ""

#: heat/engine/resources/neutron/port.py:181
msgid "Friendly name of the port."
msgstr ""

#: heat/engine/resources/neutron/port.py:184
msgid "Unique identifier for the network owning the port."
msgstr ""

#: heat/engine/resources/neutron/port.py:187
msgid "A list of security groups for the port."
msgstr ""

#: heat/engine/resources/neutron/port.py:190
msgid "The status of the port."
msgstr ""

#: heat/engine/resources/neutron/port.py:193
msgid "Tenant owning the port."
msgstr ""

#: heat/engine/resources/neutron/port.py:196
msgid "Additional MAC/IP address pairs allowed to pass through a port."
msgstr ""

#: heat/engine/resources/neutron/provider_net.py:41
msgid "A string specifying the provider network type for the network."
msgstr ""

#: heat/engine/resources/neutron/provider_net.py:51
msgid "A string specifying physical network mapping for the network."
msgstr ""

#: heat/engine/resources/neutron/provider_net.py:58
msgid "A string specifying the segmentation id for the network."
msgstr ""

#: heat/engine/resources/neutron/provider_net.py:65
msgid "Whether this network should be shared across all tenants."
msgstr ""

#: heat/engine/resources/neutron/provider_net.py:92
msgid "segmentation_id not allowed for flat network type."
msgstr ""

#: heat/engine/resources/neutron/router.py:54
msgid "The name of the router."
msgstr ""

#: heat/engine/resources/neutron/router.py:59
msgid "External network gateway configuration for a router."
msgstr ""

#: heat/engine/resources/neutron/router.py:63
msgid "ID or name of the external network for the gateway."
msgstr ""

#: heat/engine/resources/neutron/router.py:69
msgid ""
"Enables Source NAT on the router gateway. NOTE: The default policy "
"setting in Neutron restricts usage of this property to administrative "
"users only."
msgstr ""

#: heat/engine/resources/neutron/router.py:79
#: heat/engine/resources/neutron/subnet.py:80
msgid "Extra parameters to include in the creation request."
msgstr ""

#: heat/engine/resources/neutron/router.py:85
msgid "The administrative state of the router."
msgstr ""

#: heat/engine/resources/neutron/router.py:91
msgid ""
"ID of the L3 agent. NOTE: The default policy setting in Neutron restricts"
" usage of this property to administrative users only."
msgstr ""

#: heat/engine/resources/neutron/router.py:100
msgid "The status of the router."
msgstr ""

#: heat/engine/resources/neutron/router.py:103
msgid "Gateway network for the router."
msgstr ""

#: heat/engine/resources/neutron/router.py:106
msgid "Friendly name of the router."
msgstr ""

#: heat/engine/resources/neutron/router.py:109
msgid "Administrative state of the router."
msgstr ""

#: heat/engine/resources/neutron/router.py:112
msgid "Tenant owning the router."
msgstr ""

#: heat/engine/resources/neutron/router.py:207
msgid "The router id."
msgstr ""

#: heat/engine/resources/neutron/router.py:218
msgid "The subnet, either subnet or port_id should be specified."
msgstr ""

#: heat/engine/resources/neutron/router.py:223
msgid "The port id, either subnet or port_id should be specified."
msgstr ""

#: heat/engine/resources/neutron/router.py:288
msgid ""
"RouterGateway resource is deprecated and should not be used. Instead use "
"the `external_gateway_info` property in the router resource to set up the"
" gateway."
msgstr ""

#: heat/engine/resources/neutron/router.py:302
msgid "ID of the router."
msgstr ""

#: heat/engine/resources/neutron/router.py:314
msgid "external network for the gateway."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:45
msgid ""
"The direction in which the security group rule is applied. For a compute "
"instance, an ingress security group rule matches traffic that is incoming"
" (ingress) for that instance. An egress rule is applied to traffic "
"leaving the instance."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:57
msgid "Ethertype of the traffic."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:65
msgid ""
"The minimum port number in the range that is matched by the security "
"group rule. If the protocol is TCP or UDP, this value must be less than "
"or equal to the value of the port_range_max attribute. If the protocol is"
" ICMP, this value must be an ICMP type."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:73
msgid ""
"The maximum port number in the range that is matched by the security "
"group rule. The port_range_min attribute constrains the port_range_max "
"attribute. If the protocol is ICMP, this value must be an ICMP type."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:80
msgid ""
"The protocol that is matched by the security group rule. Valid values "
"include tcp, udp, and icmp."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:85
msgid "Whether to specify a remote group or a remote IP prefix."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:94
msgid ""
"The remote group ID to be associated with this security group rule. If no"
" value is specified then this rule will use this security group for the "
"remote_group_id."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:100
msgid ""
"The remote IP prefix (CIDR) to be associated with this security group "
"rule."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:108
msgid ""
"A string specifying a symbolic name for the security group, which is not "
"required to be unique."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:119
msgid "List of security group rules."
msgstr ""

#: heat/engine/resources/neutron/security_group.py:137
msgid "Security groups cannot be assigned the name \"default\"."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:70
msgid "The ID of the attached network."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:75
msgid "The CIDR."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:86
msgid "The name of the subnet."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:91
msgid "The IP version, which is 4 or 6."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:99
msgid "A specified set of DNS name servers to be used."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:105
msgid "The gateway IP address."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:110
msgid "Set to true if DHCP is enabled and false if DHCP is disabled."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:116
msgid "The start and end addresses for the allocation pools."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:133
msgid ""
"The ID of the tenant who owns the network. Only administrative users can "
"specify a tenant ID other than their own."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:156
msgid "Friendly name of the subnet."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:159
msgid "Parent network of the subnet."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:162
msgid "Tenant owning the subnet."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:165
msgid "Ip allocation pools and their ranges."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:168
msgid "Ip of the subnet's gateway."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:171
msgid "Additional routes for this subnet."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:174
msgid "Ip version for the subnet."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:177
msgid "CIDR block notation for this subnet."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:180
msgid "List of dns nameservers."
msgstr ""

#: heat/engine/resources/neutron/subnet.py:183
msgid "'true' if DHCP is enabled for this subnet; 'false' otherwise."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:50
msgid "Name for the vpn service."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:55
msgid "Description for the vpn service."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:60
msgid "Administrative state for the vpn service."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:73
msgid "Subnet in which the vpn service will be created."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:78
msgid ""
"Unique identifier for the router to which the vpn service will be "
"inserted."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:86
msgid "The administrative state of the vpn service."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:89
msgid "The description of the vpn service."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:92
msgid "The name of the vpn service."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:95
msgid "The unique identifier of the router to which the vpn service was inserted."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:99
msgid "The status of the vpn service."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:102
msgid "The unique identifier of the subnet in which the vpn service was created."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:106
msgid "The unique identifier of the tenant owning the vpn service."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:183
msgid "Name for the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:188
msgid "Description for the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:193
msgid "Remote branch router public IPv4 address or IPv6 address or FQDN."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:199
msgid "Remote branch router identity."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:204
msgid "Remote subnet(s) in CIDR format."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:209
msgid "Maximum transmission unit size (in bytes) for the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:215
msgid "Dead Peer Detection protocol configuration for the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:220
msgid "Controls DPD protocol mode."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:230
msgid "Number of seconds for the DPD delay."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:235
msgid "Number of seconds for the DPD timeout."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:242
msgid "Pre-shared key string for the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:247
msgid "Initiator state in lowercase for the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:255
msgid "Administrative state for the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:261
msgid ""
"Unique identifier for the ike policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:267
msgid ""
"Unique identifier for the ipsec policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:273
msgid ""
"Unique identifier for the vpn service associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:281
msgid "The administrative state of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:284
msgid "The authentication mode of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:287
msgid "The description of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:290
msgid ""
"The dead peer detection protocol configuration of the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:294
msgid ""
"The unique identifier of ike policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:298
msgid "The initiator of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:301
msgid ""
"The unique identifier of ipsec policy associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:305
msgid ""
"The maximum transmission unit size (in bytes) of the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:309
msgid "The name of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:312
msgid "The remote branch router public IPv4 address or IPv6 address or FQDN."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:316
msgid "The remote subnet(s) in CIDR format of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:320
msgid "The remote branch router identity of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:324
msgid "The pre-shared key string of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:327
msgid "The route mode of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:330
msgid "The status of the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:333
msgid "The unique identifier of the tenant owning the ipsec site connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:337
msgid ""
"The unique identifier of vpn service associated with the ipsec site "
"connection."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:401
msgid "Name for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:406
msgid "Description for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:411
msgid "Authentication hash algorithm for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:419
msgid "Encryption algorithm for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:428
msgid "Negotiation mode for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:436
msgid "Safety assessment lifetime configuration for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:440
#: heat/engine/resources/neutron/vpnservice.py:609
msgid "Safety assessment lifetime units."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:448
#: heat/engine/resources/neutron/vpnservice.py:618
msgid "Safety assessment lifetime value in specified units."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:456
msgid "Perfect forward secrecy in lowercase for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:464
msgid "Version for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:474
msgid "The authentication hash algorithm used by the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:477
msgid "The description of the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:480
msgid "The encryption algorithm used by the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:483
msgid "The version of the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:486
msgid "The safety assessment lifetime configuration for the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:490
msgid "The name of the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:493
msgid "The perfect forward secrecy of the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:496
msgid "The negotiation mode of the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:499
msgid "The unique identifier of the tenant owning the ike policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:561
msgid "Name for the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:566
msgid "Description for the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:571
msgid "Transform protocol for the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:579
msgid "Encapsulation mode for the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:587
msgid "Authentication hash algorithm for the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:595
msgid "Encryption algorithm for the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:604
msgid "Safety assessment lifetime configuration for the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:626
msgid "Perfect forward secrecy for the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:636
msgid "The authentication hash algorithm of the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:639
msgid "The description of the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:642
msgid "The encapsulation mode of the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:645
msgid "The encryption algorithm of the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:648
msgid "The safety assessment lifetime configuration of the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:652
msgid "The name of the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:655
msgid "The perfect forward secrecy of the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:658
msgid "The unique identifier of the tenant owning the ipsec policy."
msgstr ""

#: heat/engine/resources/neutron/vpnservice.py:661
msgid "The transform protocol of the ipsec policy."
msgstr ""

#: heat/engine/resources/software_config/cloud_config.py:43
msgid ""
"Map representing the cloud-config data structure which will be formatted "
"as YAML."
msgstr ""

#: heat/engine/resources/software_config/multi_part.py:60
msgid "Parts belonging to this messsage."
msgstr ""

#: heat/engine/resources/software_config/multi_part.py:67
msgid ""
"Content of part to attach, either inline or by referencing the ID of "
"another software config resource"
msgstr ""

#: heat/engine/resources/software_config/multi_part.py:74
msgid "Optional filename to associate with part."
msgstr ""

#: heat/engine/resources/software_config/multi_part.py:78
msgid "Whether the part content is text or multipart."
msgstr ""

#: heat/engine/resources/software_config/multi_part.py:84
msgid "Optional subtype to specify with the type."
msgstr ""

#: heat/engine/resources/software_config/software_config.py:70
msgid "Name of the input."
msgstr ""

#: heat/engine/resources/software_config/software_config.py:75
msgid "Description of the input."
msgstr ""

#: heat/engine/resources/software_config/software_config.py:79
msgid "Type of the value of the input."
msgstr ""

#: heat/engine/resources/software_config/software_config.py:86
msgid "Default value for the input if none is specified."
msgstr ""

#: heat/engine/resources/software_config/software_config.py:93
msgid "Name of the output."
msgstr ""

#: heat/engine/resources/software_config/software_config.py:98
msgid "Description of the output."
msgstr ""

#: heat/engine/resources/software_config/software_config.py:102
msgid "Type of the value of the output."
msgstr ""

#: heat/engine/resources/software_config/software_config.py:109
msgid ""
"Denotes that the deployment is in an error state if this output has a "
"value."
msgstr ""

#: heat/engine/resources/software_config/software_config.py:118
msgid ""
"Namespace to group this software config by when delivered to a server. "
"This may imply what configuration tool is going to perform the "
"configuration."
msgstr ""

#: heat/engine/resources/software_config/software_config.py:125
msgid ""
"Configuration script or manifest which specifies what actual "
"configuration is performed."
msgstr ""

#: heat/engine/resources/software_config/software_config.py:130
msgid ""
"Map containing options specific to the configuration management tool used"
" by this resource."
msgstr ""

#: heat/engine/resources/software_config/software_config.py:135
msgid "Schema representing the inputs that this software config is expecting."
msgstr ""

#: heat/engine/resources/software_config/software_config.py:142
msgid "Schema representing the outputs that this software config will produce."
msgstr ""

#: heat/engine/resources/software_config/software_config.py:151
msgid "The config value of the software config."
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:108
msgid ""
"ID of software configuration resource to execute when applying to the "
"server."
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:114
msgid "ID of Nova server to apply configuration to."
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:118
msgid "Input values to apply to the software configuration on this server."
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:124
msgid "Which stack actions will result in this deployment being triggered."
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:132
msgid ""
"Name of the derived config associated with this deployment. This is used "
"to apply a sort order to the list of configurations currently deployed to"
" a server."
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:138
msgid ""
"How the server should signal to heat with the deployment output values. "
"CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. "
"HEAT_SIGNAL will allow calls to the Heat API resource-signal using the "
"provided keystone credentials. NO_SIGNAL will result in the resource "
"going to the COMPLETE state without waiting for any signal."
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:153
msgid "Captured stdout from the configuration execution."
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:156
msgid "Captured stderr from the configuration execution."
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:159
msgid "Returned status code from the configuration execution"
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:185
msgid "Not waiting for outputs signal"
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:188
msgid "Deploy data available"
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:240
#, python-format
msgid "Deployment to server failed: %s"
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:290
msgid "ID of the server being deployed to"
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:295
msgid "Name of the current action being deployed"
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:300
msgid "ID of the stack this deployment belongs to"
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:305
msgid "Name of this deployment resource in the stack"
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:313
msgid "ID of signal to use for signalling output values"
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:321
msgid "URL for API authentication"
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:326
msgid "Username for API authentication"
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:331
msgid "User ID for API authentication"
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:336
msgid "Password for API authentication"
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:341
msgid "ID of project for API authentication"
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:440
#, python-format
msgid "Deployment exited with non-zero status code: %s"
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:462
msgid "Outputs received"
msgstr ""

#: heat/engine/resources/software_config/software_deployment.py:493
#, python-format
msgid ""
"Resource %s's property user_data_format should be set to SOFTWARE_CONFIG "
"since there are software deployments on it."
msgstr ""

#: heat/engine/resources/software_config/structured_config.py:53
msgid ""
"Map representing the configuration data structure which will be "
"serialized to the chosen format."
msgstr ""

#: heat/engine/resources/software_config/structured_config.py:92
msgid "Name of key to use for substituting inputs during deployment"
msgstr ""

#: heat/openstack/common/gettextutils.py:320
msgid "Message objects do not support addition."
msgstr ""

#: heat/openstack/common/gettextutils.py:330
msgid ""
"Message objects do not support str() because they may contain non-ascii "
"characters. Please use unicode() or translate() instead."
msgstr ""

#: heat/openstack/common/lockutils.py:102
#, python-format
msgid "Unable to acquire lock on `%(filename)s` due to %(exception)s"
msgstr ""

#: heat/openstack/common/log.py:327
#, python-format
msgid "Deprecated: %s"
msgstr ""

#: heat/openstack/common/log.py:436
#, python-format
msgid "Error loading logging config %(log_config)s: %(err_msg)s"
msgstr ""

#: heat/openstack/common/log.py:486
#, python-format
msgid "syslog facility must be one of: %s"
msgstr ""

#: heat/openstack/common/log.py:729
#, python-format
msgid "Fatal call to deprecated config: %(msg)s"
msgstr ""

#: heat/openstack/common/policy.py:96
msgid "The JSON file that defines policies."
msgstr ""

#: heat/openstack/common/policy.py:99
msgid "Default rule. Enforced when a requested rule is not found."
msgstr ""

#: heat/openstack/common/policy.py:114
#, python-format
msgid "Policy doesn't allow %s to be performed."
msgstr ""

#: heat/openstack/common/policy.py:208
#, python-format
msgid "Rules must be an instance of dict or Rules, got %s instead"
msgstr ""

#: heat/openstack/common/processutils.py:58
msgid "Unexpected error while running command."
msgstr ""

#: heat/openstack/common/processutils.py:61
#, python-format
msgid ""
"%(description)s\n"
"Command: %(cmd)s\n"
"Exit code: %(exit_code)s\n"
"Stdout: %(stdout)r\n"
"Stderr: %(stderr)r"
msgstr ""

#: heat/openstack/common/processutils.py:143
#, python-format
msgid "Got unknown keyword args to utils.execute: %r"
msgstr ""

#: heat/openstack/common/processutils.py:149
msgid "Command requested root, but did not specify a root helper."
msgstr ""

#: heat/openstack/common/processutils.py:246
msgid "Environment not supported over SSH"
msgstr ""

#: heat/openstack/common/processutils.py:250
msgid "process_input not supported over SSH"
msgstr ""

#: heat/openstack/common/sslutils.py:47
#, python-format
msgid "Unable to find cert_file : %s"
msgstr ""

#: heat/openstack/common/sslutils.py:50
#, python-format
msgid "Unable to find ca_file : %s"
msgstr ""

#: heat/openstack/common/sslutils.py:53
#, python-format
msgid "Unable to find key_file : %s"
msgstr ""

#: heat/openstack/common/sslutils.py:95
#, python-format
msgid "Invalid SSL version : %s"
msgstr ""

#: heat/openstack/common/strutils.py:92
#, python-format
msgid "Unrecognized value '%(val)s', acceptable values are: %(acceptable)s"
msgstr ""

#: heat/openstack/common/strutils.py:197
#, python-format
msgid "Invalid unit system: \"%s\""
msgstr ""

#: heat/openstack/common/strutils.py:206
#, python-format
msgid "Invalid string format: %s"
msgstr ""

#: heat/openstack/common/versionutils.py:70
#, python-format
msgid ""
"%(what)s is deprecated as of %(as_of)s in favor of %(in_favor_of)s and "
"may be removed in %(remove_in)s."
msgstr ""

#: heat/openstack/common/versionutils.py:74
#, python-format
msgid ""
"%(what)s is deprecated as of %(as_of)s and may be removed in "
"%(remove_in)s. It will not be superseded."
msgstr ""

#: heat/openstack/common/crypto/utils.py:30
msgid "An unknown error occurred in crypto utils."
msgstr ""

#: heat/openstack/common/crypto/utils.py:37
#, python-format
msgid "Block size of %(given)d is too big, max = %(maximum)d"
msgstr ""

#: heat/openstack/common/crypto/utils.py:46
#, python-format
msgid "Length of %(given)d is too long, max = %(maximum)d"
msgstr ""

#: heat/openstack/common/db/exception.py:44
msgid "Invalid Parameter: Unicode is not supported by the current database."
msgstr ""

#: heat/openstack/common/db/sqlalchemy/migration.py:190
msgid "version should be an integer"
msgstr ""

#: heat/openstack/common/db/sqlalchemy/migration.py:226
#, python-format
msgid ""
"Tables \"%s\" have non utf8 collation, please make sure all tables are "
"CHARSET=utf8"
msgstr ""

#: heat/openstack/common/db/sqlalchemy/migration.py:250
msgid ""
"The database is not under version control, but has tables. Please stamp "
"the current version of the schema manually."
msgstr ""

#: heat/openstack/common/db/sqlalchemy/utils.py:58
msgid "Sort key supplied was not valid."
msgstr ""

#: heat/openstack/common/db/sqlalchemy/utils.py:119
msgid "Unknown sort direction, must be 'desc' or 'asc'"
msgstr ""

#: heat/openstack/common/db/sqlalchemy/utils.py:162
#, python-format
msgid ""
"There is no `deleted` column in `%s` table. Project doesn't use soft-"
"deleted feature."
msgstr ""

#: heat/openstack/common/db/sqlalchemy/utils.py:174
#, python-format
msgid "Unrecognized read_deleted value '%s'"
msgstr ""

#: heat/openstack/common/db/sqlalchemy/utils.py:181
#, python-format
msgid "There is no `project_id` column in `%s` table."
msgstr ""

#: heat/openstack/common/db/sqlalchemy/utils.py:243
msgid "model should be a subclass of ModelBase"
msgstr ""

#: heat/openstack/common/db/sqlalchemy/utils.py:294
#, python-format
msgid ""
"Please specify column %s in col_name_col_instance param. It is required "
"because column has unsupported type by sqlite)."
msgstr ""

#: heat/openstack/common/db/sqlalchemy/utils.py:300
#, python-format
msgid ""
"col_name_col_instance param has wrong type of column instance for column "
"%s It should be instance of sqlalchemy.Column."
msgstr ""

#: heat/openstack/common/db/sqlalchemy/utils.py:408
msgid "Unsupported id columns type"
msgstr ""

#: heat/tests/generic_resource.py:33
#, python-format
msgid "Creating generic resource (Type \"%s\")"
msgstr ""

#: heat/tests/generic_resource.py:37
#, python-format
msgid "Updating generic resource (Type \"%s\")"
msgstr ""

#: heat/tests/generic_resource.py:41
#, python-format
msgid "Deleting generic resource (Type \"%s\")"
msgstr ""

#: heat/tests/generic_resource.py:48
#, python-format
msgid "Suspending generic resource (Type \"%s\")"
msgstr ""

#: heat/tests/generic_resource.py:52
#, python-format
msgid "Resuming generic resource (Type \"%s\")"
msgstr ""

#: heat/tests/generic_resource.py:134
#, python-format
msgid "Signaled resource (Type \"%(type)s\") %(details)s"
msgstr ""

#: heat/tests/test_exception.py:25
#, python-format
msgid "Testing message %(text)s"
msgstr ""

#: heat/tests/test_function.py:23
msgid "Need more arguments"
msgstr ""

#: heat/tests/test_provider_template.py:422
#: heat/tests/test_provider_template.py:537
#: heat/tests/test_provider_template.py:565
msgid "Failed to retrieve template"
msgstr ""

#: heat/tests/test_server.py:906
#, python-format
msgid ""
"Properties \"uuid\" and \"network\" are both set to the network "
"\"%(network)s\" for the server \"%(server)s\". The \"uuid\" property is "
"deprecated. Use only \"network\" property."
msgstr ""

#: heat/tests/test_validate.py:1332
msgid "The InstanceType parameter must be assigned to one Parameter Group only."
msgstr ""

#: heat/tests/test_validate.py:1347
msgid ""
"The Parameter name (SomethingNotHere) does not reference an existing "
"parameter."
msgstr ""

